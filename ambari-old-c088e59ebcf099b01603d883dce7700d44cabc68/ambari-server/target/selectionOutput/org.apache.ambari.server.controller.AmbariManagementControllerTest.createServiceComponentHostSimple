org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r9 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r9 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r11 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r11 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r11.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r11.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r10.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r11)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r10.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r11) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r12 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repositoryVersion01>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r12 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repositoryVersion01> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.State)>(r1, "HDFS", $r12, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.State)>(r1, "HDFS", $r12, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r13 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r13 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", $r13)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", $r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", $r14)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", $r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", $r15)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", $r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r16)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r54 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r3, r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r3, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r17)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r17 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r52 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, "NAMENODE", r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", r3, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "DATANODE", r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", r3, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "HDFS_CLIENT", r3, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r53 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r23 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r25 = interfaceinvoke $r24.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r25 = interfaceinvoke $r24.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r27)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r28 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r28 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r30 = interfaceinvoke $r29.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r30 = interfaceinvoke $r29.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("DATANODE")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("DATANODE") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r32 = interfaceinvoke $r31.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r32 = interfaceinvoke $r31.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r32)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r33 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r33 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r35 = interfaceinvoke $r34.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r35 = interfaceinvoke $r34.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("DATANODE")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("DATANODE") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r37)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r38 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r38 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r39 = interfaceinvoke $r38.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r39 = interfaceinvoke $r38.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("HDFS_CLIENT")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("HDFS_CLIENT") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r42)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r43 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r43 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r44 = interfaceinvoke $r43.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r46 = interfaceinvoke $r45.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("HDFS_CLIENT")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r46 = interfaceinvoke $r45.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("HDFS_CLIENT") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r47)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r48 = new org.apache.ambari.server.controller.ServiceComponentHostRequest
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r48 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r48.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, "HDFS", "DATANODE", null, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke $r48.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, "HDFS", "DATANODE", null, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r49 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r49 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r48)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r8 = interfaceinvoke $r49.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r50)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : r8 = interfaceinvoke $r49.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r50) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $i0 = interfaceinvoke r8.<java.util.Set: int size()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $i0 = interfaceinvoke r8.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $l1 = (long) $i0
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : return
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r53 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r23 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail as duplicate") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r53 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r23 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r23 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = interfaceinvoke $r20.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = interfaceinvoke $r20.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r21.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r21 = interfaceinvoke $r20.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r21.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : interfaceinvoke $r21.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, "NAMENODE", r2, null)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should have failed earlier") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r51 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, "NAMENODE", r2, null)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, "NAMENODE", r2, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r17) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r17) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r52 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r18 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid state") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r52 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= $r18 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r18 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster")
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, "HDFS", "NAMENODE", r2, $r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r54 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("ServiceComponentHost creation should fail for invalid host as host not mapped to cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : $r54 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.createServiceComponentHostSimple : specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: void addHostToCluster(java.lang.String,java.lang.String)>(r2, r1)
