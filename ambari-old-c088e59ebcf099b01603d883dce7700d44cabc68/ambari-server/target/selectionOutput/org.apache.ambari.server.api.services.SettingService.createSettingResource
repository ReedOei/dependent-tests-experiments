org.apache.ambari.server.api.services.SettingService.createSettingResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Setting> >>>>>>>> org.apache.ambari.server.api.services.SettingService.createSettingResource : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Setting>
org.apache.ambari.server.api.services.SettingService.createSettingResource : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Setting> >>>>>>>> org.apache.ambari.server.api.services.SettingService.createSettingResource : $r4 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r2, r1)
org.apache.ambari.server.api.services.SettingService.createSettingResource : $r4 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r2, r1) >>>>>>>> org.apache.ambari.server.api.services.SettingService.createSettingResource : $r5 = virtualinvoke r0.<org.apache.ambari.server.api.services.SettingService: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>($r3, $r4)
org.apache.ambari.server.api.services.SettingService.createSettingResource : $r5 = virtualinvoke r0.<org.apache.ambari.server.api.services.SettingService: org.apache.ambari.server.api.resources.ResourceInstance createResource(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>($r3, $r4) >>>>>>>> org.apache.ambari.server.api.services.SettingService.createSettingResource : return $r5
