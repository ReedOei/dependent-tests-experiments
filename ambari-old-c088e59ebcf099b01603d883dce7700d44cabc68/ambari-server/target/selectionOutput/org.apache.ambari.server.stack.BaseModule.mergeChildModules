org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r9 = new java.util.HashSet
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r15 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r15 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r11 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r11 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r18 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r18 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z1 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : return $r9
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r19 = (org.apache.ambari.server.stack.StackDefinitionModule) $r12
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r19 = (org.apache.ambari.server.stack.StackDefinitionModule) $r12 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r20 = interfaceinvoke r19.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r20 = interfaceinvoke r19.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r20)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r19)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r16 = (org.apache.ambari.server.stack.StackDefinitionModule) $r13
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r16 = (org.apache.ambari.server.stack.StackDefinitionModule) $r13 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r17 = interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r17 = interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r17)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z5 = interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: boolean isDeleted()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z5 = interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: boolean isDeleted()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 != 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z7 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r17)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z7 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z7 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: void resolve(java.lang.Object,java.util.Map,java.util.Map,java.util.Map)>($r14, r1, r2, r3)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r16.<org.apache.ambari.server.stack.StackDefinitionModule: void resolve(java.lang.Object,java.util.Map,java.util.Map,java.util.Map)>($r14, r1, r2, r3) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke $r9.<java.util.Collection: boolean add(java.lang.Object)>(r16)
