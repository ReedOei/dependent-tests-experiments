org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : if r2 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r13 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : if r2 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r7 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r7 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse stack upgrade file at location: ")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse stack upgrade file at location: ") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : throw $r7
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r13 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Null upgrade pack")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Null upgrade pack") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : throw $r13
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r4 = r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.stack.ModuleFileUnmarshaller unmarshaller> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r5 = virtualinvoke $r4.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/UpgradePack;", r2)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r4 = r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.stack.ModuleFileUnmarshaller unmarshaller> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r6 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r5 = virtualinvoke $r4.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/UpgradePack;", r2) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : r14 = (org.apache.ambari.server.state.stack.UpgradePack) $r5
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r5 = virtualinvoke $r4.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/UpgradePack;", r2) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r6 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : r14 = (org.apache.ambari.server.state.stack.UpgradePack) $r5 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : virtualinvoke r14.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r1)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : r14 = (org.apache.ambari.server.state.stack.UpgradePack) $r5 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r6 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : virtualinvoke r14.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : goto [?= return r14]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : virtualinvoke r14.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : $r6 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : goto [?= return r14] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePack : return r14
