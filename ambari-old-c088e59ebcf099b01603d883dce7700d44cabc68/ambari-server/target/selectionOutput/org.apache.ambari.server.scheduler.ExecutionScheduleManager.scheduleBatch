org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z0 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean isSchedulerAvailable()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z0 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r41 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z1 = interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: boolean isSchedulerStarted()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r48 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r49 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r49.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to determine scheduler state.", $r48)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r49.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to determine scheduler state.", $r48) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r50 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r50 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r50.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r50.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : throw $r50
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z1 = interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: boolean isSchedulerStarted()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z1 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z1 = interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: boolean isSchedulerStarted()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r48 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z1 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r40 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z1 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r56 = specialinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.quartz.JobDetail persistBatch(org.apache.ambari.server.state.scheduler.RequestExecution)>(r1)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r56 = specialinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.quartz.JobDetail persistBatch(org.apache.ambari.server.state.scheduler.RequestExecution)>(r1)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r56 = specialinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.quartz.JobDetail persistBatch(org.apache.ambari.server.state.scheduler.RequestExecution)>(r1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r56 = specialinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.quartz.JobDetail persistBatch(org.apache.ambari.server.state.scheduler.RequestExecution)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r56 != null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r56 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r35 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r56 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r2 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r2 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r57 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getScheduleExpression()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r2 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r4 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r56)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r5 = virtualinvoke $r4.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r56) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestExecution-")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestExecution-") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r8 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r8 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>($r10, "LinearExecutionTriggers")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r11 = virtualinvoke $r5.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>($r10, "LinearExecutionTriggers") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r12 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r12 = staticinvoke <org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder simpleSchedule()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r13 = virtualinvoke $r12.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withMisfireHandlingInstructionFireNow()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r13 = virtualinvoke $r12.<org.quartz.SimpleScheduleBuilder: org.quartz.SimpleScheduleBuilder withMisfireHandlingInstructionFireNow()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r14 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r13)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r14 = virtualinvoke $r11.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r13) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r15 = virtualinvoke $r14.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startNow()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r67 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r67 = virtualinvoke $r15.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r67)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r51 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r52 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to schedule request execution.", $r51)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to schedule request execution.", $r51) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r53 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r53 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r54 = virtualinvoke $r51.<org.quartz.SchedulerException: java.lang.String getMessage()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r54 = virtualinvoke $r51.<org.quartz.SchedulerException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r53.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r54)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r53.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r54) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : throw $r53
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r67) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r17 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r67) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r51 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r17 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r18 = interfaceinvoke r67.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r17 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r51 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r18 = interfaceinvoke r67.<org.quartz.Trigger: java.util.Date getNextFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r18)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r18 = interfaceinvoke r67.<org.quartz.Trigger: java.util.Date getNextFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r51 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r18) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r18) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r51 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r57 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getScheduleExpression()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r58 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r58 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r60 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getStartTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r47 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to parse startTime / endTime.", $r46)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to parse startTime / endTime.", $r46) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r19 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r19 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestExecution-")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestExecution-") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r22 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r22 = interfaceinvoke r1.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r25 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>($r24, "LinearExecutionTriggers")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r25 = virtualinvoke $r19.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withIdentity(java.lang.String,java.lang.String)>($r24, "LinearExecutionTriggers") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r26 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>(r57)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r26 = staticinvoke <org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)>(r57) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r27 = virtualinvoke $r26.<org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder withMisfireHandlingInstructionFireAndProceed()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r27 = virtualinvoke $r26.<org.quartz.CronScheduleBuilder: org.quartz.CronScheduleBuilder withMisfireHandlingInstructionFireAndProceed()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r28 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r27)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r28 = virtualinvoke $r25.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)>($r27) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r29 = virtualinvoke $r28.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r56)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r29 = virtualinvoke $r28.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder forJob(org.quartz.JobDetail)>(r56) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r30 = virtualinvoke $r29.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r58)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r30 = virtualinvoke $r29.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder startAt(java.util.Date)>(r58) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r31 = virtualinvoke $r30.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>(r59)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r31 = virtualinvoke $r30.<org.quartz.TriggerBuilder: org.quartz.TriggerBuilder endAt(java.util.Date)>(r59) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r65 = virtualinvoke $r31.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r65 = virtualinvoke $r31.<org.quartz.TriggerBuilder: org.quartz.Trigger build()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r32 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r32 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r32.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r65)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r32 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r42 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r43 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r43.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to schedule request execution.", $r42)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r43.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to schedule request execution.", $r42) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r44 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r44 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r45 = virtualinvoke $r42.<org.quartz.SchedulerException: java.lang.String getMessage()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r45 = virtualinvoke $r42.<org.quartz.SchedulerException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r44.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r45)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r44.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : throw $r44
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r32.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r65) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r33 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r32.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r65) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r42 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r33 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r34 = interfaceinvoke r65.<org.quartz.Trigger: java.util.Date getNextFireTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r33 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r42 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r34 = interfaceinvoke r65.<org.quartz.Trigger: java.util.Date getNextFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r34)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r34 = interfaceinvoke r65.<org.quartz.Trigger: java.util.Date getNextFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r42 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r34) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduled trigger next fire time: {}", $r34) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r42 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r60 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getStartTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r61 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getEndTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r60 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getStartTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r61 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getEndTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r60 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r61 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Schedule: java.lang.String getEndTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r60 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z3 = virtualinvoke r60.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r60 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = new java.util.Date
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r60 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = new java.util.Date >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r62.<java.util.Date: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = new java.util.Date >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r62.<java.util.Date: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r58 = $r62
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r62.<java.util.Date: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r58 = $r62 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r61 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r61 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z2 = virtualinvoke r61.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r61 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if r61 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = $r63
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = $r63 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= $r19 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= $r19 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r19 = staticinvoke <org.quartz.TriggerBuilder: org.quartz.TriggerBuilder newTrigger()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z2 = virtualinvoke r61.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z2 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z2 = virtualinvoke r61.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z2 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r61)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z2 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z2 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r61) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r59 = $r63]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r63 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r61) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r59 = $r63] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r59 = $r63
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z3 = virtualinvoke r60.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z3 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $z3 = virtualinvoke r60.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z3 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r60)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z3 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = new java.util.Date
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : if $z3 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r60) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r58 = $r62]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r62 = staticinvoke <org.apache.ambari.server.utils.DateUtils: java.util.Date convertToDate(java.lang.String)>(r60) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r46 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r58 = $r62] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : r58 = $r62
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r35 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r36 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r36 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to schedule jobs. firstJobDetail = ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to schedule jobs. firstJobDetail = ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r35.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r39)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r35.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : throw $r35
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r40 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r40.<org.apache.ambari.server.scheduler.ExecutionScheduler: void startScheduler(java.lang.Integer)>(null)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r40 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r48 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r40.<org.apache.ambari.server.scheduler.ExecutionScheduler: void startScheduler(java.lang.Integer)>(null) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : goto [?= r56 = specialinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.quartz.JobDetail persistBatch(org.apache.ambari.server.state.scheduler.RequestExecution)>(r1)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : interfaceinvoke $r40.<org.apache.ambari.server.scheduler.ExecutionScheduler: void startScheduler(java.lang.Integer)>(null) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r48 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : $r41 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r41.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : specialinvoke $r41.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Scheduler unavailable.") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleBatch : throw $r41
