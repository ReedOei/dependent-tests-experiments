org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r8 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r9 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r9 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r4 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r10, $r11)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r4 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r10, $r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r12 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r12 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r5 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r5 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r3)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r6 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r3)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r6 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r15 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r15)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r18 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r3, "c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r3, "c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r20 = virtualinvoke $r19.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : $r20 = virtualinvoke $r19.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity sourceRepositoryVersion> = $r20
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity sourceRepositoryVersion> = $r20 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeClusterAndSourceRepo : return
