org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r2 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.parsers.RequestBodyParser bodyParser> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.String getBody()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r2 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.parsers.RequestBodyParser bodyParser> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : virtualinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void assertCreateRequest(org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation)>(r1) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r9 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Request request>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r9 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Request request> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Result process()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Result process()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r12 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r12 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r14 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r14 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r17 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.ResultStatus status>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r17 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.ResultStatus status> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r20 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.ResultStatus status>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r20 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.ResultStatus status> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $i0 = virtualinvoke $r20.<org.apache.ambari.server.api.services.ResultStatus: int getStatusCode()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $i0 = virtualinvoke $r20.<org.apache.ambari.server.api.services.ResultStatus: int getStatusCode()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(400)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(400) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r27 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.serializers.ResultSerializer serializer>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r27 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.serializers.ResultSerializer serializer> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r26 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r26 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.Result result> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.api.services.serializers.ResultSerializer: java.lang.Object serialize(org.apache.ambari.server.api.services.Result)>($r26)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.api.services.serializers.ResultSerializer: java.lang.Object serialize(org.apache.ambari.server.api.services.Result)>($r26) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r30 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: java.lang.Object serializedResult>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r30 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: java.lang.Object serializedResult> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : specialinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void replayMocks()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : specialinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void replayMocks()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : r36 = virtualinvoke r1.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: javax.ws.rs.core.Response invoke()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : r36 = virtualinvoke r1.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: javax.ws.rs.core.Response invoke()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r32 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: java.lang.Object serializedResult>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r32 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: java.lang.Object serializedResult> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r33 = virtualinvoke r36.<javax.ws.rs.core.Response: java.lang.Object getEntity()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r33 = virtualinvoke r36.<javax.ws.rs.core.Response: java.lang.Object getEntity()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $i1 = virtualinvoke r36.<javax.ws.rs.core.Response: int getStatus()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $i1 = virtualinvoke r36.<javax.ws.rs.core.Response: int getStatus()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $l2 = (long) $i1
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(400L, $l2)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(400L, $l2) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : specialinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void verifyAndResetMocks()>()
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : specialinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void verifyAndResetMocks()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : return
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.String getBody()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r4 = interfaceinvoke $r2.<org.apache.ambari.server.api.services.parsers.RequestBodyParser: java.util.Set parse(java.lang.String)>($r3)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r3 = virtualinvoke r1.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.String getBody()>() >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r4 = interfaceinvoke $r2.<org.apache.ambari.server.api.services.parsers.RequestBodyParser: java.util.Set parse(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r4 = interfaceinvoke $r2.<org.apache.ambari.server.api.services.parsers.RequestBodyParser: java.util.Set parse(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r6 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.RequestBody requestBody>
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r6 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.RequestBody requestBody> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r6 = r0.<org.apache.ambari.server.api.services.BaseServiceTest: org.apache.ambari.server.api.services.RequestBody requestBody> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r7)
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : goto [?= virtualinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void assertCreateRequest(org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation)>(r1)]
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : $r34 := @caughtexception
org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : goto [?= virtualinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void assertCreateRequest(org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation)>(r1)] >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest.testMethod_resultInErrorState : virtualinvoke r0.<org.apache.ambari.server.api.services.BaseServiceTest: void assertCreateRequest(org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation)>(r1)
