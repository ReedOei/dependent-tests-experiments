org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : r17 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Request: java.util.Set getPropertyIds()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r17 == null
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r17 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z0 = interfaceinvoke r17.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r17 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r7 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r8 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set propertyIds>
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r8 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set propertyIds> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r8)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : return $r7
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z0 = interfaceinvoke r17.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r7 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r9 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>(r17)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>(r17) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r2 == null
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r10 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds>
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r10 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z1 = interfaceinvoke $r10.<java.util.Set: boolean containsAll(java.util.Collection)>($r9)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z1 = interfaceinvoke $r10.<java.util.Set: boolean containsAll(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z1 != 0
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r11 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : return $r9
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r12 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r9)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r13 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds>
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r13 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r12.<java.util.Set: boolean removeAll(java.util.Collection)>($r13)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r12.<java.util.Set: boolean removeAll(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z3 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r14 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds>
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r14 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean retainAll(java.util.Collection)>($r14)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean retainAll(java.util.Collection)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r11)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : return $r9
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : r6 = (java.lang.String) $r15
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : r6 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseProvider: boolean checkCategory(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseProvider: boolean checkCategory(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z6 != 0
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.BaseProvider: boolean checkRegExp(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $z8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.BaseProvider: boolean checkRegExp(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z8 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r16)
org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r16) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRequestPropertyIds : $r10 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Set combinedIds>
