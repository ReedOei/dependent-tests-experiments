org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r5 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r3)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $z0 == 0
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : return
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r6 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r6 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r6
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r6 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r25 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r6 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r7 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.concurrent.ThreadPoolExecutor m_threadPoolExecutor>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r7 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.concurrent.ThreadPoolExecutor m_threadPoolExecutor> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r4 = virtualinvoke $r7.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>()
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r4 = virtualinvoke $r7.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>() >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : i0 = interfaceinvoke r4.<java.util.concurrent.BlockingQueue: int size()>()
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : i0 = interfaceinvoke r4.<java.util.concurrent.BlockingQueue: int size()>() >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d1 = (double) i0
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d1 = (double) i0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i1 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: int m_queueMaximumSize>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i1 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: int m_queueMaximumSize> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f0 = (float) $i1
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f0 = (float) $i1 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f1 = 0.9F * $f0
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f1 = 0.9F * $f0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d0 = (double) $f1
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d0 = (double) $f1 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d2 = staticinvoke <java.lang.Math: double floor(double)>($d0)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $d2 = staticinvoke <java.lang.Math: double floor(double)>($d0) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $b2 = $d1 cmpl $d2
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $b2 = $d1 cmpl $d2 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $b2 <= 0
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $b2 <= 0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r22 = <org.apache.ambari.server.state.services.MetricsRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if $b2 <= 0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r8 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r8 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = null
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = null >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r9 = <org.apache.ambari.server.state.services.MetricsRetrievalService$1: int[] $SwitchMap$org$apache$ambari$server$state$services$MetricsRetrievalService$MetricSourceType>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r9 = <org.apache.ambari.server.state.services.MetricsRetrievalService$1: int[] $SwitchMap$org$apache$ambari$server$state$services$MetricsRetrievalService$MetricSourceType> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i3 = virtualinvoke r1.<org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: int ordinal()>()
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i3 = virtualinvoke r1.<org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i4 = $r9[$i3]
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i4 = $r9[$i3] >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : lookupswitch($i4) {     case 1:
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : lookupswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r16 = new org.apache.ambari.server.state.services.MetricsRetrievalService$JMXRunnable
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : lookupswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r10 = new org.apache.ambari.server.state.services.MetricsRetrievalService$RESTRunnable
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : lookupswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r21 = <org.apache.ambari.server.state.services.MetricsRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r21 = <org.apache.ambari.server.state.services.MetricsRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to retrieve metrics for the unknown type {}", r1)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to retrieve metrics for the unknown type {}", r1) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == r27
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == r27 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r15 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.concurrent.ThreadPoolExecutor m_threadPoolExecutor>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == r27 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : return
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r15 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.concurrent.ThreadPoolExecutor m_threadPoolExecutor> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : virtualinvoke $r15.<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>(r27)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : virtualinvoke $r15.<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>(r27) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : return
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r10 = new org.apache.ambari.server.state.services.MetricsRetrievalService$RESTRunnable >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r14 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_restCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r14 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_restCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r13 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r13 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r12 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r12 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r11 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.gson.Gson m_gson>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r11 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.gson.Gson m_gson> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : specialinvoke $r10.<org.apache.ambari.server.state.services.MetricsRetrievalService$RESTRunnable: void <init>(com.google.common.cache.Cache,java.util.Set,com.google.common.cache.Cache,com.google.gson.Gson,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String,org.apache.ambari.server.state.services.MetricsRetrievalService$1)>($r14, $r13, $r12, $r11, r2, r3, null)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : specialinvoke $r10.<org.apache.ambari.server.state.services.MetricsRetrievalService$RESTRunnable: void <init>(com.google.common.cache.Cache,java.util.Set,com.google.common.cache.Cache,com.google.gson.Gson,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String,org.apache.ambari.server.state.services.MetricsRetrievalService$1)>($r14, $r13, $r12, $r11, r2, r3, null) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = $r10
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = $r10 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : goto [?= (branch)]
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == r27
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r16 = new org.apache.ambari.server.state.services.MetricsRetrievalService$JMXRunnable >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r20 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_jmxCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r20 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_jmxCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r19 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r19 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r18 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r18 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r17 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.codehaus.jackson.map.ObjectReader m_jmxObjectReader>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r17 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.codehaus.jackson.map.ObjectReader m_jmxObjectReader> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : specialinvoke $r16.<org.apache.ambari.server.state.services.MetricsRetrievalService$JMXRunnable: void <init>(com.google.common.cache.Cache,java.util.Set,com.google.common.cache.Cache,org.codehaus.jackson.map.ObjectReader,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String,org.apache.ambari.server.state.services.MetricsRetrievalService$1)>($r20, $r19, $r18, $r17, r2, r3, null)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : specialinvoke $r16.<org.apache.ambari.server.state.services.MetricsRetrievalService$JMXRunnable: void <init>(com.google.common.cache.Cache,java.util.Set,com.google.common.cache.Cache,org.codehaus.jackson.map.ObjectReader,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String,org.apache.ambari.server.state.services.MetricsRetrievalService$1)>($r20, $r19, $r18, $r17, r2, r3, null) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = $r16
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : r27 = $r16 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : goto [?= (branch)]
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == r27
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r22 = <org.apache.ambari.server.state.services.MetricsRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f3 = (float) i0
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f3 = (float) i0 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i5 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: int m_queueMaximumSize>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $i5 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: int m_queueMaximumSize> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f2 = (float) $i5
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f2 = (float) $i5 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f4 = $f3 / $f2
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f4 = $f3 / $f2 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f5 = $f4 * 100.0F
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $f5 = $f4 * 100.0F >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("The worker queue contains {} work items and is at {}% of capacity", $r23, $r24)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("The worker queue contains {} work items and is at {}% of capacity", $r23, $r24) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r8 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.Set m_queuedUrls>
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r25 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.cache.Cache m_ttlUrlCache> >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r26 = interfaceinvoke $r25.<com.google.common.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r3)
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r26 = interfaceinvoke $r25.<com.google.common.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r26
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r26 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : return
org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : if null == $r26 >>>>>>>> org.apache.ambari.server.state.services.MetricsRetrievalService.submitRequest : $r7 = r0.<org.apache.ambari.server.state.services.MetricsRetrievalService: java.util.concurrent.ThreadPoolExecutor m_threadPoolExecutor>
