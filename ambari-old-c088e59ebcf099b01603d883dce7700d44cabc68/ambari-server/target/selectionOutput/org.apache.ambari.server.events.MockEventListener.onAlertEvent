org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r2 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAlertEvents> >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : r9 = (java.util.List) $r4
org.apache.ambari.server.events.MockEventListener.onAlertEvent : r9 = (java.util.List) $r4 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : if null != r9
org.apache.ambari.server.events.MockEventListener.onAlertEvent : if null != r9 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r5 = new java.util.ArrayList
org.apache.ambari.server.events.MockEventListener.onAlertEvent : if null != r9 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.events.MockEventListener.onAlertEvent : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : return
org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.events.MockEventListener.onAlertEvent : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : r9 = $r5
org.apache.ambari.server.events.MockEventListener.onAlertEvent : r9 = $r5 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r6 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAlertEvents>
org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r6 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAlertEvents> >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.events.MockEventListener.onAlertEvent : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5)
org.apache.ambari.server.events.MockEventListener.onAlertEvent : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAlertEvent : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r1)
