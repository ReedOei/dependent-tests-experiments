org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = null
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r9 = new java.util.Properties
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : return
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : throw $r20
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r9 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r9 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r9 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r9.<java.util.Properties: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r9.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r9.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r9.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: void load(java.io.InputStream)>(r3)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: void load(java.io.InputStream)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: void load(java.io.InputStream)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: void load(java.io.InputStream)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r10 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r10 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r10 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r10 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r11 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r11 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r11 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r11 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("setting up logging for view {} as per property file {}", $r11, "view.log4j.properties")
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("setting up logging for view {} as per property file {}", $r11, "view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("setting up logging for view {} as per property file {}", $r11, "view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("setting up logging for view {} as per property file {}", $r11, "view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties")
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r21 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r21
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r12 = new java.util.Properties
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r9)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r18 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r19 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r18 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r19 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Error occurred while configuring logs for {}", $r19)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r19 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Error occurred while configuring logs for {}", $r19) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r21)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Error occurred while configuring logs for {}", $r19) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= return]
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : return
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r21)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= return]
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : return
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r12 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r12 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r12 = new java.util.Properties >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r12.<java.util.Properties: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r12.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r12.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : specialinvoke $r12.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r12.<java.util.Properties: void load(java.io.InputStream)>(r21)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r12.<java.util.Properties: void load(java.io.InputStream)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r12.<java.util.Properties: void load(java.io.InputStream)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r12.<java.util.Properties: void load(java.io.InputStream)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r13 = virtualinvoke $r12.<java.util.Properties: java.util.Set keySet()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r13 = virtualinvoke $r12.<java.util.Properties: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r13 = virtualinvoke $r12.<java.util.Properties: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r13 = virtualinvoke $r12.<java.util.Properties: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r5 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r9)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r7 = (java.lang.String) r6
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r7 = (java.lang.String) r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r7 = (java.lang.String) r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r7 = (java.lang.String) r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("log4j.")
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("log4j.") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("log4j.") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("log4j.") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r7)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r14 = virtualinvoke $r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r14 = virtualinvoke $r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r14 = virtualinvoke $r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r14 = virtualinvoke $r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r14)
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : virtualinvoke $r9.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : $r20 := @caughtexception
