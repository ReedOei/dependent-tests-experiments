org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r2 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r2 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r18 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r6 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_AUTH_TO_LOCAL_PROPERTIES>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r6 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_AUTH_TO_LOCAL_PROPERTIES> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r8.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r31 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r11 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_CONFIGURATIONS>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r11 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_CONFIGURATIONS> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r4 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r32 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r14
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r32 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r14 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r15 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r15 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r18 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r18.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r18.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r19 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r19 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r28 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r28 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r23 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r20 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_IDENTITIES>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r20 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String KEY_IDENTITIES> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r21 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r21 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r3 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r23 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r29 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r23
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r29 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r23 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r24 = virtualinvoke r29.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r24 = virtualinvoke r29.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r25 = virtualinvoke r29.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r25 = virtualinvoke r29.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
