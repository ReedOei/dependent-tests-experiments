org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r8 = (java.lang.String) $r7
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r8)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r10)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r11 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r11 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = (java.lang.String) $r12
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r13)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r13) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r29 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r29 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r37 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r37 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r37)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r37.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r37.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r38 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r15
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r38 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r38)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r39 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r39 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = virtualinvoke r38.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r16)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r39)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r39) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r39.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r39.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r39.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = (java.lang.String) $r17
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r18)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r18) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : return
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r30 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r19
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r30 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r19 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r31 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r31 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r31)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r31) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = null
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i5)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r26 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r35.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r35.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r31.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = virtualinvoke r36.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = virtualinvoke r36.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = virtualinvoke r32.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r30.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r6.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r6.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i7)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r24)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r25 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r25 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r25)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r26 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r34 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r26
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r34 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r26 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = "/shared"
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = "/shared" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r34.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r34.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = r34
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r32 = r34 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r32)
