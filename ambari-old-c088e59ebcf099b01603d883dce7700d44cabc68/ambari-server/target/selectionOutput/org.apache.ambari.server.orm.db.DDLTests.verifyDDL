org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r3 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking DDL for {}", r1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking DDL for {}", r1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r2 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>(r1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r2 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.apache.ambari.server.orm.db.DDLTests: void printDDLMetrics(org.apache.ambari.server.orm.db.DDL)>(r2)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.apache.ambari.server.orm.db.DDLTests: void printDDLMetrics(org.apache.ambari.server.orm.db.DDL)>(r2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r4 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.List alterTables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r4 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.List alterTables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i0 = interfaceinvoke $r4.<java.util.List: int size()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i0 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $l1 = (long) $i0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Expected count of alter tables mismatch. Please include all constraint definitions in the create table statement, only use alter table in exceptional cases, such as to work around a circular FK dependency. Would another such case occur, please document it in the DDL\'s and adjust the EXPECTED_ALTER_TABLE_COUNT in this test.", 1L, $l1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Expected count of alter tables mismatch. Please include all constraint definitions in the create table statement, only use alter table in exceptional cases, such as to work around a circular FK dependency. Would another such case occur, please document it in the DDL\'s and adjust the EXPECTED_ALTER_TABLE_COUNT in this test.", 1L, $l1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r5 = virtualinvoke r2.<org.apache.ambari.server.orm.db.DDL: java.util.Set tableNames()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r5 = virtualinvoke r2.<org.apache.ambari.server.orm.db.DDL: java.util.Set tableNames()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r52 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r52 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r47 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r6 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r6 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r54 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r54 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z1 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r27 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r8 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r8 = r2.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r58 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r58 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r10 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : return
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r10 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r59 = (org.apache.ambari.server.orm.db.Table) $r10
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r59 = (org.apache.ambari.server.orm.db.Table) $r10 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unnamed PK exists for table: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unnamed PK exists for table: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r13 = r59.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r13 = r59.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r60 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r60 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r15 = r59.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r15 = r59.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z3 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("qrtz")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z3 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("qrtz") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 != 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r22 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r60, $z11)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r60, $z11) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r61 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r61 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r62 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r62 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r63 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r61, $r62)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r63 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r61, $r62) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r64 = virtualinvoke $r63.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r64 = virtualinvoke $r63.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r16 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r16 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r65 = (org.apache.ambari.server.orm.db.Constraint) $r16
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r65 = (org.apache.ambari.server.orm.db.Constraint) $r16 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r21 = virtualinvoke r65.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r21 = virtualinvoke r65.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i2 = virtualinvoke $r21.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i2 = virtualinvoke $r21.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r20, $z13)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r20, $z13) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z12 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z12 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r20, $z13)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r20, $z13)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r20, $z13)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r22 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = virtualinvoke $r22.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = virtualinvoke $r22.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z4 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r23 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r23 = r59.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r24 = virtualinvoke $r23.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r24 = virtualinvoke $r23.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r25 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r24
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r25 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r24 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("<default>")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("<default>") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r60, $z11)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r60, $z11)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r60, $z11)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r27 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r55 = (org.apache.ambari.server.orm.db.Table) $r27
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r55 = (org.apache.ambari.server.orm.db.Table) $r27 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PK name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PK name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r30 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r30 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r33 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r33 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = virtualinvoke $r33.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = virtualinvoke $r33.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z6 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z6 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r43 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z6 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r32, $z8)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r32, $z8)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r32, $z8)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r32, $z8) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r35 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r35 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r34 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r34 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r36 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r35, $r34)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r36 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r35, $r34) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r56 = virtualinvoke $r36.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r56 = virtualinvoke $r36.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r37 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r37 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r57 = (org.apache.ambari.server.orm.db.Constraint) $r37
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r57 = (org.apache.ambari.server.orm.db.Constraint) $r37 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r38 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r42 = virtualinvoke r57.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r42 = virtualinvoke r57.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i3 = virtualinvoke $r42.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i3 = virtualinvoke $r42.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r41, $z10)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r41, $z10) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z9 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r41, $z10)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r41, $z10)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r41, $z10)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r43 = r55.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r44 = virtualinvoke $r43.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r44 = virtualinvoke $r43.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r45 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r44
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r45 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r44 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r46 = virtualinvoke $r45.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r46 = virtualinvoke $r45.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i4 = virtualinvoke $r46.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i4 = virtualinvoke $r46.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r32, $z8)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r47 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r53 = (java.lang.String) $r47
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r53 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r48 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r48 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i5 = virtualinvoke r53.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i5 = virtualinvoke r53.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r51, $z7)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r51, $z7) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r51, $z7)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r51, $z7)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r51, $z7)
