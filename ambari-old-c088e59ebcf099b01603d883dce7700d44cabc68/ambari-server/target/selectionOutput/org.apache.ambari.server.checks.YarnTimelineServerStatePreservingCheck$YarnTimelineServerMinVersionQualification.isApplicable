org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r10 = r0.<org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification: org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck this$0> >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r11 = $r10.<org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r11 = $r10.<org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r12 = interfaceinvoke $r11.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r12 = interfaceinvoke $r11.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r13 = (org.apache.ambari.server.state.Clusters) $r12
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r13 = (org.apache.ambari.server.state.Clusters) $r12 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r14 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r14 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r2 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r2 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r20 = null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r20 = null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r21 = null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r21 = null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r3 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r3 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r3 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r21 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r21 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z2 = interfaceinvoke r21.<java.util.Map: boolean containsKey(java.lang.Object)>("min-applicable-stack-version")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r21 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r20 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r20 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z0 = virtualinvoke r20.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r20 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z0 = virtualinvoke r20.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z0 != 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r4 = virtualinvoke r20.<java.lang.String: java.lang.String[] split(java.lang.String)>("-")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r4 = virtualinvoke r20.<java.lang.String: java.lang.String[] split(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $i0 = lengthof r4
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i0 != 2
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i0 != 2 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r5 = r4[0]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i0 != 2 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r5 = r4[0] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r6 = r4[1]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r6 = r4[1] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r8 = virtualinvoke $r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r8 = virtualinvoke $r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r8)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z1 == 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r16 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r16 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r9 = virtualinvoke $r16.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r9 = virtualinvoke $r16.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r9, r6)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r9, r6) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i1 < 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i1 < 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z3 = 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $i1 < 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z3 = 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z3 = 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return $z3
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z3 = 1 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : goto [?= return $z3]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : return $z3
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $z2 = interfaceinvoke r21.<java.util.Map: boolean containsKey(java.lang.Object)>("min-applicable-stack-version") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z2 == 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r17 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("min-applicable-stack-version")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r20 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r17 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("min-applicable-stack-version") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r20 = (java.lang.String) $r17
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r20 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r20 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r21 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r19)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : r21 = virtualinvoke r3.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck$YarnTimelineServerMinVersionQualification.isApplicable : if r21 == null
