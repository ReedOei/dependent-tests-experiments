org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r44 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to obtain host instance \'%s\' when persisting host resources", $r45)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to obtain host instance \'%s\' when persisting host resources", $r45) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r44
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r9 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r9 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r32 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r31 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster for clusterId = ")
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r35, $r30)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r35, $r30) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r36 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r36 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r36
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r55 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(l0)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r55 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= r57 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r55 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= r57 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r57 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r57 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r13 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/cluster_name", r57)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/cluster_name", r57) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/host_name", r1)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/host_name", r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r14 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r14 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/rack_info", $r14)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/rack_info", $r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r15 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/rack_info", $r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r48 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r48.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to create host component resource for host {}", r1, $r47)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r48.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to create host component resource for host {}", r1, $r47) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r49 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r49 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r51 = virtualinvoke $r47.<java.lang.Exception: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r51 = virtualinvoke $r47.<java.lang.Exception: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50[1] = $r51
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50[1] = $r51 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host resource for host \'%s\': %s", $r50)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host resource for host \'%s\': %s", $r50) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r52, $r47)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r52, $r47) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r49
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r15 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16 = new org.apache.ambari.server.controller.internal.RequestImpl
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r15 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r13)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r16.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r17, null, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r16.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r17, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r15.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r16)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r16.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r17, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r15.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r16) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r18 = new java.util.HashSet]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r15.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r16) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r18 = new java.util.HashSet] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r18 = new java.util.HashSet
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r18 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r18.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r18.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r19 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r19 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r60 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r60 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r21 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r20 = new org.apache.ambari.server.topology.AmbariContext$3
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r20 = new org.apache.ambari.server.topology.AmbariContext$3 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r20.<org.apache.ambari.server.topology.AmbariContext$3: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, $r18)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r20 = new org.apache.ambari.server.topology.AmbariContext$3 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to create host component resource for host {}", r1, $r37)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to create host component resource for host {}", r1, $r37) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r39 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r39 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r41 = virtualinvoke $r37.<org.apache.ambari.server.AmbariException: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r41 = virtualinvoke $r37.<org.apache.ambari.server.AmbariException: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[1] = $r41
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[1] = $r41 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host component resource for host \'%s\': %s", $r40)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host component resource for host \'%s\': %s", $r40) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, $r37)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, $r37) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r39
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r20.<org.apache.ambari.server.topology.AmbariContext$3: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, $r18) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r20)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r20.<org.apache.ambari.server.topology.AmbariContext$3: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, $r18) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r20) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= return]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r20) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : return
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r21 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r5 = (java.util.Map$Entry) $r21
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r5 = (java.util.Map$Entry) $r21 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r6 = (java.lang.String) $r22
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r6 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r23 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r23 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r24 = (java.util.Collection) $r23
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r24 = (java.util.Collection) $r23 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r7 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r7 = interfaceinvoke $r24.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r25 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r25 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r8 = (java.lang.String) $r25
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r8 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r26 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r6)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r8 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r54 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r54.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Service already deleted from cluster: {}", r6)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r54.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Service already deleted from cluster: {}", r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r26 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $r26 == null
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r26 = interfaceinvoke r55.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $r26 == null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r27 = <org.apache.ambari.server.controller.RootComponent: org.apache.ambari.server.controller.RootComponent AMBARI_SERVER>
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $r26 == null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r27 = <org.apache.ambari.server.controller.RootComponent: org.apache.ambari.server.controller.RootComponent AMBARI_SERVER> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r28 = virtualinvoke $r27.<org.apache.ambari.server.controller.RootComponent: java.lang.String name()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r27 = <org.apache.ambari.server.controller.RootComponent: org.apache.ambari.server.controller.RootComponent AMBARI_SERVER> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r28 = virtualinvoke $r27.<org.apache.ambari.server.controller.RootComponent: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r28 = virtualinvoke $r27.<org.apache.ambari.server.controller.RootComponent: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r29 = new org.apache.ambari.server.controller.ServiceComponentHostRequest
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r29 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r29.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r57, r6, r8, r1, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r29 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r29.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r57, r6, r8, r1, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r29.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r57, r6, r8, r1, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r53 := @caughtexception
