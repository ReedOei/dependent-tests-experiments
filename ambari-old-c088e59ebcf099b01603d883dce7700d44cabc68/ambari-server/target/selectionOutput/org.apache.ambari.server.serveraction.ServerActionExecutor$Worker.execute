org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r49 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r2 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r48 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r3 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r3 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r3 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r47 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ACTION_NAME")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ACTION_NAME") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r4 = (java.lang.String) $r12
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r4 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r4 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r46 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r13 = new java.util.HashMap
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r6 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.state.UpgradeContext$UpgradeSummary getUpgradeSummary()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r6 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.state.UpgradeContext$UpgradeSummary getUpgradeSummary()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r6 == null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r6 == null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r50 = r6.<org.apache.ambari.server.state.UpgradeContext$UpgradeSummary: java.util.Map services>
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r6 == null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r53 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: org.apache.ambari.server.serveraction.ServerAction createServerAction(java.lang.String,java.util.Map)>(r4, $r13)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r53 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: org.apache.ambari.server.serveraction.ServerAction createServerAction(java.lang.String,java.util.Map)>(r4, $r13) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r53 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r53 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r17 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r53 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: void setExecutionCommand(org.apache.ambari.server.agent.ExecutionCommand)>(r2)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: void setExecutionCommand(org.apache.ambari.server.agent.ExecutionCommand)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: void setHostRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r1)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: void setHostRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r14 = r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: org.apache.ambari.server.serveraction.ServerActionExecutor this$0>
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r14 = r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: org.apache.ambari.server.serveraction.ServerActionExecutor this$0> >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $l0 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $l0 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r15 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: java.util.concurrent.ConcurrentMap access$800(org.apache.ambari.server.serveraction.ServerActionExecutor,long)>($r14, $l0)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r15 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: java.util.concurrent.ConcurrentMap access$800(org.apache.ambari.server.serveraction.ServerActionExecutor,long)>($r14, $l0) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r16 = interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: org.apache.ambari.server.agent.CommandReport execute(java.util.concurrent.ConcurrentMap)>($r15)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r16 = interfaceinvoke r53.<org.apache.ambari.server.serveraction.ServerAction: org.apache.ambari.server.agent.CommandReport execute(java.util.concurrent.ConcurrentMap)>($r15) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : return $r16
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r17 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r18 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create server action: ")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create server action: ") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r17.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r17.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : throw $r17
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r50 = r6.<org.apache.ambari.server.state.UpgradeContext$UpgradeSummary: java.util.Map services> >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r22 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r22 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UpgradeServiceSummary: ")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UpgradeServiceSummary: ") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r26)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r27 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: com.google.inject.Injector access$700()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r27 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: com.google.inject.Injector access$700()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r28 = interfaceinvoke $r27.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r28 = interfaceinvoke $r27.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r28
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r28 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r8 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r8 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r9 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r9 = virtualinvoke r2.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r9 == null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r9 == null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if r9 == null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r29 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r29 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r30 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r30 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r30[0] = r4
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r30[0] = r4 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Server action %s is not associated with a service", $r30)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Server action %s is not associated with a service", $r30) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>($r31)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r32 = interfaceinvoke r50.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r32 = interfaceinvoke r50.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r52 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r52 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $z1 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $z1 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z1 == 0
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r38 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r33 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r33 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r34 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r34 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r35 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r35 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r34[0] = $r36
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r34[0] = $r36 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to load server action classes from %s", $r34)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to load server action classes from %s", $r34) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r37)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r53 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: org.apache.ambari.server.serveraction.ServerAction createServerAction(java.lang.String,java.util.Map)>(r4, $r13)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r38 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r10 = (java.lang.String) $r38
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r10 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r39 = interfaceinvoke r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r39 = interfaceinvoke r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r11 = (org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary) $r39
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r11 = (org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary) $r39 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r40 = r11.<org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary: java.lang.String sourceStackId>
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r40 = r11.<org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary: java.lang.String sourceStackId> >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: void addServiceInfo(java.util.Map,org.apache.ambari.server.api.services.AmbariMetaInfo,java.lang.String,java.lang.String)>($r13, r8, $r40, r10)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: void addServiceInfo(java.util.Map,org.apache.ambari.server.api.services.AmbariMetaInfo,java.lang.String,java.lang.String)>($r13, r8, $r40, r10) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : goto [?= $z1 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : goto [?= $z1 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $z1 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z0 != 0
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r41 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r29 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r41 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42[0] = r4
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42[0] = r4 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42[1] = r9
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r42[1] = r9 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Server action %s is associated with service %s", $r42)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Server action %s is associated with service %s", $r42) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r41.<org.slf4j.Logger: void info(java.lang.String)>($r43)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : interfaceinvoke $r41.<org.slf4j.Logger: void info(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r44 = interfaceinvoke r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r44 = interfaceinvoke r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r51 = (org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary) $r44
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : r51 = (org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary) $r44 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r45 = r51.<org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary: java.lang.String sourceStackId>
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r45 = r51.<org.apache.ambari.server.state.UpgradeContext$UpgradeServiceSummary: java.lang.String sourceStackId> >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: void addServiceInfo(java.util.Map,org.apache.ambari.server.api.services.AmbariMetaInfo,java.lang.String,java.lang.String)>($r13, r8, $r45, r9)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: void addServiceInfo(java.util.Map,org.apache.ambari.server.api.services.AmbariMetaInfo,java.lang.String,java.lang.String)>($r13, r8, $r45, r9) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : goto [?= $r33 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : goto [?= $r33 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r33 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r46 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r46.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing action classname for server action")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r46.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing action classname for server action") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : throw $r46
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r47 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r47.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing RoleParams data")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r47.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing RoleParams data") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : throw $r47
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r48 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r48.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing ExecutionCommand data")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r48.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing ExecutionCommand data") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : throw $r48
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : $r49 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r49.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing HostRoleCommand data")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : specialinvoke $r49.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing HostRoleCommand data") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.execute : throw $r49
