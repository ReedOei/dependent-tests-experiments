org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r2 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r2)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r5 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r5 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r3 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r3 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r4 = $r3.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r4 = $r3.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r4)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r6 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r6 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r7 = $r6.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r7 = $r6.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP-2.3", $r7)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP-2.3", $r7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r8 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r8 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r9 = $r8.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r9 = $r8.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.3.4.1", $r9)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.3.4.1", $r9) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r10 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r10 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r11 = $r10.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r11 = $r10.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.3.4.[1-9]", $r11)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.3.4.[1-9]", $r11) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r12 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r12 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r13 = $r12.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r13 = $r12.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.3.4/", $r13)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.3.4/", $r13) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r14 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r14 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i0 = interfaceinvoke $r14.<java.util.List: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i0 = interfaceinvoke $r14.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l1 = (long) $i0
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $l1) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r15 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r15 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r17 = (org.apache.ambari.server.state.repository.ManifestService) $r16
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r17 = (org.apache.ambari.server.state.repository.ManifestService) $r16 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r18 = $r17.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r18 = $r17.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS-271", $r18)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS-271", $r18) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r19 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r19 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r21 = (org.apache.ambari.server.state.repository.ManifestService) $r20
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r21 = (org.apache.ambari.server.state.repository.ManifestService) $r20 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r22 = $r21.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r22 = $r21.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r22)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r22) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r23 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r23 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r25 = (org.apache.ambari.server.state.repository.ManifestService) $r24
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r25 = (org.apache.ambari.server.state.repository.ManifestService) $r24 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r26 = $r25.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r26 = $r25.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.7.1", $r26)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("2.7.1", $r26) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r27 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r27 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r29 = (org.apache.ambari.server.state.repository.ManifestService) $r28
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r29 = (org.apache.ambari.server.state.repository.ManifestService) $r28 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r30 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r30 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r30)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("10", $r30) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r31 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r31 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i2 = interfaceinvoke $r31.<java.util.List: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i2 = interfaceinvoke $r31.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l3 = (long) $i2
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l3) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r32 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r32 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r34 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r33
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r34 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r33 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r35 = $r34.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r35 = $r34.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS-271", $r35)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS-271", $r35) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r36 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r36 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r38 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r37
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r38 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r37 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r39 = $r38.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r39 = $r38.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i4 = interfaceinvoke $r39.<java.util.Set: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i4 = interfaceinvoke $r39.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l5 = (long) $i4
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l5 = (long) $i4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r40 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r40 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(2)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r42 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r41
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r42 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r41 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r43 = $r42.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r43 = $r42.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HIVE-110", $r43)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HIVE-110", $r43) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r44 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r44 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r45 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(2)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r45 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r46 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r45
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r46 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r45 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r47 = $r46.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r47 = $r46.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i6 = interfaceinvoke $r47.<java.util.Set: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i6 = interfaceinvoke $r47.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l7 = (long) $i6
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l7 = (long) $i6 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r48 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r48 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r48)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r49 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r49 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r50 = virtualinvoke $r49.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r50 = virtualinvoke $r49.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i8 = interfaceinvoke $r50.<java.util.List: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i8 = interfaceinvoke $r50.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l9 = (long) $i8
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l9 = (long) $i8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l9) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r51 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r51 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r52 = virtualinvoke $r51.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r52 = virtualinvoke $r51.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r53 = interfaceinvoke $r52.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r53 = interfaceinvoke $r52.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r54 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r53
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r54 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r53 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r55 = virtualinvoke $r54.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r55 = virtualinvoke $r54.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("redhat6", $r55)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("redhat6", $r55) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r56 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r56 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r57 = virtualinvoke $r56.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r57 = virtualinvoke $r56.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r58 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r58 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r59 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r58
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r59 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r58 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r60 = virtualinvoke $r59.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r60 = virtualinvoke $r59.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i10 = interfaceinvoke $r60.<java.util.List: int size()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $i10 = interfaceinvoke $r60.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l11 = (long) $i10
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $l11 = (long) $i10 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l11) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r61 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r61 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r62 = virtualinvoke $r61.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r62 = virtualinvoke $r61.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r63 = interfaceinvoke $r62.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r63 = interfaceinvoke $r62.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r64 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r63
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r64 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r63 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r65 = virtualinvoke $r64.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r65 = virtualinvoke $r64.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r66 = interfaceinvoke $r65.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r66 = interfaceinvoke $r65.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r67 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r66
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r67 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r66 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r68 = virtualinvoke $r67.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r68 = virtualinvoke $r67.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("http://public-repo-1.hortonworks.com/HDP/centos6/2.x/updates/2.3.0.0", $r68)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("http://public-repo-1.hortonworks.com/HDP/centos6/2.x/updates/2.3.0.0", $r68) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r69 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r69 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r70 = virtualinvoke $r69.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r70 = virtualinvoke $r69.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r71 = interfaceinvoke $r70.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r71 = interfaceinvoke $r70.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r72 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r71
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r72 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r71 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r73 = virtualinvoke $r72.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r73 = virtualinvoke $r72.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r74 = interfaceinvoke $r73.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r74 = interfaceinvoke $r73.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r75 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r74
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r75 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r74 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r76 = virtualinvoke $r75.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoId()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r76 = virtualinvoke $r75.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoId()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP-2.3", $r76)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP-2.3", $r76) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r77 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r77 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r78 = virtualinvoke $r77.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r78 = virtualinvoke $r77.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r79 = interfaceinvoke $r78.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r79 = interfaceinvoke $r78.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r80 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r79
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r80 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r79 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r81 = virtualinvoke $r80.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r81 = virtualinvoke $r80.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r82 = interfaceinvoke $r81.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r82 = interfaceinvoke $r81.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r83 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r82
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r83 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r82 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r84 = virtualinvoke $r83.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoName()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r84 = virtualinvoke $r83.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP", $r84)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDP", $r84) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r85 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r85 = r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r86 = virtualinvoke $r85.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r86 = virtualinvoke $r85.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r87 = interfaceinvoke $r86.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r87 = interfaceinvoke $r86.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r88 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r87
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r88 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r87 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r89 = virtualinvoke $r88.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getPackageVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : $r89 = virtualinvoke $r88.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getPackageVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r89)
org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionTest.validateXml : return
