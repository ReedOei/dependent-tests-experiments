org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z0 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.lang.Object initializationLock>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : return
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.lang.Object initializationLock> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r5
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : throw $r11
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z1 = r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : return
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r7)
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.PersistedState: java.util.Map getAllRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap>
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void replayRequests(java.util.Map)>($r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z2 == 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : exitmonitor $r5
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r0.<org.apache.ambari.server.topology.TopologyManager: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r3 = (org.apache.ambari.server.topology.ClusterTopology) $r10
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r3 = (org.apache.ambari.server.topology.ClusterTopology) $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z3 = interfaceinvoke r3.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : r3 = (org.apache.ambari.server.topology.ClusterTopology) $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z3 = interfaceinvoke r3.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z3 == 0
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z3 = interfaceinvoke r3.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addKerberosClient(org.apache.ambari.server.topology.ClusterTopology)>(r3)
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addKerberosClient(org.apache.ambari.server.topology.ClusterTopology)>(r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.ensureInitialized : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addKerberosClient(org.apache.ambari.server.topology.ClusterTopology)>(r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.ensureInitialized : $r11 := @caughtexception
