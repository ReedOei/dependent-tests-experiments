org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UserDAO;") >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : r2 = (org.apache.ambari.server.orm.dao.UserDAO) $r4
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : r2 = (org.apache.ambari.server.orm.dao.UserDAO) $r4 >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.dao.UserDAO: org.apache.ambari.server.orm.entities.UserEntity findSingleUserByName(java.lang.String)>($r5)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.dao.UserDAO: org.apache.ambari.server.orm.entities.UserEntity findSingleUserByName(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;")
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/UserEntity;") >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r10 = (org.apache.ambari.server.orm.entities.UserEntity) $r9
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r10 = (org.apache.ambari.server.orm.entities.UserEntity) $r9 >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : virtualinvoke r2.<org.apache.ambari.server.orm.dao.UserDAO: void create(org.apache.ambari.server.orm.entities.UserEntity)>($r10)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : virtualinvoke r2.<org.apache.ambari.server.orm.dao.UserDAO: void create(org.apache.ambari.server.orm.entities.UserEntity)>($r10) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r12 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r12 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : r3 = (javax.persistence.EntityManager) $r12
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : r3 = (javax.persistence.EntityManager) $r12 >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;")
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(class "Lorg/apache/ambari/server/orm/entities/PrincipalEntity;") >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r14 = (java.lang.Class) $r13
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r14 = (java.lang.Class) $r13 >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r16 = interfaceinvoke r3.<javax.persistence.EntityManager: java.lang.Object find(java.lang.Class,java.lang.Object)>($r14, $r15)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r16 = interfaceinvoke r3.<javax.persistence.EntityManager: java.lang.Object find(java.lang.Class,java.lang.Object)>($r14, $r15) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : virtualinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: void replayAll()>()
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : virtualinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : specialinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: void createInjector(org.apache.ambari.server.orm.dao.UserDAO,javax.persistence.EntityManager)>(r2, r3)
org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : specialinvoke r0.<org.apache.ambari.server.security.authorization.UsersTest: void createInjector(org.apache.ambari.server.orm.dao.UserDAO,javax.persistence.EntityManager)>(r2, r3) >>>>>>>> org.apache.ambari.server.security.authorization.UsersTest.initForCreateUser : return
