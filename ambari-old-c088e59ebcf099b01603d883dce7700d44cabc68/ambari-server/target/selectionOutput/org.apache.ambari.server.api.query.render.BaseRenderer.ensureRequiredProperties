org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type valueOf(java.lang.String)>($r6)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type valueOf(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r3 = (java.util.Set) $r7
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r3 = (java.util.Set) $r7 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z1 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if z0 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>(r2, r3)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>(r2, r3) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z2 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : return
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r5 = (org.apache.ambari.server.api.util.TreeNode) $r8
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : r5 = (org.apache.ambari.server.api.util.TreeNode) $r8 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r5, z0)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r5, z0) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>(r2, r3)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r9 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
