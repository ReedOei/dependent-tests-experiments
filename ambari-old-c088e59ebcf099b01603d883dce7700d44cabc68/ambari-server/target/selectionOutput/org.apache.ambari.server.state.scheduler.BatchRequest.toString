org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.scheduler.BatchRequest.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BatchRequest {orderId=")
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BatchRequest {orderId=") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r3 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long orderId>
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r3 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long orderId> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=")
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r6 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: org.apache.ambari.server.state.scheduler.BatchRequest$Type type>
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r6 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: org.apache.ambari.server.state.scheduler.BatchRequest$Type type> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri=\'")
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri=\'") >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r9 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String uri>
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r9 = r0.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String uri> >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125)
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125) >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.scheduler.BatchRequest.toString : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.scheduler.BatchRequest.toString : return $r13
