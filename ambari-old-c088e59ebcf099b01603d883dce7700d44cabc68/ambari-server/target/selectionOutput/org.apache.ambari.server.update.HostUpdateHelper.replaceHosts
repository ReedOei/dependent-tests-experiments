org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r4 = specialinvoke r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.List getHostNamesWhichValueIncludes(java.util.List,java.lang.String)>(r2, r1)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r4 = specialinvoke r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.List getHostNamesWhichValueIncludes(java.util.List,java.lang.String)>(r2, r1) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z0 != 0
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z0 != 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if r3 == null
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z0 != 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : return r18
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if r3 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r7 = new org.apache.ambari.server.update.HostUpdateHelper$StringComparator
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if r3 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : return r18
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r7 = new org.apache.ambari.server.update.HostUpdateHelper$StringComparator >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : specialinvoke $r7.<org.apache.ambari.server.update.HostUpdateHelper$StringComparator: void <init>(org.apache.ambari.server.update.HostUpdateHelper)>(r0)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : specialinvoke $r7.<org.apache.ambari.server.update.HostUpdateHelper$StringComparator: void <init>(org.apache.ambari.server.update.HostUpdateHelper)>(r0) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, $r7)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, $r7) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = r1
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = r1 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r8 = new java.util.HashMap
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : i1 = 0
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : i1 = 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r19 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r19 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z1 == 0
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r21 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r21 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z2 == 0
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r9 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : return r18
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r9 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r22 = (java.lang.String) $r9
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r22 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r11 = (java.lang.CharSequence) $r10
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r11 = (java.lang.CharSequence) $r10 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r13 = (java.lang.CharSequence) $r12
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r13 = (java.lang.CharSequence) $r12 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = virtualinvoke r18.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r11, $r13)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = virtualinvoke r18.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r11, $r13) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : goto [?= $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : goto [?= $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r20 = (java.lang.String) $r14
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r20 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $i0 = i1
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $i0 = i1 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : i1 = i1 + 1
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r15[0] = $r16
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $r15[0] = $r16 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{replace_code_%d}", $r15)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{replace_code_%d}", $r15) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r6)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r6) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = virtualinvoke r18.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r20, r6)
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : r18 = virtualinvoke r18.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r20, r6) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.replaceHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
