org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $z0 = virtualinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider: boolean isProxyCallAllowed(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if $z0 != 0
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r7 = <org.apache.ambari.server.view.ViewURLStreamProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r3, r4)
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : r5 = specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider: java.net.HttpURLConnection getHttpURLConnection(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : i0 = virtualinvoke r5.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : i0 = virtualinvoke r5.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START>
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if i0 < $i1
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if i0 < $i1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r18 = virtualinvoke r5.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : if i0 < $i1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r18 = virtualinvoke r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r18 = virtualinvoke r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : return $r18
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r18 = virtualinvoke r5.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : goto [?= return $r18]
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : goto [?= return $r18] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : return $r18
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r7 = <org.apache.ambari.server.view.ViewURLStreamProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call to ")
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call to ") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed. See ambari.properties proxy.allowed.hostports.")
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed. See ambari.properties proxy.allowed.hostports.") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>($r11)
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r12 = new java.io.IOException
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r12 = new java.io.IOException >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call to ")
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call to ") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed. See ambari.properties proxy.allowed.hostports.")
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed. See ambari.properties proxy.allowed.hostports.") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider.getInputStream : throw $r12
