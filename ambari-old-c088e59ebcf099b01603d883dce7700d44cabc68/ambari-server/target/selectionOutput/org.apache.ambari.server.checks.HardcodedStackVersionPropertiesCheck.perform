org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r18 = r0.<org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r20 = (org.apache.ambari.server.state.Clusters) $r19
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r20 = (org.apache.ambari.server.state.Clusters) $r19 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r21 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r21 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r3 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r21)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r3 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r22 = new java.util.HashSet
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r22 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r22.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r22.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r23 = new java.util.HashSet
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r23 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r23.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r23.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r24 = new java.util.HashSet
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r24 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r24.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r24.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r25 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r25 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r44 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r44 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r32 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $i0 = interfaceinvoke $r23.<java.util.Set: int size()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $i0 = interfaceinvoke $r23.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $i0 <= 0
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r27 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r26 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS>
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r26 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS> >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r26)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r26) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : return
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r27 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r27)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r27) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r28 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r28 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r24, 44)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r24, 44) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r28[0] = $r29
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r28[0] = $r29 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r28)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r28) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r30)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r31 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r31 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r31.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r23)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : specialinvoke $r31.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r23) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r31)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r31) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= return]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : return
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r32 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r8 = (java.util.Map$Entry) $r32
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r8 = (java.util.Map$Entry) $r32 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r33 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r33 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r9 = (java.lang.String) $r33
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r9 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r34 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r34 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r10 = (org.apache.ambari.server.state.DesiredConfig) $r34
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r10 = (org.apache.ambari.server.state.DesiredConfig) $r34 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r35 = virtualinvoke r10.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r35 = virtualinvoke r10.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r9, $r35)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r9, $r35) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r36 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r36 = interfaceinvoke r12.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r13 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r13 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r37 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r37 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r14 = (java.util.Map$Entry) $r37
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r14 = (java.util.Map$Entry) $r37 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r15 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r15 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r38 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r38 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r16 = (java.lang.String) $r38
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r16 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r17 = staticinvoke <org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: java.util.regex.Pattern getHardcodeSearchPattern(java.lang.String)>(r16)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : r17 = staticinvoke <org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: java.util.regex.Pattern getHardcodeSearchPattern(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r39 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r39 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r40 = (java.lang.String) $r39
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r40 = (java.lang.String) $r39 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z3 = staticinvoke <org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: boolean stringContainsVersionHardcode(java.lang.String,java.util.regex.Pattern)>($r40, r17)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z3 = staticinvoke <org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck: boolean stringContainsVersionHardcode(java.lang.String,java.util.regex.Pattern)>($r40, r17) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z3 == 0
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[0] = r9
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[0] = r9 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r42 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r42 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[1] = $r42
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[1] = $r42 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[2] = r16
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r41[2] = r16 >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s found a hardcoded value %s", $r41)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s found a hardcoded value %s", $r41) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r43)
org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.checks.HardcodedStackVersionPropertiesCheck.perform : goto [?= $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
