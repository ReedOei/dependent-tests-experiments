org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r9 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r9 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if $z0 == 0
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : return $r8
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r5 = (java.util.Map$Entry) $r10
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r5 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r6 = (java.lang.String) $r11
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r6 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r7 = staticinvoke <org.apache.ambari.server.stack.StackModule: java.net.URI getURI(org.apache.ambari.server.stack.StackModule,java.lang.String)>(r1, r6)
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : r7 = staticinvoke <org.apache.ambari.server.stack.StackModule: java.net.URI getURI(org.apache.ambari.server.stack.StackModule,java.lang.String)>(r1, r6) >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if null != r7
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if null != r7 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r14 = <org.apache.ambari.server.state.stack.RepoUrlInfoCallable: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : if null != r7 >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r7)
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r7) >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : $r14 = <org.apache.ambari.server.state.stack.RepoUrlInfoCallable: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not resolve URI {}", r6)
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not resolve URI {}", r6) >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : goto [?= (branch)]
org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.RepoUrlInfoCallable.resolveOsMap : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
