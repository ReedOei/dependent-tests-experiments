org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r5 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: boolean checkAuthorizationForMetrics(java.util.Set,java.lang.String)>(r1, $r5)
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: boolean checkAuthorizationForMetrics(java.util.Set,java.lang.String)>(r1, $r5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z0 != 0
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r6 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsServiceProvider metricsServiceProvider>
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r6 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsServiceProvider metricsServiceProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : r4 = interfaceinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService getMetricsServiceType()>()
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : r4 = interfaceinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService getMetricsServiceType()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if r4 == null
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r7 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService GANGLIA>
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r7 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService GANGLIA> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z1 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z1 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z1 == 0
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider gangliaMetricsReportProvider>
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r8 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r8 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z2 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r8)
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $z2 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z2 == 0
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r9 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider amsMetricsReportProvider>
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : return r1
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r9 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider amsMetricsReportProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r10 = virtualinvoke $r9.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3)
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r10 = virtualinvoke $r9.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : return $r10
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy: org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider gangliaMetricsReportProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3)
org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.metrics.MetricsReportPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsReportPropertyProviderProxy.populateResources : return $r12
