org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r5 = new org.apache.commons.cli.DefaultParser >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r5.<org.apache.commons.cli.DefaultParser: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r5.<org.apache.commons.cli.DefaultParser: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r6 = new org.apache.commons.cli.HelpFormatter
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r6 = new org.apache.commons.cli.HelpFormatter >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r6.<org.apache.commons.cli.HelpFormatter: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r6.<org.apache.commons.cli.HelpFormatter: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r21 = null
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r21 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r7 = staticinvoke <org.apache.ambari.server.checks.MpackInstallChecker: org.apache.commons.cli.Options getOptions()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r21 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r15 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing failed. Reason: ")
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing failed. Reason: ") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r17 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r17 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r20 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r20 = <org.apache.ambari.server.checks.MpackInstallChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Parsing failed. Reason: ", $r13)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Parsing failed. Reason: ", $r13) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : return r21
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r7 = staticinvoke <org.apache.ambari.server.checks.MpackInstallChecker: org.apache.commons.cli.Options getOptions()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r22 = interfaceinvoke $r5.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r7, r0)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r7 = staticinvoke <org.apache.ambari.server.checks.MpackInstallChecker: org.apache.commons.cli.Options getOptions()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r22 = interfaceinvoke $r5.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r7, r0) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r8 = virtualinvoke r22.<org.apache.commons.cli.CommandLine: java.lang.Object getParsedOptionValue(java.lang.String)>("mpack-stacks")
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r22 = interfaceinvoke $r5.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r7, r0) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r8 = virtualinvoke r22.<org.apache.commons.cli.CommandLine: java.lang.Object getParsedOptionValue(java.lang.String)>("mpack-stacks") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r3 = (java.lang.String) $r8
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r8 = virtualinvoke r22.<org.apache.commons.cli.CommandLine: java.lang.Object getParsedOptionValue(java.lang.String)>("mpack-stacks") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r9 = new java.util.HashSet
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r10 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r10 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r10 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r12 = new org.apache.ambari.server.checks.MpackInstallChecker$MpackContext
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r12 = new org.apache.ambari.server.checks.MpackInstallChecker$MpackContext >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r12.<org.apache.ambari.server.checks.MpackInstallChecker$MpackContext: void <init>(java.util.HashSet)>($r9)
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r12 = new org.apache.ambari.server.checks.MpackInstallChecker$MpackContext >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r12.<org.apache.ambari.server.checks.MpackInstallChecker$MpackContext: void <init>(java.util.HashSet)>($r9) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r21 = $r12
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : specialinvoke $r12.<org.apache.ambari.server.checks.MpackInstallChecker$MpackContext: void <init>(java.util.HashSet)>($r9) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : $r13 := @caughtexception
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : r21 = $r12 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : goto [?= return r21]
org.apache.ambari.server.checks.MpackInstallChecker.processArguments : goto [?= return r21] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.processArguments : return r21
