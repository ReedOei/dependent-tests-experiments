org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r2 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r14 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r14 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r14
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r15 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r15 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r4 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r4 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r5 = (org.apache.ambari.server.state.Cluster) $r16
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r5 = (org.apache.ambari.server.state.Cluster) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Host;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Host;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r6 = (org.apache.ambari.server.state.Host) $r17
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r6 = (org.apache.ambari.server.state.Host) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r7 = (org.apache.ambari.server.controller.HostResponse) $r18
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r7 = (org.apache.ambari.server.controller.HostResponse) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r19 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r20 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r21 = new org.apache.ambari.server.controller.HostRequest
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r21 = new org.apache.ambari.server.controller.HostRequest >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r21.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>("host1", "cluster1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r21.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>("host1", "cluster1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r22 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r22 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r22.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : specialinvoke $r22.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r23 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r23 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("cluster1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("cluster1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r30 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("host1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r30 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("host1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r33 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("host1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r33 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("host1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r36 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r36 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r43 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r42)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r43 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r48 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r5, $r19)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r48 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r5, $r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r51 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r51 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("host1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r53 = interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("host1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r55 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r55 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>("cluster1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>("cluster1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r13 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.util.Set getHosts(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set)>(r3, $r22)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : r13 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.util.Set getHosts(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set)>(r3, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $i1 = interfaceinvoke r13.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $i1 = interfaceinvoke r13.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $l2 = (long) $i1
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $z1 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : $z1 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetHosts : return
