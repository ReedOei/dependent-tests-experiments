org.apache.ambari.server.controller.AmbariServer.stop : $r2 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : if $r2 != null
org.apache.ambari.server.controller.AmbariServer.stop : if $r2 != null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : $r4 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariServer.stop : if $r2 != null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.Server server>
org.apache.ambari.server.controller.AmbariServer.stop : if $r2 != null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : $r5 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.stop : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error stopping the server", $r5)
org.apache.ambari.server.controller.AmbariServer.stop : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error stopping the server", $r5) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : return
org.apache.ambari.server.controller.AmbariServer.stop : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.ambari.server.controller.AmbariServer.stop : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : $r5 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.stop : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.stop : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : $r5 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.stop : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : return
org.apache.ambari.server.controller.AmbariServer.stop : $r4 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Error stopping the server")
org.apache.ambari.server.controller.AmbariServer.stop : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Error stopping the server") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.stop : throw $r4
