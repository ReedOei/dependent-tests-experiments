org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : return $r8
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r4 = (org.apache.ambari.server.orm.entities.TopologyHostGroupEntity) $r9
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r4 = (org.apache.ambari.server.orm.entities.TopologyHostGroupEntity) $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z1 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r5)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z1 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r16 = new java.util.HashSet
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z4 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r7 = (org.apache.ambari.server.orm.entities.TopologyHostInfoEntity) $r11
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : r7 = (org.apache.ambari.server.orm.entities.TopologyHostInfoEntity) $r11 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r12 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r12 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r12)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r13 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r13 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r14 = (java.util.Set) $r13
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r14 = (java.util.Set) $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r15 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r15 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: java.lang.String getFqdn()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r16.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : specialinvoke $r16.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r16)
org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r16) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getReservedHostNamesByHostGroupName : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.util.Collection getTopologyHostInfoEntities()>()
