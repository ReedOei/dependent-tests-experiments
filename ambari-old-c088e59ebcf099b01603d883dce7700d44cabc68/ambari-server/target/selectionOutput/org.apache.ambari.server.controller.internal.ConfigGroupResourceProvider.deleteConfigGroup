org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $r4 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $r4 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r31 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $r4 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r2 = interfaceinvoke $r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r2 = interfaceinvoke $r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r6 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r2 = interfaceinvoke $r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r32 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r33 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r33.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to delete a config group from a cluster which doesn\'t exist", $r32)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r33.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to delete a config group from a cluster which doesn\'t exist", $r32) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : throw $r33
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r6 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r6 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r32 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : goto [?= $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r32 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : goto [?= $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r8 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r8 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r35 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r9
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : r35 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if r35 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if r35 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r27 = new org.apache.ambari.server.ConfigGroupNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if r35 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r10 = interfaceinvoke r35.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r10 = interfaceinvoke r35.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r10)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z0 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r11 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r11 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r11, $r12, $r13)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r11, $r12, $r13) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z1 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r22 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r15 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r15 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r16 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r16 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[0] = $r16
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[0] = $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[1] = $r18
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[1] = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r19 = interfaceinvoke r35.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r19 = interfaceinvoke r35.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[2] = $r19
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[2] = $r19 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r20 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r20 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[3] = $r20
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r14[3] = $r20 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("(configchange) Deleting configuration group. cluster: \'{}\', changed by: \'{}\', config group: \'{}\', config group id: \'{}\'", $r14)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("(configchange) Deleting configuration group. cluster: \'{}\', changed by: \'{}\', config group: \'{}\', config group id: \'{}\'", $r14) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void deleteConfigGroup(java.lang.Long)>($r21)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void deleteConfigGroup(java.lang.Long)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : return
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r22 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r22.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to delete config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r22.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to delete config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : throw $r22
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r23, $r24, $r25)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r23, $r24, $r25) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z2 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r26 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r15 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r26 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r26.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to delete config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r26.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to delete config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : throw $r26
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r27 = new org.apache.ambari.server.ConfigGroupNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r29 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r29 = virtualinvoke r1.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r30 = virtualinvoke $r29.<java.lang.Long: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r30 = virtualinvoke $r29.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r27.<org.apache.ambari.server.ConfigGroupNotFoundException: void <init>(java.lang.String,java.lang.String)>($r28, $r30)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r27.<org.apache.ambari.server.ConfigGroupNotFoundException: void <init>(java.lang.String,java.lang.String)>($r28, $r30) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : throw $r27
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : $r31 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r31.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Config group id is a required field.")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : specialinvoke $r31.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Config group id is a required field.") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.deleteConfigGroup : throw $r31
