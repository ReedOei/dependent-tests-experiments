org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r5 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : entermonitor $r5
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r6 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId>
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : throw $r16
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r6 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l3 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long get()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r6 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l3 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $b4 = $l3 cmp l0
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l3 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $b4 = $l3 cmp l0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : if $b4 > 0
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $b4 = $l3 cmp l0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : if $b4 > 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r15 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId>
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : if $b4 > 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : if $b4 > 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : goto [?= $r7 = <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommandFactory hostRoleCommandFactory>]
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : goto [?= $r7 = <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommandFactory hostRoleCommandFactory>] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r7 = <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommandFactory hostRoleCommandFactory>
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r7 = <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommandFactory hostRoleCommandFactory> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r8 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r8 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r9 = virtualinvoke r3.<org.apache.ambari.server.topology.AmbariContext$TaskType: java.lang.String name()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r9 = virtualinvoke r3.<org.apache.ambari.server.topology.AmbariContext$TaskType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r10 = staticinvoke <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand valueOf(java.lang.String)>($r9)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r10 = staticinvoke <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand valueOf(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : r18 = interfaceinvoke $r7.<org.apache.ambari.server.actionmanager.HostRoleCommandFactory: org.apache.ambari.server.actionmanager.HostRoleCommand create(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.RoleCommand,boolean,boolean)>(r2, $r8, null, $r10, 0, z0)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : r18 = interfaceinvoke $r7.<org.apache.ambari.server.actionmanager.HostRoleCommandFactory: org.apache.ambari.server.actionmanager.HostRoleCommand create(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.RoleCommand,boolean,boolean)>(r2, $r8, null, $r10, 0, z0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r11 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus PENDING>
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r11 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus PENDING> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r11)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r11) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r13 = virtualinvoke r3.<org.apache.ambari.server.topology.AmbariContext$TaskType: java.lang.String name()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r13 = virtualinvoke r3.<org.apache.ambari.server.topology.AmbariContext$TaskType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[0] = $r13
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[1] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[1] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[2] = r2
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r12[2] = r2 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Logical Task: %s component %s on host %s", $r12)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Logical Task: %s component %s on host %s", $r12) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r14)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setTaskId(long)>(l0)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setTaskId(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setRequestId(long)>(l1)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setRequestId(long)>(l1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStageId(long)>(l2)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke r18.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStageId(long)>(l2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : return r18
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r15 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l5 = l0 + 1L
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r15 = <org.apache.ambari.server.topology.AmbariContext: java.util.concurrent.atomic.AtomicLong nextTaskId> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l5 = l0 + 1L >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke $r15.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l5)
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $l5 = l0 + 1L >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke $r15.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : exitmonitor $r5
org.apache.ambari.server.topology.AmbariContext.createAmbariTask : virtualinvoke $r15.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariTask : $r16 := @caughtexception
