org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r11 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r6 = interfaceinvoke $r11.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r6 = interfaceinvoke $r11.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r12 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r12 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r13 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r13 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r14 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getVersion()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r14 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r12.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r13, $r14)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r12.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r13, $r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r4)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r5
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null == r5
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null == r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r25 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null == r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r15 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r15 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = virtualinvoke $r15.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r12, r4)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = virtualinvoke $r15.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r12, r4) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r22 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r68 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r68 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $r67 == $r68
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $r67 == $r68 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r19 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $r67 == $r68 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r16 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r16 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r17 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getVersion()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r17 = virtualinvoke r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: void createAmbariClusterResource(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.SecurityType)>(r2, $r16, $r17, r3)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: void createAmbariClusterResource(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.SecurityType)>(r2, $r16, $r17, r3) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r18 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r18 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: void createAmbariServiceAndComponentResources(org.apache.ambari.server.topology.ClusterTopology,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.Long)>(r1, r2, $r12, $r18)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: void createAmbariServiceAndComponentResources(org.apache.ambari.server.topology.ClusterTopology,java.lang.String,org.apache.ambari.server.state.StackId,java.lang.Long)>(r1, r2, $r12, $r18) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : return
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r19 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r20[0] = r64
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r20[0] = r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create a cluster using the following repository since it is not a STANDARD type: %s", $r20)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create a cluster using the following repository since it is not a STANDARD type: %s", $r20) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r19
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r22 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[0] = $r12
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[0] = $r12 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[1] = r4
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[1] = r4 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[2] = "repository_version"
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r23[2] = "repository_version" >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not identify repository version with stack %s and version %s for installing services. Specify a valid version with \'%s\'", $r23)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not identify repository version with stack %s and version %s for installing services. Specify a valid version with \'%s\'", $r23) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r22
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r25 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r5)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r26
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r26 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r27 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28[0] = r5
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28[0] = r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28[1] = "repository_version_id"
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r28[1] = "repository_version_id" >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not identify repository version with repository version id %s for installing services. Specify a valid repository version id with \'%s\'", $r28)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not identify repository version with repository version id %s for installing services. Specify a valid repository version id with \'%s\'", $r28) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r27
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r30 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r5 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null == r5
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r30 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r8 = virtualinvoke $r30.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>($r12)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r8 = virtualinvoke $r30.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>($r12) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z1 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z1 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r59 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider getVersionDefinitionResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $i0 = interfaceinvoke r8.<java.util.List: int size()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $i0 = interfaceinvoke r8.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $i0 <= 1
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r34 = new org.apache.ambari.server.topology.AmbariContext$1
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r31 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r31 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r31
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r31 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r32 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r32 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r33 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r33 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Cluster is being provisioned using the single matching repository version {}", $r33)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Cluster is being provisioned using the single matching repository version {}", $r33) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r34 = new org.apache.ambari.server.topology.AmbariContext$1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r34.<org.apache.ambari.server.topology.AmbariContext$1: void <init>(org.apache.ambari.server.topology.AmbariContext)>(r0)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r34.<org.apache.ambari.server.topology.AmbariContext$1: void <init>(org.apache.ambari.server.topology.AmbariContext)>(r0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r66 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>(r8, $r34)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r66 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>(r8, $r34) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r35 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r35 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[0] = $r12
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[0] = $r12 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r37 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r66, ", ")
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r37 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r66, ", ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[1] = $r37
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[1] = $r37 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[2] = "repository_version"
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r36[2] = "repository_version" >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Several repositories were found for %s:  %s.  Specify the version with \'%s\'", $r36)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Several repositories were found for %s:  %s.  Specify the version with \'%s\'", $r36) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r35
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r59 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider getVersionDefinitionResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r39 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r39 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r39.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r39.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r40 = virtualinvoke $r12.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r40 = virtualinvoke $r12.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("VersionDefinition/available", $r40)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("VersionDefinition/available", $r40) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r41 = new org.apache.ambari.server.controller.internal.RequestImpl
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r41 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r42 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r42 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r43 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r39)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r43 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r44 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r44 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r41.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>($r42, $r43, $r44, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r41.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>($r42, $r43, $r44, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = null
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r62 = virtualinvoke r59.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>($r41)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r56 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r57 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r57 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r57[0] = $r12
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r57[0] = $r12 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to create a default repository version definition for stack %s. This typically is a result of not loading the stack correctly or being able to load information about released versions.  Create a repository version  and try again.", $r57)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to create a default repository version definition for stack %s. This typically is a result of not loading the stack correctly or being able to load information about released versions.  Create a repository version  and try again.", $r57) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r58, $r55)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r58, $r55) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r56
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r62 = virtualinvoke r59.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>($r41) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r45 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r62 = virtualinvoke r59.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>($r41) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r45 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z2 = interfaceinvoke $r45.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r45 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z2 = interfaceinvoke $r45.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z2 != 0
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $z2 = interfaceinvoke $r45.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r51 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r46 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r46 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r46 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r46 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r61)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r61) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r47
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r64 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r47 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r48 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : if null != r64 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r67 = virtualinvoke r64.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r48 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r49 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r49 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r49[0] = $r12
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r49[0] = $r12 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to load the default repository version definition for stack %s. Check for a valid repository version and try again.", $r49)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to load the default repository version definition for stack %s. Check for a valid repository version and try again.", $r49) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r50)
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : throw $r48
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r51 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r51 = interfaceinvoke r62.<org.apache.ambari.server.controller.spi.RequestStatus: java.util.Set getAssociatedResources()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r10 = (org.apache.ambari.server.controller.spi.Resource) $r53
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r10 = (org.apache.ambari.server.controller.spi.Resource) $r53 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r54 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("VersionDefinition/id")
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r10 = (org.apache.ambari.server.controller.spi.Resource) $r53 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r54 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("VersionDefinition/id") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = (java.lang.Long) $r54
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r54 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("VersionDefinition/id") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = (java.lang.Long) $r54 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : goto [?= $r46 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>]
org.apache.ambari.server.topology.AmbariContext.createAmbariResources : r61 = (java.lang.Long) $r54 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariResources : $r55 := @caughtexception
