org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : $r2 = r0.<org.apache.ambari.server.state.cluster.AlertDataManagerTest$1: java.util.concurrent.atomic.AtomicReference val$ref> >>>>>>>> org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : $r3 = virtualinvoke r1.<org.apache.ambari.server.events.AlertReceivedEvent: org.apache.ambari.server.state.Alert getAlert()>()
org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : $r3 = virtualinvoke r1.<org.apache.ambari.server.events.AlertReceivedEvent: org.apache.ambari.server.state.Alert getAlert()>() >>>>>>>> org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r3)
org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.state.cluster.AlertDataManagerTest$1.catchIt : return
