org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r6 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r7
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r36 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r9 = (java.lang.String) $r8
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r9)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r34 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/SecurityType;", r3)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "Lorg/apache/ambari/server/state/SecurityType;", r3) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = virtualinvoke $r10.<com.google.common.base.Optional: java.lang.Object orNull()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = virtualinvoke $r10.<com.google.common.base.Optional: java.lang.Object orNull()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r11
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r11 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r28 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r12 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r12 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r12
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r12 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r12 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r13 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r13 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security configuration found in the request")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security configuration found in the request") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r14 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r14 = new org.apache.ambari.server.topology.SecurityConfiguration >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r15 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r15 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r14.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r15)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r14.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r15) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r14
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r14 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r39
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r17 = (java.lang.String) $r16
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r17)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r21 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r37 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r18 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r18 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security descriptor found in the request")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security descriptor found in the request") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r19 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r19 = new org.apache.ambari.server.topology.SecurityConfiguration >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r20 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r20 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r19.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r20)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r19.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r20) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r19
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r19 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r39
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r21 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found descriptor reference: {}", r37)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found descriptor reference: {}", r37) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = virtualinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.SecurityConfiguration loadSecurityConfigurationByReference(java.lang.String)>(r37)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = virtualinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.SecurityConfiguration loadSecurityConfigurationByReference(java.lang.String)>(r37) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found embedded descriptor: {}", r5)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found embedded descriptor: {}", r5) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: com.google.gson.Gson jsonSerializer>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: com.google.gson.Gson jsonSerializer> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r38 = virtualinvoke $r23.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r5, class "Ljava/util/Map;")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r38 = virtualinvoke $r23.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r5, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if z0 == 0
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String persistKerberosDescriptor(java.lang.String)>(r38)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = new org.apache.ambari.server.topology.SecurityConfiguration >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r25 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r25 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r24.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType,java.lang.String,java.lang.String)>($r25, r37, r38)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r24.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType,java.lang.String,java.lang.String)>($r25, r37, r38) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r24
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r39 = $r24 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r39]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r37 = specialinvoke r0.<org.apache.ambari.server.topology.SecurityConfigurationFactory: java.lang.String persistKerberosDescriptor(java.lang.String)>(r38) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r26 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r26 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>("Both kerberos descriptor and kerberos descriptor reference are set in the security configuration!")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>("Both kerberos descriptor and kerberos descriptor reference are set in the security configuration!") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r27 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Usage of properties : kerberos_descriptor and kerberos_descriptor_reference at the same time, is not allowed.")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Usage of properties : kerberos_descriptor and kerberos_descriptor_reference at the same time, is not allowed.") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : throw $r27
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r28 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Unsupported security type specified: {}", r4)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Unsupported security type specified: {}", r4) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r29 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r29 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid security type specified: ")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid security type specified: ") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : throw $r29
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r34 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>("Type is missing from security block.")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>("Type is missing from security block.") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r35 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r35 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type missing from security block.")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type missing from security block.") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : throw $r35
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r36 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String)>("No security information properties provided, returning null")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String)>("No security information properties provided, returning null") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return null
