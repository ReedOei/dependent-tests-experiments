org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r4 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $z0 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $z0 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z0 == 0
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED>
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r6 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components>
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r6 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r7 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z1 == 0
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r8 = staticinvoke <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState getAggregateState(java.util.List)>($r5)
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r8 = staticinvoke <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState getAggregateState(java.util.List)>($r5) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : return $r8
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : r3 = (org.apache.ambari.server.state.ServiceComponent) $r9
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : r3 = (org.apache.ambari.server.state.ServiceComponent) $r9 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r10 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.RepositoryVersionState getRepositoryState()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r10 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.RepositoryVersionState getRepositoryState()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.getRepositoryState : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.getRepositoryState : return $r11
