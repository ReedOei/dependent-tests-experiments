org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r77 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r9 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r3 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r3 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.configgroup.ConfigGroupFactory getConfigGroupFactory()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.configgroup.ConfigGroupFactory getConfigGroupFactory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : return $r9
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r12
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r13 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r78 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r79 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r79.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", $r78)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r79.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", $r78) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r79
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r13 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r13 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r78 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r78 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r82 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r82 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r82 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r82 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r59 = interfaceinvoke r82.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r82 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r14 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r15 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r15 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r15 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r15 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r52 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r15 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, $r14, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, $r14, r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r89 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r89 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r49 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z11 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r45 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r16 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r16 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r16, $r17, $r18)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r16, $r17, $r18) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r44 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[0] = $r21
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[0] = $r21 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r23 = interfaceinvoke $r22.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r23 = interfaceinvoke $r22.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[1] = $r23
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[1] = $r23 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r24 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r24 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[2] = $r24
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[2] = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r25 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r25 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[3] = $r25
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19[3] = $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("(configchange) Creating new configuration group. cluster: \'{}\', changed by: \'{}\', config group: \'{}\', tag: \'{}\'", $r19)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("(configchange) Creating new configuration group. cluster: \'{}\', changed by: \'{}\', config group: \'{}\', tag: \'{}\'", $r19) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r27 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r27 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r26, $r27)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r26, $r27) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r28 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r28 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r29 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r29 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r30 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r30 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r31 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r31 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r91 = interfaceinvoke r4.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r7, r89, $r28, $r29, $r30, $r31, $r14)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r91 = interfaceinvoke r4.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r7, r89, $r28, $r29, $r30, $r31, $r14) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r91)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r91) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r40 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r89 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r32 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r32 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r33 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r33 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r33)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r33) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r34 = new org.apache.ambari.server.controller.ConfigGroupResponse
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r34 = new org.apache.ambari.server.controller.ConfigGroupResponse >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r35 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r35 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r36 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r36 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r37 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r37 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r38 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r38 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r39 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getDescription()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r39 = interfaceinvoke r91.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r34.<org.apache.ambari.server.controller.ConfigGroupResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>($r35, $r36, $r37, $r38, $r39, null, null)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r34.<org.apache.ambari.server.controller.ConfigGroupResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>($r35, $r36, $r37, $r38, $r39, null, null) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r40 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r42 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r42 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r89, $r41, $r42, r91)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r89, $r41, $r42, r91) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $r34 = new org.apache.ambari.server.controller.ConfigGroupResponse]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $r34 = new org.apache.ambari.server.controller.ConfigGroupResponse] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r34 = new org.apache.ambari.server.controller.ConfigGroupResponse
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r44 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r44.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r44.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r44
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r45 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r46 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r46 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r47 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r47 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r45, $r46, $r47)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r45, $r46, $r47) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r48 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r48 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r48.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r48.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r48
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r49 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z5 = staticinvoke <org.apache.commons.collections.MapUtils: boolean isEmpty(java.util.Map)>($r49)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z5 = staticinvoke <org.apache.commons.collections.MapUtils: boolean isEmpty(java.util.Map)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r50 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r50 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r50 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r89 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r51)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r89 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89)]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r89 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89)] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r89)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r52 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z6 = interfaceinvoke $r52.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z6 = interfaceinvoke $r52.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r53 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, $r14, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r53 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r86 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r86 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r54 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, $r14, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r54 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r87 = (java.lang.String) $r54
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r87 = (java.lang.String) $r54 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r88 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r87)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r88 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r87) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r55 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r55 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r8 = virtualinvoke $r55.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r87)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r8 = virtualinvoke $r55.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r87) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r88 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r88 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r8 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r88 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r56.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r87)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r56.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r87) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r56
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r88)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r88) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z7 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r59 = interfaceinvoke r82.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r83 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r83 = interfaceinvoke $r59.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r60 = interfaceinvoke r83.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r14 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r60 = interfaceinvoke r83.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r84 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r60
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r84 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r60 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r61 = interfaceinvoke r84.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r61 = interfaceinvoke r84.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r62 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r62 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z9 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z9 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r63 = interfaceinvoke r84.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r63 = interfaceinvoke r84.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r64 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r64 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z10 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r64)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z10 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r65 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z8 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r65 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r66 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r66 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group already exists with the same name and tag, clusterName = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group already exists with the same name and tag, clusterName = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupName = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupName = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r71 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r71 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r74 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r74 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r65.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r76)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r65.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r65
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r77 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r77.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r77.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : return null
