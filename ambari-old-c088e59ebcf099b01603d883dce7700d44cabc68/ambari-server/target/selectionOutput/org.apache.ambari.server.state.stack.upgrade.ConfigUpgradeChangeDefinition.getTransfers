org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List transfers> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null != $r4
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null != $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null != $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List transfers>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List transfers> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : return $r5
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : r3 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer) $r7
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : r3 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r9 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$TransferOperation>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r9 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$TransferOperation> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: org.apache.ambari.server.state.stack.upgrade.TransferOperation operation>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: org.apache.ambari.server.state.stack.upgrade.TransferOperation operation> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $i0 = virtualinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TransferOperation: int ordinal()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $i0 = virtualinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TransferOperation: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $i1 = $r9[$i0]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $i1 = $r9[$i0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : tableswitch($i1) {     case 1:
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String fromKey>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r15 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String deleteKey>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r15 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String deleteKey> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r15
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r17 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r17 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r16 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r16[0] = r3
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r16[0] = r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Transfer %s is invalid", $r16)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Transfer %s is invalid", $r16) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r18)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String fromKey> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r10
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r14 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String toKey>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r11[0] = r3
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r11[0] = r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Transfer %s is invalid", $r11)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Transfer %s is invalid", $r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r13)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r14 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Transfer: java.lang.String toKey> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r14
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : if null == $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : $r19 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getTransfers : return $r19
