org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherCorePoolSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherCorePoolSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_CORE_SIZE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r10 = (java.lang.Integer) $r9
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r10 = (java.lang.Integer) $r9 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherMaxPoolSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherMaxPoolSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS_MAX_SIZE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = (java.lang.Integer) $r17
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = (java.lang.Integer) $r17 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i3 = virtualinvoke $r18.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i3 = virtualinvoke $r18.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r20 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r20 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i4 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherWorkerQueueSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i4 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherWorkerQueueSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_WORKER_QUEUE_SIZE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = virtualinvoke $r24.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = virtualinvoke $r24.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = (java.lang.Integer) $r25
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = (java.lang.Integer) $r25 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i5 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i5 = virtualinvoke $r26.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i6 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i6 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r40 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r40[0] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r40[0] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r42 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r42 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r43)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r42.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r44 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r44 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r45)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r46 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r46 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r47)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r46.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r48 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r48 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r48.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r48.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r51 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r51 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r52)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r51.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r53 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/DaoUtils;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r53 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/DaoUtils;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/DaoUtils;")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r54 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/DaoUtils;") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r53.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r54)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r53.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : return
