org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5 = new org.apache.ambari.server.state.repository.VersionDefinitionXml >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: boolean m_stackDefault> = 1
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: boolean m_stackDefault> = 1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r6 = new org.apache.ambari.server.state.repository.Release
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r6 = new org.apache.ambari.server.state.repository.Release >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r6.<org.apache.ambari.server.state.repository.Release: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r6.<org.apache.ambari.server.state.repository.Release: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> = $r6
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> = $r6 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r7 = new org.apache.ambari.server.state.stack.RepositoryXml
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r7 = new org.apache.ambari.server.state.stack.RepositoryXml >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r7.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r7.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> = $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> = $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r8 = <org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String SCHEMA_LOCATION>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r8 = <org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String SCHEMA_LOCATION> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = $r8
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = $r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r9 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r9 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r9.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r10, $r11)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r9.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r10, $r11) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r12 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r12 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> = $r12
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> = $r12 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15 = virtualinvoke $r9.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15 = virtualinvoke $r9.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> = $r15
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> = $r15 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16.<org.apache.ambari.server.state.repository.Release: java.lang.String version> = $r17
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16.<org.apache.ambari.server.state.repository.Release: java.lang.String version> = $r17 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes> = "NONE"
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes> = "NONE" >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20 = virtualinvoke $r9.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20 = virtualinvoke $r9.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19.<org.apache.ambari.server.state.repository.Release: java.lang.String display> = $r20
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19.<org.apache.ambari.server.state.repository.Release: java.lang.String display> = $r20 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection getServices()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r21 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r44 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r44 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r28 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r22 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r22 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r22
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r22 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r24 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r22 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r22 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r42 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r43 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r42)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r42) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : throw $r43
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= return $r5]
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r42 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : return $r5
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r24 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r25 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r25 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r26 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r26 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r27 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r25.<java.util.List: boolean addAll(java.util.Collection)>($r27)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r25.<java.util.List: boolean addAll(java.util.Collection)>($r27) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r25.<java.util.List: boolean addAll(java.util.Collection)>($r27) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r42 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r28 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r3 = (org.apache.ambari.server.state.ServiceInfo) $r28
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r3 = (org.apache.ambari.server.state.ServiceInfo) $r28 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29 = new org.apache.ambari.server.state.repository.ManifestService
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29 = new org.apache.ambari.server.state.repository.ManifestService >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r29.<org.apache.ambari.server.state.repository.ManifestService: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r29.<org.apache.ambari.server.state.repository.ManifestService: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r30 = virtualinvoke r3.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r30 = virtualinvoke r3.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> = $r30
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> = $r30 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r31 = virtualinvoke r3.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r31 = virtualinvoke r3.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($r31)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> = $r32
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> = $r32 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r33 = new java.lang.StringBuilder
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r34 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r34 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r37 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r37 = $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r38 = virtualinvoke $r37.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "")
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r38 = virtualinvoke $r37.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> = $r40
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> = $r40 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r41 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r41 = $r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
