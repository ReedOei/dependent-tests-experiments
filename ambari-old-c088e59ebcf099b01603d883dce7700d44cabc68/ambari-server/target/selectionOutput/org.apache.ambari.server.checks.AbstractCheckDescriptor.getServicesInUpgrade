org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r4 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r6 = (org.apache.ambari.server.state.Clusters) $r5
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r6 = (org.apache.ambari.server.state.Clusters) $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r2 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r7)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r2 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r11 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r2 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r9 := @caughtexception
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to run upgrade checks because of an invalid VDF", $r9)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to run upgrade checks because of an invalid VDF", $r9) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : throw $r10
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r11 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r3 = virtualinvoke r11.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r11 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r9 := @caughtexception
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r3 = virtualinvoke r11.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : r3 = virtualinvoke r11.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r9 := @caughtexception
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : return $r8
org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getServicesInUpgrade : $r9 := @caughtexception
