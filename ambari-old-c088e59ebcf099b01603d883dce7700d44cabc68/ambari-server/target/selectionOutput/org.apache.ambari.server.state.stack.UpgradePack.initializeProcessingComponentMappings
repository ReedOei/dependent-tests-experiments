org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r5 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> = $r5
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> = $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z0 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isEmpty(java.util.Collection)>($r6)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z0 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isEmpty(java.util.Collection)>($r6) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : return
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r1 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r1 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : return
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r2 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) $r8
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r2 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) $r8 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r24 = (java.util.Map) $r11
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r24 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r24
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r24 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r20 = new java.util.LinkedHashMap
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r24 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r12 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r12 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r3 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r3 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent) $r13
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent) $r13 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r4 == null
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r4 == null >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r18 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r4 == null >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r15 = <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r15 = <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r16 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r16 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r14 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r14 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $i0 = interfaceinvoke $r14.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $i0 = interfaceinvoke $r14.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("ProcessingService {} has null amongst it\'s values (total {} components)", $r16, $r17)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("ProcessingService {} has null amongst it\'s values (total {} components)", $r16, $r17) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r18 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r4)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= (branch)]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r20 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r20.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r20.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r24 = $r20
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r24 = $r20 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r21 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r21 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r12 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
