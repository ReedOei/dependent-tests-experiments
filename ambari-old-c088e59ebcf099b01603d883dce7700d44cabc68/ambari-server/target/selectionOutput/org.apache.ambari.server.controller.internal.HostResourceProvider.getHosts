org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r34 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r34 = null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = interfaceinvoke r0.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r4 = interfaceinvoke r0.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r34 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 != null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r32 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r33 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r33.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r32)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r33.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r33
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r36 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r11 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r36 = $r11
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r36 = $r11 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r36 = $r11 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r30 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r31 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r31.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r5, r6)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r31.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r5, r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r31
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r30 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r30 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= r38 = null]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r30 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= r38 = null] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r38 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r38 = null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r34
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r34 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r38 = interfaceinvoke r34.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if null == r34 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r7 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r7 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z4 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : return $r10
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r8 = (org.apache.ambari.server.state.Host) $r14
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r8 = (org.apache.ambari.server.state.Host) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r21 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r41 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r41 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r15 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r15 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r42 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r42 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $i0 = interfaceinvoke r42.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r42 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r41)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r41) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $i0 = interfaceinvoke r42.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r16 = interfaceinvoke r42.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $i0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r41)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r16 = interfaceinvoke r42.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = (org.apache.ambari.server.state.Cluster) $r17
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r9 = (org.apache.ambari.server.state.Cluster) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r18 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r18 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r19 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r9, null)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r19 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r9, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r19)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l1 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l1 = interfaceinvoke r9.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l1)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r20 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r20)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r41.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r41)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r21 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r22 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r21)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r22 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z2 = interfaceinvoke $r22.<java.util.Set: boolean contains(java.lang.Object)>(r34)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $z2 = interfaceinvoke $r22.<java.util.Set: boolean contains(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r39 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r23 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r23 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r23.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r5, r6)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : specialinvoke $r23.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>(r5, r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : throw $r23
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r39 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setClusterName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r24 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r34, r38)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r24 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>(r34, r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r24)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setDesiredHostConfigs(java.util.Map)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l2 = interfaceinvoke r34.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $l2 = interfaceinvoke r34.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r25 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r25 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r25)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r2 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r26 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getOsType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r39)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r39) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r26 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r40 = virtualinvoke r2.<org.apache.ambari.server.state.stack.OsFamily: java.lang.String find(java.lang.String)>($r26)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r40 = virtualinvoke r2.<org.apache.ambari.server.state.stack.OsFamily: java.lang.String find(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r40 != null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r40 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r27 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r40 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setOsFamily(java.lang.String)>(r40)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setOsFamily(java.lang.String)>(r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r39)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r27 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r28 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getOsType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r28 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r29 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r29 = virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Can not find host OS family. For OS type = \'{}\' and host name = \'{}\'", $r28, $r29)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Can not find host OS family. For OS type = \'{}\' and host name = \'{}\'", $r28, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : virtualinvoke r39.<org.apache.ambari.server.controller.HostResponse: void setOsFamily(java.lang.String)>(r40)
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r38 = interfaceinvoke r34.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r7 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r36 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= r38 = null]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= r38 = null] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r38 = null
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r34 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : r34 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : $r32 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getHosts : if r6 != null
