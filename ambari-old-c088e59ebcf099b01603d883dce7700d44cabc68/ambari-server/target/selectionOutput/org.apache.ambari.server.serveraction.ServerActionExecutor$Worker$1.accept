org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r3 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r4[0] = r2
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r4[0] = r2 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking folder %s", $r4)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Checking folder %s", $r4) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r5)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jar")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".jar") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker$1.accept : return $z0
