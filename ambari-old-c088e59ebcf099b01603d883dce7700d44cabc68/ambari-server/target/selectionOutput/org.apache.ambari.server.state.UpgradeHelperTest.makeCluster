org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r13 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.Clusters) $r14
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r2 = (org.apache.ambari.server.state.Clusters) $r14 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r15 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceFactory;")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceFactory;") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = (org.apache.ambari.server.state.ServiceFactory) $r16
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r3 = (org.apache.ambari.server.state.ServiceFactory) $r16 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r17 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r17)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r17) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r18 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r17, "2.1.1-1234")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r8 = virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r17, "2.1.1-1234") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r20 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.StackId STACK_ID_HDP_220>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r19 = <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.StackId STACK_ID_HDP_220> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r19, "2.2.0")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r20.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r19, "2.2.0") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r23 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r23 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.StackId STACK_ID_HDP_220>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r22 = <org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.state.StackId STACK_ID_HDP_220> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r23.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r22, "2.2.1.0-1234")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r23.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>($r22, "2.2.1.0-1234") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i2 = 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i2 = 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i2 >= 4
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i2 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = new java.lang.StringBuilder
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i2 >= 4 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r25 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "HDFS", r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r25 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "HDFS", r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r25)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r25) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "YARN", r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r26 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "YARN", r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r26)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r26) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r27 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "ZOOKEEPER", r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r27 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "ZOOKEEPER", r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r27)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r27) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "HIVE", r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "HIVE", r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r28)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r28) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "OOZIE", r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r7, "OOZIE", r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r29)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>($r29) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r163 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r163 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HDFS") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r164 = interfaceinvoke r163.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r164 = interfaceinvoke r163.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r164.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r164.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r164.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r164.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r165 = interfaceinvoke r163.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r165 = interfaceinvoke r163.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r166 = interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r166 = interfaceinvoke r165.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h4") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r167 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r167 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r168 = interfaceinvoke r167.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r168 = interfaceinvoke r167.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r168.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r169 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r169 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("YARN") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r170 = interfaceinvoke r169.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r170 = interfaceinvoke r169.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r170.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r170.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r171 = interfaceinvoke r169.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r171 = interfaceinvoke r169.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r171.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r171.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r171.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r171.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r172 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r172 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("HIVE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r173 = interfaceinvoke r172.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r173 = interfaceinvoke r172.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r173.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r173.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r174 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r174 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("OOZIE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r175 = interfaceinvoke r174.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r175 = interfaceinvoke r174.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r175.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r175.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r175.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r175.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r176 = interfaceinvoke r174.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r176 = interfaceinvoke r174.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r176.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r46 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r46 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r46.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r46.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.transport.mode", "binary") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hive.server2.thrift.port", "10001") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r49 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r49 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>("c1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setType(java.lang.String)>("hive-site") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setVersionTag(java.lang.String)>("version1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>($r46)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r49.<org.apache.ambari.server.controller.ConfigurationRequest: void setProperties(java.util.Map)>($r46) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r50 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r50 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l0 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $l0 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r52 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r52 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r53 = virtualinvoke $r52.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r53 = virtualinvoke $r52.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r50.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r51, "c1", $r53, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r50.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r51, "c1", $r53, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r54 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r49)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r54 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r50.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r54)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r50.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r54) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r56 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r56 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.controller.AmbariManagementController m_managementController> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r55 = new org.apache.ambari.server.state.UpgradeHelperTest$15
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r55 = new org.apache.ambari.server.state.UpgradeHelperTest$15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r55.<org.apache.ambari.server.state.UpgradeHelperTest$15: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, $r50)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r55.<org.apache.ambari.server.state.UpgradeHelperTest$15: void <init>(org.apache.ambari.server.state.UpgradeHelperTest,org.apache.ambari.server.controller.ClusterRequest)>(r0, $r50) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r56.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r55, null)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r56.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r55, null) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r58 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r58 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r58.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r58.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r60 = $r58.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r60 = $r58.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r59[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r61 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r59)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r61 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r59) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r60.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r61)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r60.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r61) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r62 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r62 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r63 = virtualinvoke $r62.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r63 = virtualinvoke $r62.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("ZOOKEEPER", "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r63)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r65 = interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r58)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r65 = interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r67.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r67.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r69 = $r67.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r69 = $r67.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r68[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r70 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r68)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r70 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r68) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r69.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r70)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r69.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r70) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r67.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r71 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r71 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r72 = virtualinvoke $r71.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r72 = virtualinvoke $r71.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r73 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r72)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r73 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r74 = interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r74 = interfaceinvoke $r73.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r76.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r76.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = $r76.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r166)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r77 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r166) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r77
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r76.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = $r77 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = $r76.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r79 = $r76.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r78[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r78)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r80 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r78) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r79.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r80)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r79.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r80) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = virtualinvoke $r81.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r82 = virtualinvoke $r81.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HDFS", "DATANODE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r86 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r86.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r86.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = $r86.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r88 = $r86.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = newarray (java.lang.String)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r87[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r87)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r89 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r87) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r88.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r89)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r88.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r89) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r90 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r90 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = virtualinvoke $r90.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r91 = virtualinvoke $r90.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r86)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r95 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r95.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r95.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r96 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = virtualinvoke $r96.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r97 = virtualinvoke $r96.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "APP_TIMELINE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r98 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r97) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r95)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r99 = interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r101 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r101.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r101.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = $r101.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r103 = $r101.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r102[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r102)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r104 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r102) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r103.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r104)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r103.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r104) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r105 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = virtualinvoke $r105.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r106 = virtualinvoke $r105.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("YARN", "NODEMANAGER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r106)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r107 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r106) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = interfaceinvoke $r107.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r108 = interfaceinvoke $r107.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r110 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = virtualinvoke $r110.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r111 = virtualinvoke $r110.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HIVE", "HIVE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r113 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r113.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r115 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r115.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r115.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = $r115.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r117 = $r115.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r116[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r116)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r118 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r116) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r117.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r118)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r117.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r118) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r119 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = virtualinvoke $r119.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r120 = virtualinvoke $r119.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_SERVER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r122 = interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r124 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r124 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r124.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r124.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r126 = $r124.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r126 = $r124.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[2] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r125[2] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r125)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r127 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r125) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r126.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r127)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r126.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r127) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r128 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r128 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = virtualinvoke $r128.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r129 = virtualinvoke $r128.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("OOZIE", "OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r131 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r124)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r131 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r124) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r133 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r133 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = virtualinvoke $r133.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r134 = virtualinvoke $r133.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r134)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r135 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r134) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r136 = interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r11 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z11 == 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z11 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z11 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r139 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138[0] = $r139
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r138[0] = $r139 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r138)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r138) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : return r7
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r140 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = (java.lang.String) $r140
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r12 = (java.lang.String) $r140 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r12, r8)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r12, r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $z8 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("HBASE")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $z8 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("HBASE") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z8 == 0
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r142 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r142.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r142.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = $r142.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r144 = $r142.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143 = newarray (java.lang.String)[2]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143[0] = "h1"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143[0] = "h1" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143[1] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r143[1] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r143)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r145 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r143) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r144.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r145)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r144.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r145) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r146 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r146 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = virtualinvoke $r146.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HBASE", "HBASE_MASTER")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r147 = virtualinvoke $r146.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType getMasterAndHosts(java.lang.String,java.lang.String)>("HBASE", "HBASE_MASTER") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r148 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r147)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r148 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r147) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = interfaceinvoke $r148.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r142)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r149 = interfaceinvoke $r148.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r142) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $z11 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r152 = $r76.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = newarray (java.lang.String)[3]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[0] = "h2"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[0] = "h2" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[1] = "h3"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[1] = "h3" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[2] = "h4"
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r151[2] = "h4" >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r151)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r153 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r151) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r152.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r153)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : virtualinvoke $r152.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r153) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r81 = r0.<org.apache.ambari.server.state.UpgradeHelperTest: org.apache.ambari.server.stack.MasterHostResolver m_masterHostResolver>
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r154 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r154.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r154.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i2 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $i1 = i2 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r160 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r160 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r160)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r160) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r161 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r160)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : r161 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r160) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = new java.util.HashMap
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : $r157 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r157.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : specialinvoke $r157.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke $r157.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r161.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r157)
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r161.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r157) >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r160, "c1")
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r160, "c1") >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i2 = i2 + 1
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelperTest.makeCluster : if i2 >= 4
