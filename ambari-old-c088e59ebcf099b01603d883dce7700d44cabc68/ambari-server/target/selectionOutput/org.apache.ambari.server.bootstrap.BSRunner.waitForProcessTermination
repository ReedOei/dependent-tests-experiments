org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : virtualinvoke r1.<java.lang.Process: int exitValue()>()
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $r3 := @caughtexception
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : staticinvoke <java.lang.Thread: void sleep(long)>(1000L) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $l4 = $l3 - l1
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $l4 = $l3 - l1 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $b5 = $l4 cmp l0
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $b5 = $l4 cmp l0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : if $b5 < 0
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : if $b5 < 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : return 0
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : if $b5 < 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : virtualinvoke r1.<java.lang.Process: int exitValue()>()
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : if $b5 < 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $r3 := @caughtexception
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : virtualinvoke r1.<java.lang.Process: int exitValue()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : return 1
org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : virtualinvoke r1.<java.lang.Process: int exitValue()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.waitForProcessTermination : $r3 := @caughtexception
