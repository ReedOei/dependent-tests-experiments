org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r10 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r2 = (org.apache.ambari.server.controller.spi.Resource) $r10
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r2 = (org.apache.ambari.server.controller.spi.Resource) $r10 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r12 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r28 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r28 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r11 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : return
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r11 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r30 = (org.apache.ambari.server.api.util.TreeNode) $r11
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r30 = (org.apache.ambari.server.api.util.TreeNode) $r11 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processResultNode(org.apache.ambari.server.api.util.TreeNode)>(r30)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processResultNode(org.apache.ambari.server.api.util.TreeNode)>(r30) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z7 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z7 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r12 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r13 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: org.apache.ambari.server.controller.spi.Resource$Type m_rootType>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r13 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: org.apache.ambari.server.controller.spi.Resource$Type m_rootType> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r12 != $r13
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r12 != $r13 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z5 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean m_isCollection>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r12 != $r13 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r26 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r26 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r14 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r14 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r27 = (java.util.Set) $r15
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r27 = (java.util.Set) $r15 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r16 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r16 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r28 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r5 = (java.util.Map$Entry) $r17
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r5 = (java.util.Map$Entry) $r17 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r6 = (java.lang.String) $r18
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r6 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r20 = (java.util.Map) $r19
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r20 = (java.util.Map) $r19 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r7 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r7 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r23 = (java.util.Map) $r22
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r23 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z1 = interfaceinvoke $r23.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z1 = interfaceinvoke $r23.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r4.<java.util.Iterator: void remove()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r4.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r8 = (java.lang.String) $r24
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r8 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r9 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r6, r8)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r9 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r6, r8) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r27 == null
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r27 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z3 = interfaceinvoke r27.<java.util.Set: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r27 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r25 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r26)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r25 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r26) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z2 = interfaceinvoke $r25.<java.util.Set: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z2 = interfaceinvoke $r25.<java.util.Set: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r7.<java.util.Iterator: void remove()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r7.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z3 = interfaceinvoke r27.<java.util.Set: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z4 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean isSubCategory(java.util.Set,java.lang.String)>(r27, r6)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z4 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean isSubCategory(java.util.Set,java.lang.String)>(r27, r6) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r25 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r26)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z5 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean m_isCollection> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r26 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r28 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
