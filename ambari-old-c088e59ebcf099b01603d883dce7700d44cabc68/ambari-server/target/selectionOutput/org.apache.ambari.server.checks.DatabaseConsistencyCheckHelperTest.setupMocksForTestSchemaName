org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r5 = (org.apache.ambari.server.configuration.Configuration) $r13
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r5 = (org.apache.ambari.server.configuration.Configuration) $r13 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r6 = (org.apache.ambari.server.state.stack.OsFamily) $r14
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r6 = (org.apache.ambari.server.state.stack.OsFamily) $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/sql/Connection;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/sql/Connection;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r7 = (java.sql.Connection) $r15
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r7 = (java.sql.Connection) $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r8 = (org.apache.ambari.server.orm.DBAccessor) $r16
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r8 = (org.apache.ambari.server.orm.DBAccessor) $r16 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/Statement;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/Statement;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r9 = (java.sql.Statement) $r17
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r9 = (java.sql.Statement) $r17 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/Statement;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/Statement;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r10 = (java.sql.Statement) $r18
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r10 = (java.sql.Statement) $r18 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/DatabaseMetaData;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Ljava/sql/DatabaseMetaData;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r11 = (java.sql.DatabaseMetaData) $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r11 = (java.sql.DatabaseMetaData) $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r20 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r20 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r21 = new org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$5
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r21 = new org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$5 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : specialinvoke $r21.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$5: void <init>(org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest,org.apache.ambari.server.orm.DBAccessor,org.apache.ambari.server.state.stack.OsFamily,org.apache.ambari.server.configuration.Configuration)>(r0, r8, r6, r5)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : specialinvoke $r21.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$5: void <init>(org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest,org.apache.ambari.server.orm.DBAccessor,org.apache.ambari.server.state.stack.OsFamily,org.apache.ambari.server.configuration.Configuration)>(r0, r8, r6, r5) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r20[0] = $r21
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r12 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r20)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : r12 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r22 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r22 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r26 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r26 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r28 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r28 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r30 = interfaceinvoke r8.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r30 = interfaceinvoke r8.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r33 = interfaceinvoke r7.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r33 = interfaceinvoke r7.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r36 = interfaceinvoke r7.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r36 = interfaceinvoke r7.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r39 = interfaceinvoke r7.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r39 = interfaceinvoke r7.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r42 = interfaceinvoke r11.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r42 = interfaceinvoke r11.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r44 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("TABLE_SCHEM", r3)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r44 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("TABLE_SCHEM", r3) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r44)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r47 = interfaceinvoke r9.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r46)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r47 = interfaceinvoke r9.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r49 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r49 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r49[0] = r2
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r49[0] = r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r50 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r49)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r50 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r49) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r51 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("search_path", $r50)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r51 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("search_path", $r50) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r54 = interfaceinvoke r10.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r53)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r54 = interfaceinvoke r10.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r56 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("table_schema", r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r56 = specialinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest: java.sql.ResultSet resultSet(java.lang.String,java.util.List)>("table_schema", r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r56)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58 = newarray (java.lang.Object)[7]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58 = newarray (java.lang.Object)[7] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[0] = r5
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[0] = r5 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[1] = r7
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[1] = r7 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[2] = r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[2] = r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[3] = r11
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[3] = r11 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[4] = r10
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[4] = r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[5] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[5] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[6] = r9
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : $r58[6] = r9 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r58)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r58) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void setInjector(com.google.inject.Injector)>(r12)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void setInjector(com.google.inject.Injector)>(r12) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void setConnection(java.sql.Connection)>(null)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void setConnection(java.sql.Connection)>(null) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void resetCheckResult()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void resetCheckResult()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.setupMocksForTestSchemaName : return
