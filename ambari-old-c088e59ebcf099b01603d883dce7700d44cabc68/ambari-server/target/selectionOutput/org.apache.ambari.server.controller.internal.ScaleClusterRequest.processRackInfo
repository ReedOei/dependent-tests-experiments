org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : r5 = null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("Hosts/rack_info")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("Hosts/rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z0 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("rack_info")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z1 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("rack_info")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r2 = <org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.slf4j.Logger LOGGER>
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r2 = <org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("No rack info provided")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("No rack info provided") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : return r5
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : r5 = (java.lang.String) $r3
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : r5 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : goto [?= return r5]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : goto [?= return r5] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : return r5
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : r5 = (java.lang.String) $r4
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : goto [?= return r5]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : goto [?= return r5] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.processRackInfo : return r5
