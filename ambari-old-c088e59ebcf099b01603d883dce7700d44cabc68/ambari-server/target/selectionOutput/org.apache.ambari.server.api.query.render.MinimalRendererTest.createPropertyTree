org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r4 = new org.apache.ambari.server.api.query.QueryInfo
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r4 = new org.apache.ambari.server.api.query.QueryInfo >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r5 = new org.apache.ambari.server.api.resources.ClusterResourceDefinition
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r5 = new org.apache.ambari.server.api.resources.ClusterResourceDefinition >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r5.<org.apache.ambari.server.api.resources.ClusterResourceDefinition: void <init>()>()
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r5.<org.apache.ambari.server.api.resources.ClusterResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r6 = new java.util.HashSet
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>($r5, $r6)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>($r5, $r6) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, $r4, "Cluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, $r4, "Cluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r7 = interfaceinvoke $r3.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r7 = interfaceinvoke $r3.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r8 = (org.apache.ambari.server.api.query.QueryInfo) $r7
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : $r8 = (org.apache.ambari.server.api.query.QueryInfo) $r7 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : r2 = virtualinvoke $r8.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>()
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : r2 = virtualinvoke $r8.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/cluster_name")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/cluster_name") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/version")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/version") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/prop1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("Clusters/prop1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("foo")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("foo") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createPropertyTree : return $r3
