org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r2 = <org.apache.ambari.server.api.predicate.QueryLexer: java.lang.String[] ALL_DELIMS>
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r2 = <org.apache.ambari.server.api.predicate.QueryLexer: java.lang.String[] ALL_DELIMS> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i0 = lengthof r2
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i2 = 0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i2 = 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i2 >= i0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i2 >= i0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r3 = r2[i2]
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i2 >= i0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r7)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : return $r8
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r3 = r2[i2] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i1 == 1
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i1 == 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i1 == 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i2 = i2 + 1
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : goto [?= (branch)]
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i2 >= i0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)
