org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r4 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r4
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r36 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r40 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r40 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r40
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r40 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r33 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r40 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r42 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r42 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z2 = interfaceinvoke $r42.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z2 = interfaceinvoke $r42.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r27 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r5 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r5 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r6
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r6 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null == $r6 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r8, $r7)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r8, $r7) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r10 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r10 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r10, $r9)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r10, $r9) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r12 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r12 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List tasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List tasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r12, $r11)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r12, $r11) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r14 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r14 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r13 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r14, $r13)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r14, $r13) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r16 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r16 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r16, $r15)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: void initializeTasks(java.lang.String,java.util.List)>($r16, $r15) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : return
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r17 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r17
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r17 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r17 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r8 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r19 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r19 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18[0] = $r19
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18[0] = $r19 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r20 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r20 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18[1] = $r20
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r18[1] = $r20 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r44 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain post-downgrade elements if post-upgrade exists for processing component %s/%s", $r18)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r44 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain post-downgrade elements if post-upgrade exists for processing component %s/%s", $r18) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r21 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>(r44)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>(r44) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : throw $r21
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r22 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r22
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r22 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if null != $r22 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r24 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23[0] = $r24
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23[0] = $r24 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r25 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r25 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23[1] = $r25
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r23[1] = $r25 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain pre-downgrade elements if pre-upgrade exists for processing component %s/%s", $r23)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Upgrade pack must contain pre-downgrade elements if pre-upgrade exists for processing component %s/%s", $r23) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r26 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r26 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>(r43)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>(r43) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : throw $r26
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r27 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28 = newarray (java.lang.Object)[4]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r29 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r29 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[0] = $r29
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[0] = $r29 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r30 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[1] = $r30
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[1] = $r30 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r31 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r31 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[2] = $r31
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[2] = $r31 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r32 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r32 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[3] = $r32
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r28[3] = $r32 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processing component {}/{} preUpgrade={} postUpgrade={} preDowngrade={} postDowngrade={}", $r28)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processing component {}/{} preUpgrade={} postUpgrade={} preDowngrade={} postDowngrade={}", $r28) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r5 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r33 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z0 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r33)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z0 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r33) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r41 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r34 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r34 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r41 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r34)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r41 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r34) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r41
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r41 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) r2
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r41 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r41]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r41] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> = $r41
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r36 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z1 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r36)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $z1 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: boolean access$000(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r39 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r37 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r37 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks preDowngradeXml> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r39 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r37)
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r39 = staticinvoke <org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks: java.util.List access$100(org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks)>($r37) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r39
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r39 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r40 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: org.apache.ambari.server.state.stack.UpgradePack$DowngradeTasks postDowngradeXml>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : $r39 = r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r39]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : goto [?= r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r39] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.afterUnmarshal : r0.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> = $r39
