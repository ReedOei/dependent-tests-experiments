org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : r3 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "ranger-admin-site", "ranger.service.http.enabled") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "ranger-admin-site", "ranger.service.https.attrib.ssl.enabled")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : r4 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "ranger-admin-site", "ranger.service.https.attrib.ssl.enabled") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "ranger-admin-site", "ranger.https.attrib.keystore.file")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "ranger-admin-site", "ranger.https.attrib.keystore.file") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r6 = "false"
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r6 = "false" >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3)
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r7 = "true"
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r12 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r12 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Ranger is not SSL enabled, no need to show Configuration changes warning before upragade proceeds.")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Ranger is not SSL enabled, no need to show Configuration changes warning before upragade proceeds.") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : return
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r7 = "true" >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4)
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/etc/ranger/admin/conf")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r12 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/etc/ranger/admin/conf") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r8 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r12 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r8 = <org.apache.ambari.server.checks.RangerSSLConfigCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Ranger is SSL enabled, need to show Configuration changes warning before upragade proceeds.")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Ranger is SSL enabled, need to show Configuration changes warning before upragade proceeds.") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r10 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r10 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r10)
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r10) >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r11 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : $r11 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerSSLConfigCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11)
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : goto [?= return]
org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.RangerSSLConfigCheck.perform : return
