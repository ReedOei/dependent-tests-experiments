org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r6 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r2 = virtualinvoke $r6.<org.apache.ambari.server.state.ExtensionInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r2 = virtualinvoke $r6.<org.apache.ambari.server.state.ExtensionInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r7 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r7 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z0 == 0
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : return
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r4 = (org.apache.ambari.server.stack.StackModule) $r8
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r4 = (org.apache.ambari.server.stack.StackModule) $r8 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r9 = virtualinvoke r4.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo getModuleInfo()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r9 = virtualinvoke r4.<org.apache.ambari.server.stack.StackModule: org.apache.ambari.server.state.StackInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r5 = virtualinvoke $r9.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : r5 = virtualinvoke $r9.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r5)
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z1 == 0
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The extension \'")
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The extension \'") >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has a name which matches a stack name")
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has a name which matches a stack name") >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r15)
org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.checkExtensionName : throw $r10
