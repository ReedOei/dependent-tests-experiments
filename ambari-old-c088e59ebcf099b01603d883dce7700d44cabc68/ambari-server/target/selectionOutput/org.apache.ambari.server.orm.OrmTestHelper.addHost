org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r3)
org.apache.ambari.server.orm.OrmTestHelper.addHost : r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : $r6 = new java.util.HashMap
org.apache.ambari.server.orm.OrmTestHelper.addHost : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.orm.OrmTestHelper.addHost : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.4")
org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.4") >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r6)
org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r6) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : $r9 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.orm.OrmTestHelper.addHost : $r9 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r9)
org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r9) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r3)
org.apache.ambari.server.orm.OrmTestHelper.addHost : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : $r11 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.orm.OrmTestHelper.addHost : $r11 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r10, $r11)
org.apache.ambari.server.orm.OrmTestHelper.addHost : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r10, $r11) >>>>>>>> org.apache.ambari.server.orm.OrmTestHelper.addHost : return
