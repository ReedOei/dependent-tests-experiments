org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z0 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r27 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r7 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.Set m_servicesToCheck>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.Set m_servicesToCheck> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : r28 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : r28 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z7 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r22 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z1 = virtualinvoke $r9.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z1 = virtualinvoke $r9.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z2 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: boolean m_serviceCheck>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : return $r30
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z2 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: boolean m_serviceCheck> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r10 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.Set m_servicesToCheck>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r10 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.Set m_servicesToCheck> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $i0 = interfaceinvoke $r10.<java.util.Set: int size()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $i0 = interfaceinvoke $r10.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $i0 <= 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r11 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r11 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r13 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r13 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ")
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r15 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r7, ", ")
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r15 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r7, ", ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r18 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[0]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r18 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r19 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r19 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r20 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r19
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r20 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r13, $r17, $r20)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r13, $r17, $r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r21 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r22 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : r5 = (java.lang.String) $r22
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : r5 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r23 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r23 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r24 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r24 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r25 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r25 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r23.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task)>(r5, "", $r24, $r25)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : specialinvoke $r23.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task)>(r5, "", $r24, $r25) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r26 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r5)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r26 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : goto [?= $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : goto [?= $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r27 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r27.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r2)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : interfaceinvoke $r27.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.build : $r6 = new java.util.ArrayList
