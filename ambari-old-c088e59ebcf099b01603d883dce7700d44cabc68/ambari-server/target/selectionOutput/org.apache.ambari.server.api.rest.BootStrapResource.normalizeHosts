org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r7 = new java.util.ArrayList
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r8 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r8 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: void setHosts(java.util.List)>($r7)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: void setHosts(java.util.List)>($r7) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : return
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r5 = (java.lang.String) $r9
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r25 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r5)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r20 = <org.apache.ambari.server.api.rest.BootStrapResource: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be determined.")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be determined.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r24)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r25 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r10 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r25 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r10 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r10)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r10 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r12 = <org.apache.ambari.server.api.rest.BootStrapResource: org.slf4j.Logger LOG>
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r12 = <org.apache.ambari.server.api.rest.BootStrapResource: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r16)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke r25.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
