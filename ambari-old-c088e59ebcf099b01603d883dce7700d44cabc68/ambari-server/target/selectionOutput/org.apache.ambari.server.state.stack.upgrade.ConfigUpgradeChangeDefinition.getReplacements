org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List replacements> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r4
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r5 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List replacements>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r6 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: java.util.List replacements> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : return $r5
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : r3 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace) $r7
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : r3 = (org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String key>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r8 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String key> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r8
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r9 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String find>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r13[0] = r3
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r13[0] = r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Replacement %s is invalid", $r13)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Replacement %s is invalid", $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r14)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r9 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String find> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r9
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String replaceWith>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null == $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r10 = r3.<org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition$Replace: java.lang.String replaceWith> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r10
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r12 = <org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : if null != $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigUpgradeChangeDefinition.getReplacements : return $r11
