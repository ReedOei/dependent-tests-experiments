org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r5 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r5 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r3 = interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r3 = interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r6.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r6.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r7 = $r6.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r7 = $r6.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : virtualinvoke $r7.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : virtualinvoke $r7.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r39 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r9 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r41.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r9 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r32 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get master and hosts for Component ")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get master and hosts for Component ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error: ")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error: ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r36 = virtualinvoke $r30.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r36 = virtualinvoke $r30.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r38, $r30)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r38, $r30) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return r47
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r41.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r9[$i1]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r41.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r9[$i1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1:
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r9[$i1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r28, $r6)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r28, $r6) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r28, $r6) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r29, $r6)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r29, $r6) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r29, $r6) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r43 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair(java.util.Set)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r43 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair(java.util.Set)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r43 == null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r43 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair(java.util.Set)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r43 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r43 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r43 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = (java.lang.String) $r10
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r11
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r11 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r11 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = (java.lang.String) $r12
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r13
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r13 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r15 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r13 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r15 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r15 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r16 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r16 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[0] = $r16
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r16 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[0] = $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[0] = $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[1] = $r17
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[1] = $r17 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[1] = $r17 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[2] = $r18
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[2] = $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r14)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14[2] = $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r14) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r14) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r43.<java.util.Map: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r21 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r21 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r21 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = (java.lang.String) $r22
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r45] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = (java.lang.String) $r25
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r6.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r44] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return $r27
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>($r6, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r8)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r39 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r9 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r41 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r39 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r9 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r9 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>
