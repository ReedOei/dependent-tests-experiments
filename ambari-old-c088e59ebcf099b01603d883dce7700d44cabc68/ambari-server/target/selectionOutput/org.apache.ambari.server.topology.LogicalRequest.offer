org.apache.ambari.server.topology.LogicalRequest.offer : $r3 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r3
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r4 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw $r44
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r4 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r4 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r5)
org.apache.ambari.server.topology.LogicalRequest.offer : $r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r6 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r6 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r6 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7)
org.apache.ambari.server.topology.LogicalRequest.offer : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r47 = (org.apache.ambari.server.topology.HostRequest) $r8
org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r47 = (org.apache.ambari.server.topology.HostRequest) $r8 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if r47 == null
org.apache.ambari.server.topology.LogicalRequest.offer : r47 = (org.apache.ambari.server.topology.HostRequest) $r8 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if r47 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r48 = virtualinvoke r47.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1)
org.apache.ambari.server.topology.LogicalRequest.offer : if r47 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3
org.apache.ambari.server.topology.LogicalRequest.offer : if r47 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= z2 = 0]
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= z2 = 0] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : z2 = 0
org.apache.ambari.server.topology.LogicalRequest.offer : z2 = 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r9
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw $r45
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r51 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r51 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.offer : r51 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.offer : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ")
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r14.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r14.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r14.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r16)
org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if z2 != 0
org.apache.ambari.server.topology.LogicalRequest.offer : if z2 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r17 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : if z2 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE>
org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= return $r53]
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= return $r53] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return $r53
org.apache.ambari.server.topology.LogicalRequest.offer : $r17 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke $r17.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke $r17.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 != 0
org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_DONE>
org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_DONE> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return $r53
org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r19)
org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r19) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r19) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = (org.apache.ambari.server.topology.HostRequest) $r20
org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = (org.apache.ambari.server.topology.HostRequest) $r20 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r52 = virtualinvoke $r21.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1)
org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = (org.apache.ambari.server.topology.HostRequest) $r20 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r52 = virtualinvoke $r21.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer>
org.apache.ambari.server.topology.LogicalRequest.offer : r52 = virtualinvoke $r21.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r23.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r23.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r22[$i1]
org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r23.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r22[$i1] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1:
org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r22[$i1] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r26 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r26 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r26 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r27)
org.apache.ambari.server.topology.LogicalRequest.offer : $r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r27) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : z2 = 1
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r27) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : z2 = 1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : z2 = 1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r28 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r28 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r28 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r29)
org.apache.ambari.server.topology.LogicalRequest.offer : $r29 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r29) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r29) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r51.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r25)
org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r25) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r25) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return r52
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r9 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r48 = virtualinvoke r47.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r31 = virtualinvoke r48.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.LogicalRequest.offer : r48 = virtualinvoke r47.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r31 = virtualinvoke r48.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED>
org.apache.ambari.server.topology.LogicalRequest.offer : $r31 = virtualinvoke r48.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $r31 == $r32
org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if $r31 == $r32 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = new java.lang.RuntimeException
org.apache.ambari.server.topology.LogicalRequest.offer : if $r31 == $r32 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $r31 == $r32 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r34)
org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r34) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r36 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r34) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r36 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : $r36 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r35.<java.util.Map: int size()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r35.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r35.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r37)
org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r37) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r37) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return r48
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor $r3 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = new java.lang.StringBuilder
org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ")
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r41 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r41 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.apache.ambari.server.topology.LogicalRequest.offer : $r41 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r43)
org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw $r38
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : throw $r38 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 := @caughtexception
