org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r3 = new org.apache.ambari.server.api.predicate.QueryParser$ParseContext >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : specialinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: void <init>(org.apache.ambari.server.api.predicate.QueryParser,org.apache.ambari.server.api.predicate.Token[])>(r0, r1)
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : specialinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: void <init>(org.apache.ambari.server.api.predicate.QueryParser,org.apache.ambari.server.api.predicate.Token[])>(r0, r1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i1 = lengthof r1
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i1 = lengthof r1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i0 >= $i1
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r5 = <org.apache.ambari.server.api.predicate.QueryParser: java.util.Map TOKEN_HANDLERS>
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i2 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getPrecedenceLevel()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i2 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getPrecedenceLevel()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i2 == 0
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i2 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r4 = new org.apache.ambari.server.api.predicate.InvalidQueryException
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : if $i2 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : return $r3
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r4 = new org.apache.ambari.server.api.predicate.InvalidQueryException >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : specialinvoke $r4.<org.apache.ambari.server.api.predicate.InvalidQueryException: void <init>(java.lang.String)>("Invalid query string: mismatched parentheses.")
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : specialinvoke $r4.<org.apache.ambari.server.api.predicate.InvalidQueryException: void <init>(java.lang.String)>("Invalid query string: mismatched parentheses.") >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : throw $r4
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r5 = <org.apache.ambari.server.api.predicate.QueryParser: java.util.Map TOKEN_HANDLERS> >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i3 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i3 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r6 = r1[$i3]
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r6 = r1[$i3] >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r7 = virtualinvoke $r6.<org.apache.ambari.server.api.predicate.Token: org.apache.ambari.server.api.predicate.Token$TYPE getType()>()
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r7 = virtualinvoke $r6.<org.apache.ambari.server.api.predicate.Token: org.apache.ambari.server.api.predicate.Token$TYPE getType()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r9 = (org.apache.ambari.server.api.predicate.QueryParser$TokenHandler) $r8
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $r9 = (org.apache.ambari.server.api.predicate.QueryParser$TokenHandler) $r8 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : virtualinvoke $r9.<org.apache.ambari.server.api.predicate.QueryParser$TokenHandler: void handleToken(org.apache.ambari.server.api.predicate.QueryParser$ParseContext)>($r3)
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : virtualinvoke $r9.<org.apache.ambari.server.api.predicate.QueryParser$TokenHandler: void handleToken(org.apache.ambari.server.api.predicate.QueryParser$ParseContext)>($r3) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : goto [?= $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()]
org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : goto [?= $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()] >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parseExpressions : $i0 = virtualinvoke $r3.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getCurrentTokensIndex()>()
