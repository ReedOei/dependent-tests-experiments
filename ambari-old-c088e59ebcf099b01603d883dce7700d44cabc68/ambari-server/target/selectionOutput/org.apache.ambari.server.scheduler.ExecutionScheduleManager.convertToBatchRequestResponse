org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r5 = new org.apache.ambari.server.state.scheduler.BatchRequestResponse >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : i0 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: int getStatus()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : i0 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: int getStatus()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnCode(int)>(i0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnCode(int)>(i0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r6 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: java.lang.Object getEntity(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r6 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: java.lang.Object getEntity(java.lang.Class)>(class "Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r3 = (java.lang.String) $r6
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r3 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r7 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r7 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing API response: status={}, body={}", $r8, r3)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing API response: status={}, body={}", $r8, r3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r9 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r9 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r3, class "Ljava/util/Map;")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r9 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r38 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String)>("Response is not valid JSON object. Recording as is")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String)>("Response is not valid JSON object. Recording as is") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r39 = new java.util.HashMap
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r39 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r39.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r39.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r41 = $r39
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r41 = $r39 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("message", r3)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("message", r3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r41 != null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("message")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("message") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r13 = (java.lang.String) $r12
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnMessage(java.lang.String)>($r13)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnMessage(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r14 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r14 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 = virtualinvoke $r14.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 = virtualinvoke $r14.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r15)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return $r5
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r41 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r35 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r41 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r43 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r43 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r4 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("Requests")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r4 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("Requests") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $z0 = r4 instanceof java.util.Map
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $z0 = r4 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r43 = (java.util.Map) r4
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r43 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r43 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r16 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("id")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r43 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return $r5]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return $r5
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r16 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("id") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r17 = (java.lang.Double) $r16
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r17 = (java.lang.Double) $r16 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $l1 = virtualinvoke $r17.<java.lang.Double: long longValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $l1 = virtualinvoke $r17.<java.lang.Double: long longValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setRequestId(java.lang.Long)>($r18)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setRequestId(java.lang.Long)>($r18) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r19 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r19 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r19 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r19 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r34 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r19 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r20 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r20 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r20 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r20 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r33 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r20 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r21 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r21 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r21 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r21 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r31 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r21 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r22 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r22 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r29 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r22 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r23 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r23 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r23 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r23 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r27 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r23 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r24 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r24 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r24 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r24 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r25 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r24 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r44)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r44) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return $r5]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r25 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r26 = (java.lang.Double) $r25
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r26 = (java.lang.Double) $r25 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i2 = virtualinvoke $r26.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i2 = virtualinvoke $r26.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTotalTaskCount(int)>($i2)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTotalTaskCount(int)>($i2) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r44)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r27 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r28 = (java.lang.Double) $r27
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r28 = (java.lang.Double) $r27 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i3 = virtualinvoke $r28.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i3 = virtualinvoke $r28.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTimedOutTaskCount(int)>($i3)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTimedOutTaskCount(int)>($i3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r24 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r29 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r30 = (java.lang.Double) $r29
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r30 = (java.lang.Double) $r29 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i4 = virtualinvoke $r30.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i4 = virtualinvoke $r30.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setFailedTaskCount(int)>($i4)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setFailedTaskCount(int)>($i4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r23 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r31 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r32 = (java.lang.Double) $r31
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r32 = (java.lang.Double) $r31 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i5 = virtualinvoke $r32.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i5 = virtualinvoke $r32.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setAbortedTaskCount(int)>($i5)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setAbortedTaskCount(int)>($i5) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r22 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r33 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r21 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r34 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = virtualinvoke $r34.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r44 = virtualinvoke $r34.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r20 = interfaceinvoke r43.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r43 = (java.util.Map) r4 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r43 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r35 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r36 = virtualinvoke $r35.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r36 = virtualinvoke $r35.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r36)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke $r5.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return $r5
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r3, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r41 = (java.util.Map) $r10
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r3, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r41 = (java.util.Map) $r10 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r11 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r11 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r11 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300
