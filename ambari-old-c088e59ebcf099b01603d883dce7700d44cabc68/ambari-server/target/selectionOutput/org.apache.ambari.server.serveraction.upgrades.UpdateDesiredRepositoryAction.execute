org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r2 = virtualinvoke $r6.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r2 = virtualinvoke $r6.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.state.UpgradeContext getUpgradeContext(org.apache.ambari.server.state.Cluster)>(r3)
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.state.UpgradeContext getUpgradeContext(org.apache.ambari.server.state.Cluster)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r5 = virtualinvoke $r8.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>()
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r5 = virtualinvoke $r8.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if r5 == null
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if r5 == null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("ACTION_USER_NAME")
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if r5 == null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r9 = r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r9 = r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r14 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: java.lang.String getAnonymousAuditName()>()
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r14 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: java.lang.String getAnonymousAuditName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r11 = <org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r11 = <org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10[0] = "ACTION_USER_NAME"
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10[0] = "ACTION_USER_NAME" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10[1] = r14
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r10[1] = r14 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not receive role parameter %s, will save configs using anonymous username %s", $r10)
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not receive role parameter %s, will save configs using anonymous username %s", $r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r12)
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.CommandReport updateDesiredRepositoryVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.UpgradeContext,java.lang.String)>(r3, r4, r14)
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.CommandReport updateDesiredRepositoryVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.UpgradeContext,java.lang.String)>(r3, r4, r14) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : return $r15
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("ACTION_USER_NAME") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r13 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("ACTION_USER_NAME")
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r9 = r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r13 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("ACTION_USER_NAME") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r14 = (java.lang.String) $r13
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : goto [?= $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.CommandReport updateDesiredRepositoryVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.UpgradeContext,java.lang.String)>(r3, r4, r14)]
org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : goto [?= $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.CommandReport updateDesiredRepositoryVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.UpgradeContext,java.lang.String)>(r3, r4, r14)] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction.execute : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction: org.apache.ambari.server.agent.CommandReport updateDesiredRepositoryVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.UpgradeContext,java.lang.String)>(r3, r4, r14)
