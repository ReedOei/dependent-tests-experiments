org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r11 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r3 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r3 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r12 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r12 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r12)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r12) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addHost(java.lang.String)>("h2")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r13 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r13 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addHost(java.lang.String)>("h3")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addHost(java.lang.String)>("h3") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r14 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r14 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h3", "c1")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h3", "c1") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r15 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r15 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r4 = virtualinvoke $r15.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, r1)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r4 = virtualinvoke $r15.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r16 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Cluster c1>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r16 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Cluster c1> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r16.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r2)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r16.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r2) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r17 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r17 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, $r17)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, $r17) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r18 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r18 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>("2.2.0-2086", $r18)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>("2.2.0-2086", $r18) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r19 = new java.util.ArrayList
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r19 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r19.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r19.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h1")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h1") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h2")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h2") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h3")
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("h3") >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r20 = new java.util.HashMap
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21 = newarray (java.lang.Integer)[3]
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21 = newarray (java.lang.Integer)[3] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[0] = $r22
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[1] = $r23
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[1] = $r23 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[2] = $r24
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r21[2] = $r24 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r25 = new java.util.ArrayList
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r25 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>(r7)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke $r25.<java.util.ArrayList: void <init>(java.util.Collection)>(r7) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER_SERVER", $r25)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER_SERVER", $r25) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r27 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Cluster c1>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r27 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.state.Cluster c1> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addService(org.apache.ambari.server.state.Cluster,java.util.List,java.util.Map,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r27, $r19, $r20, "ZOOKEEPER", r4)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void addService(org.apache.ambari.server.state.Cluster,java.util.List,java.util.Map,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r27, $r19, $r20, "ZOOKEEPER", r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r29 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r29 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r29.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h1", r4, $r28)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r29.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h1", r4, $r28) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r32 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r32 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r32.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h2", r4, $r31)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r32.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h2", r4, $r31) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r35 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r35 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r34 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r34 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r35.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h3", r4, $r34)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : virtualinvoke $r35.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.HostVersionEntity createHostVersion(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>("h3", r4, $r34) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r37 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r37 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, $r37)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, $r37) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r38 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r38 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>("2.2.0-2086", $r38)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: void assertRepoVersionState(java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>("2.2.0-2086", $r38) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r39 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r39 = r0.<org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r8 = virtualinvoke $r39.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r8 = virtualinvoke $r39.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z3 == 0
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r40 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : return r4
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r40 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r10 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r40
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : r10 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r40 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r41 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r41 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r42 = virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r42 = virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $z4 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $z4 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z4 == 0
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r43 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r43 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r44 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : $r44 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r44)
org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r44) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.HostVersionOutOfSyncListenerTest.createClusterAndHosts : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
