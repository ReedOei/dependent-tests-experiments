org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r6 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r4 = virtualinvoke r2.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String)>($r6)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r4 = virtualinvoke r2.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r7 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r7 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r7)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r16 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r16 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r17 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r17 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r19 = (org.apache.ambari.server.state.repository.AvailableService) $r18
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : r19 = (org.apache.ambari.server.state.repository.AvailableService) $r18 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r20 = virtualinvoke r19.<org.apache.ambari.server.state.repository.AvailableService: java.util.List getVersions()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r20 = virtualinvoke r19.<org.apache.ambari.server.state.repository.AvailableService: java.util.List getVersions()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r21 = new org.apache.ambari.server.state.repository.AvailableVersion
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r21 = new org.apache.ambari.server.state.repository.AvailableVersion >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r22 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r22 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r23 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r23 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String versionId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r24 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r24 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r25 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set buildComponents(org.apache.ambari.server.state.ServiceInfo,java.util.Set)>(r4, r3)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r25 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set buildComponents(org.apache.ambari.server.state.ServiceInfo,java.util.Set)>(r4, r3) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r21.<org.apache.ambari.server.state.repository.AvailableVersion: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Set)>($r22, $r23, $r24, $r25)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r21.<org.apache.ambari.server.state.repository.AvailableVersion: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Set)>($r22, $r23, $r24, $r25) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : return
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r14 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r14 = virtualinvoke r4.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r14 = virtualinvoke r4.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r9 = new org.apache.ambari.server.state.repository.AvailableService
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r9 = new org.apache.ambari.server.state.repository.AvailableService >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r10 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r9.<org.apache.ambari.server.state.repository.AvailableService: void <init>(java.lang.String,java.lang.String)>($r10, $r14)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : specialinvoke $r9.<org.apache.ambari.server.state.repository.AvailableService: void <init>(java.lang.String,java.lang.String)>($r10, $r14) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r12 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r12 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r11 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r11 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r9)
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r9) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r16 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r14 = r1.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : goto [?= $r9 = new org.apache.ambari.server.state.repository.AvailableService]
org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : goto [?= $r9 = new org.apache.ambari.server.state.repository.AvailableService] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.addToAvailable : $r9 = new org.apache.ambari.server.state.repository.AvailableService
