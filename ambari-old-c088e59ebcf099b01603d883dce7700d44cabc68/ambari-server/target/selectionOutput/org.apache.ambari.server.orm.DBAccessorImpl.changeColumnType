org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_temp")
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_temp") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r10 = <org.apache.ambari.server.orm.DBAccessorImpl$2: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType>
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r10 = <org.apache.ambari.server.orm.DBAccessorImpl$2: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r9 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r9 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r11 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $i0 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>()
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $i0 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $i1 = $r10[$i0]
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $i1 = $r10[$i0] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : lookupswitch($i1) {     case 1:
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r12 = class "Ljava/lang/String;"
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r13 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r13 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r13.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer)>(r2, r4, null)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r13.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer)>(r2, r4, null) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, $r13)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, $r13) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : return
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r12 = class "Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>(r3)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z0 == 0
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "[Ljava/lang/Character;")
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "[C")
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "[C") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z1 == 0
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r13 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class)>(r5, r4)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class)>(r5, r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, $r14)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, $r14) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r16 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r16 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[0] = $r16
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[0] = $r16 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r17 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r5)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r17 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[1] = $r17
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[1] = $r17 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r18 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r18 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[2] = $r18
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r15[2] = $r18 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UPDATE %s SET %s = %s", $r15)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UPDATE %s SET %s = %s", $r15) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: int executeUpdate(java.lang.String)>($r19)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: int executeUpdate(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void dropColumn(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void dropColumn(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r20 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r20 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r20.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class)>(r2, r4)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : specialinvoke $r20.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class)>(r2, r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r5, $r20)
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void renameColumn(java.lang.String,java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r5, $r20) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : return
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "[Ljava/lang/Character;") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z2 != 0
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "[C")
org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.changeColumnType : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
