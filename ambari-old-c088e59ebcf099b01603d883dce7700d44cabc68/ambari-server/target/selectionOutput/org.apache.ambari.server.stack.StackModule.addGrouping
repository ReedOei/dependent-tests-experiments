org.apache.ambari.server.stack.StackModule.addGrouping : $r4 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if $r4 != null
org.apache.ambari.server.stack.StackModule.addGrouping : if $r4 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r11 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackModule.addGrouping : if $r4 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.stack.StackModule.addGrouping : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : i2 = $i0 - 1
org.apache.ambari.server.stack.StackModule.addGrouping : i2 = $i0 - 1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if i2 < 0
org.apache.ambari.server.stack.StackModule.addGrouping : if i2 < 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2)
org.apache.ambari.server.stack.StackModule.addGrouping : if i2 < 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : return 0
org.apache.ambari.server.stack.StackModule.addGrouping : $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r6 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r5
org.apache.ambari.server.stack.StackModule.addGrouping : $r6 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r5 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : r3 = $r6.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : r3 = $r6.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r7 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.addGrouping : $r7 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.stack.StackModule.addGrouping : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0
org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $i1 = i2 + 1
org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : i2 = i2 + -1
org.apache.ambari.server.stack.StackModule.addGrouping : i2 = i2 + -1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.addGrouping : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if i2 < 0
org.apache.ambari.server.stack.StackModule.addGrouping : $i1 = i2 + 1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i1, r2)
org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i1, r2) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r10 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.addGrouping : $r10 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r8 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.addGrouping : $r8 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Added group/after: {}/{}", $r9, $r8)
org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Added group/after: {}/{}", $r9, $r8) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : return 1
org.apache.ambari.server.stack.StackModule.addGrouping : $r11 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.addGrouping : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ")
org.apache.ambari.server.stack.StackModule.addGrouping : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r14 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : $r14 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.stack.StackModule.addGrouping : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to specify which group it should come after")
org.apache.ambari.server.stack.StackModule.addGrouping : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to specify which group it should come after") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.addGrouping : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : throw $r11
