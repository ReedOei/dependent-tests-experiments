org.apache.ambari.server.update.HostUpdateHelper.main : $z1 = $r10 instanceof org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : if $z1 == 0
org.apache.ambari.server.update.HostUpdateHelper.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r13 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.update.HostUpdateHelper.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r11 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.update.HostUpdateHelper.main : $r11 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, host names update failed", $r10)
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, host names update failed", $r10) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r12 = new java.lang.Exception
org.apache.ambari.server.update.HostUpdateHelper.main : $r12 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, host names update failed", $r10)
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, host names update failed", $r10) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : throw $r12
org.apache.ambari.server.update.HostUpdateHelper.main : $r13 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during host names update, failed", $r10)
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during host names update, failed", $r10) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r14 = (org.apache.ambari.server.AmbariException) $r10
org.apache.ambari.server.update.HostUpdateHelper.main : $r14 = (org.apache.ambari.server.AmbariException) $r10 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : throw $r14
org.apache.ambari.server.update.HostUpdateHelper.main : $r3 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Host names update started.")
org.apache.ambari.server.update.HostUpdateHelper.main : $r3 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Host names update started.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : r15 = r0[0]
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Host names update started.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : r15 = r0[0] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : if r15 == null
org.apache.ambari.server.update.HostUpdateHelper.main : r15 = r0[0] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : if r15 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $z0 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.update.HostUpdateHelper.main : if r15 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r4 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.update.HostUpdateHelper.main : if r15 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r4 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Path to file with host names changes is empty or null.")
org.apache.ambari.server.update.HostUpdateHelper.main : $r4 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Path to file with host names changes is empty or null.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : throw $r4
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Path to file with host names changes is empty or null.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : throw $r4 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $z0 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : if $z0 == 0
org.apache.ambari.server.update.HostUpdateHelper.main : $z0 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r4 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.update.HostUpdateHelper.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r5 = newarray (com.google.inject.Module)[2]
org.apache.ambari.server.update.HostUpdateHelper.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r5 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r6 = new org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule
org.apache.ambari.server.update.HostUpdateHelper.main : $r5 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r6 = new org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r6.<org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule: void <init>()>()
org.apache.ambari.server.update.HostUpdateHelper.main : $r6 = new org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r6.<org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r5[0] = $r6
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r6.<org.apache.ambari.server.update.HostUpdateHelper$UpdateHelperModule: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r5[0] = $r6 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r7 = new org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule
org.apache.ambari.server.update.HostUpdateHelper.main : $r5[0] = $r6 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r7 = new org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r7.<org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule: void <init>()>()
org.apache.ambari.server.update.HostUpdateHelper.main : $r7 = new org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r7.<org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r5[1] = $r7
org.apache.ambari.server.update.HostUpdateHelper.main : specialinvoke $r7.<org.apache.ambari.server.update.HostUpdateHelper$CheckHelperAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r5[1] = $r7 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5)
org.apache.ambari.server.update.HostUpdateHelper.main : $r5[1] = $r7 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/update/HostUpdateHelper;")
org.apache.ambari.server.update.HostUpdateHelper.main : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/update/HostUpdateHelper;") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : r2 = (org.apache.ambari.server.update.HostUpdateHelper) $r8
org.apache.ambari.server.update.HostUpdateHelper.main : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/update/HostUpdateHelper;") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : r2 = (org.apache.ambari.server.update.HostUpdateHelper) $r8 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void setHostChangesFile(java.lang.String)>(r15)
org.apache.ambari.server.update.HostUpdateHelper.main : r2 = (org.apache.ambari.server.update.HostUpdateHelper) $r8 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void setHostChangesFile(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void initHostChangesFileMap()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void setHostChangesFile(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void initHostChangesFileMap()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void startPersistenceService()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void initHostChangesFileMap()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void validateHostChanges()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void validateHostChanges()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void checkForSecurity()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void validateHostChanges()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void checkForSecurity()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInDB()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void checkForSecurity()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInDB()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForTopologyRequests()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInDB()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForTopologyRequests()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForAlertsInDB()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForTopologyRequests()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForAlertsInDB()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInConfigurations()>()
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsForAlertsInDB()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInConfigurations()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r9 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void updateHostsInConfigurations()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : $r9 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Host names update completed successfully.")
org.apache.ambari.server.update.HostUpdateHelper.main : $r9 = <org.apache.ambari.server.update.HostUpdateHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Host names update completed successfully.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void stopPersistenceService()>()
org.apache.ambari.server.update.HostUpdateHelper.main : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Host names update completed successfully.") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : goto [?= return]
org.apache.ambari.server.update.HostUpdateHelper.main : virtualinvoke r2.<org.apache.ambari.server.update.HostUpdateHelper: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : $r10 := @caughtexception
org.apache.ambari.server.update.HostUpdateHelper.main : goto [?= return] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.main : return
