org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r5 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r6 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r6 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r32 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r32 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r29 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r34 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r34 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r26 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11[0] = r1
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11[0] = r1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11[1] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r11[1] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Comparing %ss of table %s.", $r11)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Comparing %ss of table %s.", $r11) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r14 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r14 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r15 = staticinvoke <org.apache.ambari.server.orm.db.DDLTests: java.util.List compareSets(java.lang.String,java.util.Set,java.util.Set)>($r12, $r13, $r14)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r15 = staticinvoke <org.apache.ambari.server.orm.db.DDLTests: java.util.List compareSets(java.lang.String,java.util.Set,java.util.Set)>($r12, $r13, $r14) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r10.<java.util.List: boolean addAll(java.util.Collection)>($r15)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r10.<java.util.List: boolean addAll(java.util.Collection)>($r15) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r16 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r16 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r36 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r16, $r17)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r36 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r16, $r17) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r37 = interfaceinvoke r36.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r37 = interfaceinvoke r36.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r7 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : return $r10
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r7 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r8 = (org.apache.ambari.server.orm.db.Constraint) $r18
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r8 = (org.apache.ambari.server.orm.db.Constraint) $r18 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r19 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r19 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r9 = (org.apache.ambari.server.orm.db.Constraint) $r19
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r9 = (org.apache.ambari.server.orm.db.Constraint) $r19 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r20 = virtualinvoke r8.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r20 = virtualinvoke r8.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r23 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r23 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[0] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[0] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[1] = r8
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[1] = r8 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[2] = r9
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22[2] = r9 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Ignoring constraint name mismatch for table {}: {} vs. {}", $r22)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Ignoring constraint name mismatch for table {}: {} vs. {}", $r22) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[0] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[0] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[1] = r8
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[1] = r8 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[2] = r9
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24[2] = r9 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Constraint name mismatch for table %s: %s vs. %s", $r24)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Constraint name mismatch for table %s: %s vs. %s", $r24) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r26 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r35 = (org.apache.ambari.server.orm.db.Constraint) $r26
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r35 = (org.apache.ambari.server.orm.db.Constraint) $r26 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r27 = virtualinvoke r35.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r27 = virtualinvoke r35.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r35)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r35) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r29 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r33 = (org.apache.ambari.server.orm.db.Constraint) $r29
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r33 = (org.apache.ambari.server.orm.db.Constraint) $r29 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r30 = virtualinvoke r33.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r30 = virtualinvoke r33.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r33)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r33) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
