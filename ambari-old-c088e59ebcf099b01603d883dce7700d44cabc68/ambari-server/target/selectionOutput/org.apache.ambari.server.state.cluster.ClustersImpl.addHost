org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r6 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r26 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r7 = new org.apache.ambari.server.orm.entities.HostEntity
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r7 = new org.apache.ambari.server.orm.entities.HostEntity >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void setHostName(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void setHostName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r8 = new java.util.ArrayList
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void setClusterEntities(java.util.Collection)>($r8)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.HostEntity: void setClusterEntities(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r9 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r9 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : r3 = interfaceinvoke $r9.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>($r7)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : r3 = interfaceinvoke $r9.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>($r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r10 = new org.apache.ambari.server.state.AgentVersion
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r10 = new org.apache.ambari.server.state.AgentVersion >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r10.<org.apache.ambari.server.state.AgentVersion: void <init>(java.lang.String)>("")
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r10.<org.apache.ambari.server.state.AgentVersion: void <init>(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setAgentVersion(org.apache.ambari.server.state.AgentVersion)>($r10)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setAgentVersion(org.apache.ambari.server.state.AgentVersion)>($r10) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r11 = new java.util.concurrent.CopyOnWriteArrayList
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r11 = new java.util.concurrent.CopyOnWriteArrayList >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setDisksInfo(java.util.List)>($r11)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setDisksInfo(java.util.List)>($r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r12 = new org.apache.ambari.server.state.HostHealthStatus
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r12 = new org.apache.ambari.server.state.HostHealthStatus >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r13 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus UNKNOWN>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r13 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus UNKNOWN> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r12.<org.apache.ambari.server.state.HostHealthStatus: void <init>(org.apache.ambari.server.state.HostHealthStatus$HealthStatus,java.lang.String)>($r13, "")
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r12.<org.apache.ambari.server.state.HostHealthStatus: void <init>(org.apache.ambari.server.state.HostHealthStatus$HealthStatus,java.lang.String)>($r13, "") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHealthStatus(org.apache.ambari.server.state.HostHealthStatus)>($r12)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHealthStatus(org.apache.ambari.server.state.HostHealthStatus)>($r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r14 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r14 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r14.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r14.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r14)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r15 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState INIT>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r15 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState INIT> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r15)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r16 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r16 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r19 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r19 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r18 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r18 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r18.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r18.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r20 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r18)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r20 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r19.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r20)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r19.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r22 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r22 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $z1 = interfaceinvoke $r22.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $z1 = interfaceinvoke $r22.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z1 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r25 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r23 = new org.apache.ambari.server.events.HostRegisteredEvent
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r23 = new org.apache.ambari.server.events.HostRegisteredEvent >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r23.<org.apache.ambari.server.events.HostRegisteredEvent: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r23.<org.apache.ambari.server.events.HostRegisteredEvent: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r24 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.events.publishers.AmbariEventPublisher eventPublisher>
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r24 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.events.publishers.AmbariEventPublisher eventPublisher> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r24.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void publish(org.apache.ambari.server.events.AmbariEvent)>($r23)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : virtualinvoke $r24.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: void publish(org.apache.ambari.server.events.AmbariEvent)>($r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : return
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r25 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding a host to Clusters, hostname={}", r1)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding a host to Clusters, hostname={}", r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r23 = new org.apache.ambari.server.events.HostRegisteredEvent
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r26 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r27 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r27 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r27[0] = r1
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r27[0] = r1 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r28 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Duplicate entry for Host {0}", $r27)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : $r28 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Duplicate entry for Host {0}", $r27) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r28)
org.apache.ambari.server.state.cluster.ClustersImpl.addHost : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.addHost : throw $r26
