org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r10 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r10.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, "c1", "HDP-0.1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r10.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, "c1", "HDP-0.1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r11 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r11 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>($r10)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r12 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r12 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : r3 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : r3 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r13 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r13 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r13.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r13.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-0.1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r13)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "NAMENODE", $r14)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "NAMENODE", $r14) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", $r15)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", $r15) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r16 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", $r16)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", $r16) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r17 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r17 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r18 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r21 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r21 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r22.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r18)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r22.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r23 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r23 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r24 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r24 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r24.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r24.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r27 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r27 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r28.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r24)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r28.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r29 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r29 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r29.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r29.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r30 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r30 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r30.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r30.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", null, "NAMENODE", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", null, "NAMENODE", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : if z0 == 0
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r42 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r31 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address", "localhost:70071")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address", "localhost:70071") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r34 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r34 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r34.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "version2", $r31, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r34.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "version2", $r31, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r35 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r35 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r35.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r36, "c1", null, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r35.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r36, "c1", null, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r37 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r37 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : virtualinvoke $r35.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r37)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : virtualinvoke $r35.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r37) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r38 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r38 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r39 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r39 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r40 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r40 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r40.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r40.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r38.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r39, $r40)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r38.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r39, $r40) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : return
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r42.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r42.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r46 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r46 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r46.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "version1", $r42, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r46.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "version1", $r42, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r47 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r47 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $l1 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $l1 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r47.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r48, "c1", null, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r47.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r48, "c1", null, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r49 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r46)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r49 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : virtualinvoke $r47.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r49)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : virtualinvoke $r47.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r50 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r50 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r51 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r51 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r52 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : $r52 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r52.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : specialinvoke $r52.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r50.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r51, $r52)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : interfaceinvoke $r50.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r51, $r52) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : goto [?= return]
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createHDFSServiceConfigs : return
