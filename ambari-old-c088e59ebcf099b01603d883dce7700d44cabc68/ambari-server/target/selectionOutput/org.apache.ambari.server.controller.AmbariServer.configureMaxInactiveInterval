org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : $r1 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : i0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: int getHttpSessionInactiveTimeout()>()
org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : i0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: int getHttpSessionInactiveTimeout()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : $r2 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.SessionManager sessionManager>
org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : $r2 = r0.<org.apache.ambari.server.controller.AmbariServer: org.eclipse.jetty.server.SessionManager sessionManager> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : interfaceinvoke $r2.<org.eclipse.jetty.server.SessionManager: void setMaxInactiveInterval(int)>(i0)
org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : interfaceinvoke $r2.<org.eclipse.jetty.server.SessionManager: void setMaxInactiveInterval(int)>(i0) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureMaxInactiveInterval : return
