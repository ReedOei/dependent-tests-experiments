org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: void publishAddingHostsToCluster(java.util.Set,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: void publishAddingHostsToCluster(java.util.Set,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: void refresh()>()
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: void refresh()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : return
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : r4 = (java.lang.String) $r6
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : r4 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: void mapHostToCluster(java.lang.String,java.lang.String)>(r4, r2)
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: void mapHostToCluster(java.lang.String,java.lang.String)>(r4, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.mapAndPublishHostsToCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
