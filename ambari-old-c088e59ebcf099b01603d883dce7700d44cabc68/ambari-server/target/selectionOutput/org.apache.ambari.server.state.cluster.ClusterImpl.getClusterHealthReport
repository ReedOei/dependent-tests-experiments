org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i2 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i3 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i4 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i4 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i5 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i5 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i6 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i6 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i7 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i7 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i8 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i8 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i9 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i9 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i10 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i10 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i11 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i11 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r2 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r2 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r3 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r3 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r8 = new org.apache.ambari.server.state.ClusterHealthReport
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r8 = new org.apache.ambari.server.state.ClusterHealthReport >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : specialinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : specialinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setAlertStatusHosts(int)>(i10)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setAlertStatusHosts(int)>(i10) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHealthyStateHosts(int)>(i4)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHealthyStateHosts(int)>(i4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnknownStatusHosts(int)>(i9)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnknownStatusHosts(int)>(i9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnhealthyStatusHosts(int)>(i8)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnhealthyStatusHosts(int)>(i8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnhealthyStateHosts(int)>(i5)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setUnhealthyStateHosts(int)>(i5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setStaleConfigsHosts(int)>(i2)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setStaleConfigsHosts(int)>(i2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setMaintenanceStateHosts(int)>(i3)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setMaintenanceStateHosts(int)>(i3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setInitStateHosts(int)>(i6)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setInitStateHosts(int)>(i6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHeartbeatLostStateHosts(int)>(i11)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHeartbeatLostStateHosts(int)>(i11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHealthyStatusHosts(int)>(i7)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : virtualinvoke $r8.<org.apache.ambari.server.state.ClusterHealthReport: void setHealthyStatusHosts(int)>(i7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : return $r8
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r20 = (org.apache.ambari.server.state.Host) $r9
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r20 = (org.apache.ambari.server.state.Host) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r5 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r5 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r10 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostState>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r10 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostState> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r11 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r11 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i0 = virtualinvoke $r11.<org.apache.ambari.server.state.HostState: int ordinal()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i0 = virtualinvoke $r11.<org.apache.ambari.server.state.HostState: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i1 = $r10[$i0]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i1 = $r10[$i0] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1:
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i4 = i4 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i5 = i5 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i6 = i6 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i11 = i11 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r22 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getStatus()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r22 = interfaceinvoke r20.<org.apache.ambari.server.state.Host: java.lang.String getStatus()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r23 = staticinvoke <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus valueOf(java.lang.String)>($r22)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r23 = staticinvoke <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus valueOf(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i12 = virtualinvoke $r23.<org.apache.ambari.server.state.HostHealthStatus$HealthStatus: int ordinal()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i12 = virtualinvoke $r23.<org.apache.ambari.server.state.HostHealthStatus$HealthStatus: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i13 = $r21[$i12]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $i13 = $r21[$i12] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1:
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i7 = i7 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i8 = i8 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i9 = i9 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i10 = i10 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : tableswitch($i13) {     case 1: >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z4 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z4 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r24 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap serviceComponentHostsByHost>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r24 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap serviceComponentHostsByHost> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z5 = interfaceinvoke $r24.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r5)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z5 = interfaceinvoke $r24.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z5 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r12 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap serviceComponentHostsByHost>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i2 = i2 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i3 = i3 + 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r12 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap serviceComponentHostsByHost> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r13 = interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r13 = interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r14 = (java.util.List) $r13
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r14 = (java.util.List) $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r6 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r6 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r15
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r15 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r19 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z6 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z6 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = $z6]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = $z6] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = $z6
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = $z6 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r16 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if z4 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z7 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z7 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z4 = $z7]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z4 = $z7] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z4 = $z7
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z4 = $z7 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r16 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.MaintenanceState getEffectiveState(org.apache.ambari.server.state.ServiceComponentHost)>(r7)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.MaintenanceState getEffectiveState(org.apache.ambari.server.state.ServiceComponentHost)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r18 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r18 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $r17 == $r18
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $r17 == $r18 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z7 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $r17 == $r18 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z7 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z7 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z4 = $z7
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r19 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z2 = virtualinvoke $r19.<org.apache.ambari.server.state.ConfigHelper: boolean isStaleConfigs(org.apache.ambari.server.state.ServiceComponentHost,java.util.Map)>(r7, r2)
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z2 = virtualinvoke $r19.<org.apache.ambari.server.state.ConfigHelper: boolean isStaleConfigs(org.apache.ambari.server.state.ServiceComponentHost,java.util.Map)>(r7, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z2 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z6 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z6 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $z6 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = $z6
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i10 = i10 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i9 = i9 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i8 = i8 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i7 = i7 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= z3 = 0] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : z3 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i11 = i11 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i6 = i6 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i5 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : i4 = i4 + 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>]
org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : goto [?= $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getClusterHealthReport : $r21 = <org.apache.ambari.server.state.cluster.ClusterImpl$3: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
