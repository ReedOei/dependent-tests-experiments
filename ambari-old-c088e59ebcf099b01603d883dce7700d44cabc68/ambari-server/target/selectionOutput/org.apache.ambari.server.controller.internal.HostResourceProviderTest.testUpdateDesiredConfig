org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r2 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r16 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r16 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r16
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r17 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r17 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r4 = (org.apache.ambari.server.state.Clusters) $r17
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r4 = (org.apache.ambari.server.state.Clusters) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r5 = (org.apache.ambari.server.state.Cluster) $r18
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r5 = (org.apache.ambari.server.state.Cluster) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r7 = (org.apache.ambari.server.controller.HostResponse) $r20
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r7 = (org.apache.ambari.server.controller.HostResponse) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r8 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r21
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r8 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r8)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r22 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r22 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r22.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r22.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r23 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r23 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r27 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r27 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r29 = interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r29 = interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r32 = (java.util.Set) $r31
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r32 = (java.util.Set) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r33 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r32)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r33 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r36 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r36 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r38 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r38 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r44 = interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r44 = interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r46 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r46 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48 = newarray (org.apache.ambari.server.state.Host)[1]
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48 = newarray (org.apache.ambari.server.state.Host)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48[0] = r11
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48[0] = r11 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r49 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r48)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r49 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r52 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r52 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r54 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r54 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r57 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r57 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r61 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r61 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r61, "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r61, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r64 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r64 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r64)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r65 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r67 = interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r67 = interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r69 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r69 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r71 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r71 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r72 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r71)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r72 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r74 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r74 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r76 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r76 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r76.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r76.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r79 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r79 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r83 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r83 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r87 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHealthReport()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r87 = virtualinvoke r7.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHealthReport()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r91 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r91 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r92 = (org.apache.ambari.server.controller.AmbariManagementController) $r91
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r92 = (org.apache.ambari.server.controller.AmbariManagementController) $r91 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r93 = interfaceinvoke r8.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r92)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r93 = interfaceinvoke r8.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r92) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r94 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r93)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r94 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r93) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r95 = interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r95 = interfaceinvoke $r94.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r97 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r97 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r97.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r97.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r98 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r98 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r98.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r98.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/cluster_name", "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/cluster_name", "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/host_name", "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/host_name", "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "type")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "type") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r101, "global")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r101, "global") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r103 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "tag")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r103 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "tag") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r103, "version1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r103, "version1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r105 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "a")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r105 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "a") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r105, "b")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r105, "b") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r107 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "x")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r107 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "x") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, "y")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, "y") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>($r98, null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>($r98, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r109 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r109 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r15 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>($r109, r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r15 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>($r109, r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r15.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r13, r14)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r15.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r13, r14) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : return
