org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/HostRequest;") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : r2 = (org.apache.ambari.server.topology.HostRequest) $r3
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : r2 = (org.apache.ambari.server.topology.HostRequest) $r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $l1 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: long getId()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $l1 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: long getId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r9 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r9 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("MyHostGroup")
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("MyHostGroup") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r13 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r13 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $l2 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: long getStageId()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $l2 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: long getStageId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r21 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.util.List getTopologyTasks()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r21 = virtualinvoke r2.<org.apache.ambari.server.topology.HostRequest: java.util.List getTopologyTasks()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r25[0] = r2
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : $r25[0] = r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25)
org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createHostRequest : return r2
