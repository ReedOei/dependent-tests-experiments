org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i1 = $r11.<org.apache.ambari.server.state.stack.upgrade.Batch: int percent>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i1 = $r11.<org.apache.ambari.server.state.stack.upgrade.Batch: int percent> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d0 = (double) $i1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d0 = (double) $i1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d1 = $d0 / 100.0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d1 = $d0 / 100.0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r12 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r12 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i2 = virtualinvoke $r12.<java.util.LinkedHashSet: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i2 = virtualinvoke $r12.<java.util.LinkedHashSet: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d2 = (double) $i2
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d2 = (double) $i2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d3 = $d1 * $d2
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d3 = $d1 * $d2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i0 = virtualinvoke $r13.<java.lang.Double: int intValue()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i0 = virtualinvoke $r13.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i6 = 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i6 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r14 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r14 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r6 = virtualinvoke $r14.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r6 = virtualinvoke $r14.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : return
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r7 = (java.lang.String) $r15
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r7 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r16 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r16 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r16.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r16.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r17 = $r16.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r17 = $r16.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : virtualinvoke $r17.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : virtualinvoke $r17.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i3 = i6
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i3 = i6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i6 = i6 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : i6 = i6 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i3 >= i0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i3 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i3 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r18 = interfaceinvoke $r55.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r18 = interfaceinvoke $r55.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r56 = (java.util.List) $r18
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r56 = (java.util.List) $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r56
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r56 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r54 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null != r56 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r57 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r57 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r57
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r57 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i5 = interfaceinvoke r57.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r57 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r30 = class "Lorg/apache/ambari/server/state/stack/upgrade/RestartTask;"
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r60 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r62 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r62 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r62
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r62 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i4 = interfaceinvoke r62.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if null == r62 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i4 = interfaceinvoke r62.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r19 = interfaceinvoke r62.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i4 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r19 = interfaceinvoke r62.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r20 = (org.apache.ambari.server.state.stack.upgrade.Task) $r19
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r20 = (org.apache.ambari.server.state.stack.upgrade.Task) $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r10 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r21 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r21, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r21, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r22 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r22 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, $r22)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, $r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r21, r10)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r21, r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r23 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r21)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r23 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r24 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r24 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r25 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r24, $r16, r62, r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r25 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r24, $r16, r62, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r23.<java.util.List: boolean addAll(java.util.Collection)>($r25)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r23.<java.util.List: boolean addAll(java.util.Collection)>($r25) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r26 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r26 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r27 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r26)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r27 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r29 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Completing", $r27, $r28)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r29 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Completing", $r27, $r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, $r29)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r21, $r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r30 = class "Lorg/apache/ambari/server/state/stack/upgrade/RestartTask;" >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z2 = virtualinvoke $r30.<java.lang.Class: boolean isInstance(java.lang.Object)>(r60)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $z2 = virtualinvoke $r30.<java.lang.Class: boolean isInstance(java.lang.Object)>(r60) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r31 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r62 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r31 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r31.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r31.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r31, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r31, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r32 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r31)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r32 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r31) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r33 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r33 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r34 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r34 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36[0] = r60
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r36[0] = r60 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r33.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r3, $r34, $r35, r5, $r36)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r33.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r3, $r34, $r35, r5, $r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r33)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$802(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r31, 1)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$802(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r31, 1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r37 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r37 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, $r37)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, $r37) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r38 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r38 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r31, $r38)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r31, $r38) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r39 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r39 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r40 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r39)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r40 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r39) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r41 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r41 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r42 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Restarting", $r40, $r41)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r42 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Restarting", $r40, $r41) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, $r42)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r31, $r42) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r31)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r62 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 0, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $i5 = interfaceinvoke r57.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r43 = interfaceinvoke r57.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : if $i5 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r43 = interfaceinvoke r57.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r44 = (org.apache.ambari.server.state.stack.upgrade.Task) $r43
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r44 = (org.apache.ambari.server.state.stack.upgrade.Task) $r43 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r58 = virtualinvoke $r44.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r58 = virtualinvoke $r44.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r45 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r45 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r45.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r45.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$1)>(null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r45, z0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$202(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,boolean)>($r45, z0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r46 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r46 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r47 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r46)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r47 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r3, $r46) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Preparing", $r47, $r48)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r49 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set)>("Preparing", $r47, $r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, $r49)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$302(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, $r49) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r50 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r45)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r50 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List access$400(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>($r45) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r51 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r51 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r52 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r51, $r16, r57, r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r52 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: java.util.List getTaskList(java.lang.String,java.lang.String,org.apache.ambari.server.stack.HostsType,java.util.List,java.util.Map)>(r3, $r51, $r16, r57, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r50.<java.util.List: boolean addAll(java.util.Collection)>($r52)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r50.<java.util.List: boolean addAll(java.util.Collection)>($r52) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, r3)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$502(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r53 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r53 = r4.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, $r53)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$602(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,java.lang.String)>($r45, $r53) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r45, r58)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$702(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy,org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type)>($r45, r58) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r45)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke r56.<java.util.List: boolean add(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r60 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Task resolveTask(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r54 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r54.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : specialinvoke $r54.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r56 = $r54
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r56 = $r54 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r54)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r54) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : r57 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List resolveTasks(org.apache.ambari.server.state.UpgradeContext,boolean,org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent)>(r1, 1, r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r55 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $r18 = interfaceinvoke $r55.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : goto [?= $r18 = interfaceinvoke $r55.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.add : $r18 = interfaceinvoke $r55.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
