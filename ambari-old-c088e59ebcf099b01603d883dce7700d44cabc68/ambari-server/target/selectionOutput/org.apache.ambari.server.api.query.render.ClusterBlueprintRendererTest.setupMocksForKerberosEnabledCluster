org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/AmbariContext;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r1 = (org.apache.ambari.server.topology.AmbariContext) $r10
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r1 = (org.apache.ambari.server.topology.AmbariContext) $r10 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r11 = virtualinvoke r1.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r11 = virtualinvoke r1.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterName")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r13 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterName") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/AmbariContext;")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/AmbariContext;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r15 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r15 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r17 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r17 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r20 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r20 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r22 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r22 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25[0] = $r26
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25[0] = $r26 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r25)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r25) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r27 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r27 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_1")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_1") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>("host1")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>("host1") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r28 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r28 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r28)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r28) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r29 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r29 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_2")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>("host_group_2") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r30 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r30 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r30.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r30.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31 = newarray (java.lang.String)[2]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31[0] = "host2"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31[0] = "host2" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31[1] = "host3"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31[1] = "host3" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r32 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r31)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r32 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r31) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void addHosts(java.util.Collection)>($r32)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void addHosts(java.util.Collection)>($r32) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r33 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r33 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r33)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke $r29.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r33) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_1", $r27)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_1", $r27) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_2", $r29)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_2", $r29) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r36 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r36 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z0 = interfaceinvoke $r36.<org.apache.ambari.server.topology.ClusterTopology: boolean isNameNodeHAEnabled()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z0 = interfaceinvoke $r36.<org.apache.ambari.server.topology.ClusterTopology: boolean isNameNodeHAEnabled()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r38 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r37)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r38 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r40 = interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r40 = interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r42 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r42 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r43 = interfaceinvoke $r42.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r43 = interfaceinvoke $r42.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r45 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration clusterConfig>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r45 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration clusterConfig> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r46 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r45)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r46 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r48 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r48 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r49 = interfaceinvoke $r48.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r49 = interfaceinvoke $r48.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r51 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r51 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r52 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r52 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r54 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r54 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r55 = interfaceinvoke $r54.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r55 = interfaceinvoke $r54.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r57 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r57 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r59 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r59 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r60 = interfaceinvoke $r59.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r60 = interfaceinvoke $r59.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r62 = new java.lang.Long
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r62 = new java.lang.Long >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r62.<java.lang.Long: void <init>(long)>(1L)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r62.<java.lang.Long: void <init>(long)>(1L) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r63 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r62)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r63 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r65 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r65 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r66 = interfaceinvoke $r65.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r66 = interfaceinvoke $r65.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r70 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r70 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z1 = interfaceinvoke $r70.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $z1 = interfaceinvoke $r70.<org.apache.ambari.server.topology.ClusterTopology: boolean isClusterKerberosEnabled()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r71 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r71 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r73 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r73 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r74 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r73)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r74 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ResourceProvider;")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r76 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/ResourceProvider;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r5 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r76
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r5 = (org.apache.ambari.server.controller.spi.ResourceProvider) $r76 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r78 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r78 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r77 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r77 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r79 = interfaceinvoke $r78.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r77)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r79 = interfaceinvoke $r78.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r77) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r81 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r83 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Resource;")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r83 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Resource;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r6 = (org.apache.ambari.server.controller.spi.Resource) $r83
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r6 = (org.apache.ambari.server.controller.spi.Resource) $r83 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Request;")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Request;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r85 = (org.apache.ambari.server.controller.spi.Request) $r84
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r85 = (org.apache.ambari.server.controller.spi.Request) $r84 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r86 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Predicate;")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r86 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/spi/Predicate;") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r87 = (org.apache.ambari.server.controller.spi.Predicate) $r86
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r87 = (org.apache.ambari.server.controller.spi.Predicate) $r86 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r88 = interfaceinvoke r5.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r85, $r87)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r88 = interfaceinvoke r5.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r85, $r87) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r89 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r90 = interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r92 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r92 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r92.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r92.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r93 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r93 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data", $r93)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data", $r93) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r95 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r95 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r95.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : specialinvoke $r95.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("testProperty", "testValue")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("testProperty", "testValue") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data/properties", $r95)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data/properties", $r95) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r102 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r102 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r102[0] = class "Lorg/apache/ambari/server/topology/AmbariContext;"
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r102[0] = class "Lorg/apache/ambari/server/topology/AmbariContext;" >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r102)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r102) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103 = newarray (java.lang.Object)[5]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[0] = r1
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[0] = r1 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r104 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r104 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[1] = $r104
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[1] = $r104 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r105 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r105 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[2] = $r105
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[2] = $r105 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[3] = r6
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[3] = r6 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[4] = r5
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r103[4] = r5 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r103)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r103) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : return
