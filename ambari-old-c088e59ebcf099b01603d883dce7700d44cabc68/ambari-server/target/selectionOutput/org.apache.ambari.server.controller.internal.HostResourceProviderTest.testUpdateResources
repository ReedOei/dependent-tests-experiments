org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer: void viewInstanceDAOReturningNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r17 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r17 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r17
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r18 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r18 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r18
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Clusters) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r19
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/HostResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.controller.HostResponse) $r21
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.controller.HostResponse) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r22
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r9)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r23 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r23 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r23.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r23.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r24 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r24 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r28 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r28 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r33 = (java.util.Set) $r32
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r33 = (java.util.Set) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r34 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r34 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r36 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r36 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r45 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r47 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r49 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r53 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r53 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r55 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r56 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r56 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r58, "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r58, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r62 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r64 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r63)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r64 = interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r66 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r66 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r69 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r68)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r69 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r71 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r71 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r72 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r73 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r73 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r73.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r73.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r74 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r74 = interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r76 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r76 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r77 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r76)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r77 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r78 = interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r80 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r80 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r84 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHealthReport()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r84 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHealthReport()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r88 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r88 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r89 = (org.apache.ambari.server.controller.AmbariManagementController) $r88
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r89 = (org.apache.ambari.server.controller.AmbariManagementController) $r88 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r90 = interfaceinvoke r9.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r89)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r90 = interfaceinvoke r9.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r89) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r92 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r92 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r94 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r94 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r94.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r94.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r13 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r13 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r95 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : $r95 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r95.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : specialinvoke $r95.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/rack_info", "rack info")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Hosts/rack_info", "rack info") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>($r95, null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>($r95, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r13.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r15, r16)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : interfaceinvoke r13.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r15, r16) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateResources : return
