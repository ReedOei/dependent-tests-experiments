org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r13 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lowercase host name value in resource failed with error:")
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lowercase host name value in resource failed with error:") >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r16)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r4 = new org.apache.ambari.server.api.query.QueryImpl >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.ClusterControllerHelper: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : specialinvoke $r4.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r2, r19, $r5) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : return $r4
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r17 = (java.lang.String) $r7
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r17 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if r17 == null
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : r17 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if r17 == null >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : if r17 == null >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r9 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r9 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r9 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : goto [?= r19 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r1, r2)]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.createResource : $r11 := @caughtexception
