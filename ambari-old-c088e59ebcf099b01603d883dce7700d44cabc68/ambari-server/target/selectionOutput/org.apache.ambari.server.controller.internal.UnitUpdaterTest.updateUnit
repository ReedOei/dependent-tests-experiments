org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r6 = new org.apache.ambari.server.controller.internal.UnitUpdater >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : specialinvoke $r6.<org.apache.ambari.server.controller.internal.UnitUpdater: void <init>(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : specialinvoke $r6.<org.apache.ambari.server.controller.internal.UnitUpdater: void <init>(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r7 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r7 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r10 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r10 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r13 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r13 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r16 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r16 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r17 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r17 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r19 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r19 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r20 = virtualinvoke $r19.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationPropertiesWithMetadata(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r20 = virtualinvoke $r19.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationPropertiesWithMetadata(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r22 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: java.util.Map stackConfigWithMetadata>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r22 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: java.util.Map stackConfigWithMetadata> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : virtualinvoke r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: void replayAll()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : virtualinvoke r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r25 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r25 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r26 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology>
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r26 = r0.<org.apache.ambari.server.controller.internal.UnitUpdaterTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology> >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r27 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.UnitUpdater: java.lang.String updateForClusterCreate(java.lang.String,java.lang.String,java.util.Map,org.apache.ambari.server.topology.ClusterTopology)>(r3, r4, $r25, $r26)
org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : $r27 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.UnitUpdater: java.lang.String updateForClusterCreate(java.lang.String,java.lang.String,java.util.Map,org.apache.ambari.server.topology.ClusterTopology)>(r3, r4, $r25, $r26) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdaterTest.updateUnit : return $r27
