org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r7 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(1L, null)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r7 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(1L, null) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r8 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(2L, r2)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r8 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(2L, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r8)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r9 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(3L, null)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r9 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(3L, null) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2")
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r14 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(4L, $r13)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r14 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(4L, $r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r15 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(5L, null)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r15 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(5L, null) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3")
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r20 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(6L, $r19)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r20 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.HostRequest createHostRequest(long,java.lang.String)>(6L, $r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r21 = r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.orm.dao.TopologyRequestDAO topologyRequestDAO>
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r21 = r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.orm.dao.TopologyRequestDAO topologyRequestDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l0 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l0 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.TopologyRequestDAO: java.util.List findByClusterId(long)>($l0)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.TopologyRequestDAO: java.util.List findByClusterId(long)>($l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r24 = (org.apache.ambari.server.orm.entities.TopologyRequestEntity) $r23
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r24 = (org.apache.ambari.server.orm.entities.TopologyRequestEntity) $r23 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : r4 = virtualinvoke $r24.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.lang.Long getId()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : r4 = virtualinvoke $r24.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/LogicalRequest;")
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/topology/LogicalRequest;") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r25
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r25 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r26 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getHostRequests()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r26 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getHostRequests()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r30 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.String getRequestContext()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r30 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.String getRequestContext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Description")
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Description") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r39 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r39 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r39[0] = r5
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r39[0] = r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r39)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r39) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersTest: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l2 = virtualinvoke r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : $l2 = virtualinvoke r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r40.<org.apache.ambari.server.topology.PersistedState: void persistLogicalRequest(org.apache.ambari.server.topology.LogicalRequest,long)>(r5, $l2)
org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : interfaceinvoke $r40.<org.apache.ambari.server.topology.PersistedState: void persistLogicalRequest(org.apache.ambari.server.topology.LogicalRequest,long)>(r5, $l2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersTest.createTopologyLogicalRequest : return
