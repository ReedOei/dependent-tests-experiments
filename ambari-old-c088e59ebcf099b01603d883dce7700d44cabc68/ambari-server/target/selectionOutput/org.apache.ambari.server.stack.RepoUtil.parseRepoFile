org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r29 = null >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = null
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = null >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r29)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r29) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r34 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r30)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r34 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r32.<org.apache.ambari.server.stack.RepositoryFolderAndXml: void <init>(com.google.common.base.Optional,com.google.common.base.Optional)>($r33, $r34)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r32.<org.apache.ambari.server.stack.RepositoryFolderAndXml: void <init>(com.google.common.base.Optional,com.google.common.base.Optional)>($r33, $r34) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : return $r32
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r7 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r7 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r29 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r29 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r10 = new java.io.File
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r10 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r14 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r14 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r17 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r17 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repoinfo.xml")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repoinfo.xml") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r21 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;", $r10)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r22 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r23 = new org.apache.ambari.server.state.stack.RepositoryXml >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = $r23
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = $r23 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void setValid(boolean)>(0)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void setValid(boolean)>(0) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse repo file at location: ")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse repo file at location: ") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r26 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r26 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void addError(java.lang.String)>(r3)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke $r23.<org.apache.ambari.server.state.stack.RepositoryXml: void addError(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r28 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r28 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : interfaceinvoke $r28.<org.slf4j.Logger: void warn(java.lang.String)>(r3)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : interfaceinvoke $r28.<org.slf4j.Logger: void warn(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r21 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;", $r10) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = (org.apache.ambari.server.state.stack.RepositoryXml) $r21
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r21 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;", $r10) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r22 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = (org.apache.ambari.server.state.stack.RepositoryXml) $r21 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : goto [?= $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml]
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r30 = (org.apache.ambari.server.state.stack.RepositoryXml) $r21 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r22 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : goto [?= $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml] >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
