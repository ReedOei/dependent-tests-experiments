org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r9 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r9 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r9 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r9 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r9.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r9.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r9.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r9.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperControllerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[0] = $r9
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r10 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r10 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r10 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r10 = new org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r10.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r10.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r10.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r10.<org.apache.ambari.server.checks.DatabaseConsistencyChecker$CheckHelperAuditModule: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[1] = $r10
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[1] = $r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[1] = $r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r8[1] = $r10 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r38 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r8)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r38 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r38 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r38 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r11 = interfaceinvoke r38.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyChecker;")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r11 = interfaceinvoke r38.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyChecker;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r11 = interfaceinvoke r38.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyChecker;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r11 = interfaceinvoke r38.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyChecker;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r39 = (org.apache.ambari.server.checks.DatabaseConsistencyChecker) $r11
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r39 = (org.apache.ambari.server.checks.DatabaseConsistencyChecker) $r11 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r39 = (org.apache.ambari.server.checks.DatabaseConsistencyChecker) $r11 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r39 = (org.apache.ambari.server.checks.DatabaseConsistencyChecker) $r11 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void startPersistenceService()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void startPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult runAllDBChecks(boolean)>(0)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult runAllDBChecks(boolean)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult runAllDBChecks(boolean)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult runAllDBChecks(boolean)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void stopPersistenceService()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke r39.<org.apache.ambari.server.checks.DatabaseConsistencyChecker: void stopPersistenceService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r12 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r12 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z0 = virtualinvoke $r12.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isErrorOrWarning()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z0 = virtualinvoke $r12.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isErrorOrWarning()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r40 = "ambari-server-check-database.log"
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r13 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r13 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>("No errors and warnings were found.")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>("No errors and warnings were found.") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : return
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r40 = "ambari-server-check-database.log" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z1 = $r14 instanceof org.slf4j.impl.Log4jLoggerAdapter
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z1 = $r14 instanceof org.slf4j.impl.Log4jLoggerAdapter >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyCheckHelper;")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r42 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r42 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z9 = virtualinvoke $r42.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isError()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z9 = virtualinvoke $r42.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isError()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z9 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z9 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r19 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z9 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r16 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r16 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r15[0] = r41
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r15[0] = r41 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check found warnings. See \"%s\" for more details.", $r15)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check found warnings. See \"%s\" for more details.", $r15) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>($r17)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : return
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r19 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r18[0] = r41
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r18[0] = r41 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check failed. Run \"ambari-server start --skip-database-check\" to skip. You may try --auto-fix-database flag to attempt to fix issues automatically. If you use this \"--skip-database-check\" option, do not make any changes to your cluster topology or perform a cluster upgrade until you correct the database consistency issues. See \"%s\" for more details on the consistency issues.", $r18)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check failed. Run \"ambari-server start --skip-database-check\" to skip. You may try --auto-fix-database flag to attempt to fix issues automatically. If you use this \"--skip-database-check\" option, do not make any changes to your cluster topology or perform a cluster upgrade until you correct the database consistency issues. See \"%s\" for more details on the consistency issues.", $r18) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>($r20)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyCheckHelper;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r2 = virtualinvoke r1.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r2 = virtualinvoke r1.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z2 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z2 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z2 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z3 = r3 instanceof org.apache.log4j.FileAppender
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z3 = r3 instanceof org.apache.log4j.FileAppender >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z3 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r21 = (org.apache.log4j.FileAppender) r3
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= $z2 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= $z2 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z2 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r21 = (org.apache.log4j.FileAppender) r3 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r40 = virtualinvoke $r21.<org.apache.log4j.FileAppender: java.lang.String getFile()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r40 = virtualinvoke $r21.<org.apache.log4j.FileAppender: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r41 = virtualinvoke r40.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r28 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r28 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z5 = virtualinvoke $r28.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isErrorOrWarning()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z5 = virtualinvoke $r28.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isErrorOrWarning()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z5 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r44 = "ambari-server-check-database.log"
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r29 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r29 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r29.<java.io.PrintStream: void print(java.lang.String)>("No errors and warnings were found.")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r29.<java.io.PrintStream: void print(java.lang.String)>("No errors and warnings were found.") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r27
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r44 = "ambari-server-check-database.log" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r30 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r30 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z6 = $r30 instanceof org.slf4j.impl.Log4jLoggerAdapter
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z6 = $r30 instanceof org.slf4j.impl.Log4jLoggerAdapter >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z6 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r5 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyCheckHelper;")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r46 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r46 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult getLastCheckResult()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z10 = virtualinvoke $r46.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isError()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z10 = virtualinvoke $r46.<org.apache.ambari.server.checks.DatabaseConsistencyCheckResult: boolean isError()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z10 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r35 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r32 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r32 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r31 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r31[0] = r45
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r31[0] = r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check found warnings. See \"%s\" for more details.", $r31)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check found warnings. See \"%s\" for more details.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r32.<java.io.PrintStream: void print(java.lang.String)>($r33)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r32.<java.io.PrintStream: void print(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= throw $r27]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= throw $r27] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r27
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r35 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r34 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r34 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r34[0] = r45
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r34[0] = r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check failed. Run \"ambari-server start --skip-database-check\" to skip. You may try --auto-fix-database flag to attempt to fix issues automatically. If you use this \"--skip-database-check\" option, do not make any changes to your cluster topology or perform a cluster upgrade until you correct the database consistency issues. See \"%s\" for more details on the consistency issues.", $r34)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("DB configs consistency check failed. Run \"ambari-server start --skip-database-check\" to skip. You may try --auto-fix-database flag to attempt to fix issues automatically. If you use this \"--skip-database-check\" option, do not make any changes to your cluster topology or perform a cluster upgrade until you correct the database consistency issues. See \"%s\" for more details on the consistency issues.", $r34) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r35.<java.io.PrintStream: void print(java.lang.String)>($r36)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : virtualinvoke $r35.<java.io.PrintStream: void print(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= throw $r27]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r5 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/DatabaseConsistencyCheckHelper;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r6 = virtualinvoke r5.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r6 = virtualinvoke r5.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z7 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z7 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z7 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r7 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r7 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z8 = r7 instanceof org.apache.log4j.FileAppender
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z8 = r7 instanceof org.apache.log4j.FileAppender >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z8 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z8 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r37 = (org.apache.log4j.FileAppender) r7
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z8 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= $z7 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>()]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= $z7 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z7 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r37 = (org.apache.log4j.FileAppender) r7 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r44 = virtualinvoke $r37.<org.apache.log4j.FileAppender: java.lang.String getFile()>()
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r44 = virtualinvoke $r37.<org.apache.log4j.FileAppender: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")]
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : goto [?= r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : r45 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/")
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z4 = $r22 instanceof org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z4 == 0
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $z4 = $r22 instanceof org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r24 = new java.lang.Exception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r24 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r24 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r24
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : specialinvoke $r24.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error, database check failed", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r24 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", $r22)
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r26 = (org.apache.ambari.server.AmbariException) $r22
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during database check:", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r26 = (org.apache.ambari.server.AmbariException) $r22 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r26
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r26 = (org.apache.ambari.server.AmbariException) $r22 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : throw $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyChecker.main : $r27 := @caughtexception
