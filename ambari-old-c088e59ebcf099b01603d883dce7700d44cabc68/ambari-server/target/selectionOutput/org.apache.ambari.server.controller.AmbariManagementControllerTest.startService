org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r16 = new org.apache.ambari.server.controller.ServiceRequest >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r17 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repositoryVersion02>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r17 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repositoryVersion02> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r20 = virtualinvoke $r19.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r16.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String)>(r1, r2, $r18, $r20, null)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r16.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.String)>(r1, r2, $r18, $r20, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r21 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r21 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r21.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r21.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r22 = new java.util.HashMap
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r22 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r22.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r22.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r24 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r24 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r7 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.RequestStatusResponse updateServices(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set,java.util.Map,boolean,boolean,org.apache.ambari.server.controller.MaintenanceStateHelper)>($r24, $r21, $r22, z0, z1, r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r7 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.RequestStatusResponse updateServices(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set,java.util.Map,boolean,boolean,org.apache.ambari.server.controller.MaintenanceStateHelper)>($r24, $r21, $r22, z0, z1, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r26 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r26 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r25 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r25 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r27 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r27 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r29 = interfaceinvoke $r28.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r29)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r29) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r30 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDB>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : return -1L
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r30 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDB> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l0 = virtualinvoke r7.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l0 = virtualinvoke r7.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r8 = interfaceinvoke $r30.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequestTasks(long)>($l0)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r8 = interfaceinvoke $r30.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequestTasks(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r31 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l1 = virtualinvoke r7.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l1 = virtualinvoke r7.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : return $l1
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r31 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r10 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r31
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r10 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r31 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r32 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r32 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r11 = virtualinvoke $r32.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r11 = virtualinvoke $r32.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z4 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("CHECK")
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z4 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("CHECK") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r33 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r33 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r12 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r12 = interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r13 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r13 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r34 = interfaceinvoke r12.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r34 = interfaceinvoke r12.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r35 = interfaceinvoke $r34.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r35 = interfaceinvoke $r34.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r14 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r14 = interfaceinvoke $r35.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r36 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r36 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r15 = (org.apache.ambari.server.state.Service) $r36
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r15 = (org.apache.ambari.server.state.Service) $r36 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r37 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r37 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z6 = interfaceinvoke $r37.<java.util.Map: boolean containsKey(java.lang.Object)>(r11)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z6 = interfaceinvoke $r37.<java.util.Map: boolean containsKey(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r38 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r11)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r38 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z7 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z7 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r39 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r11)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r39 = interfaceinvoke r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r41 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r41 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r40.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r41)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r40.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r41) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
