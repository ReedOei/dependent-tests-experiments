org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z3 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r8 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z3 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r16 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r18 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r18 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17[0] = $r18
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17[0] = $r18 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to add hosts to a non-existent cluster: \'%s\'", $r17)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to add hosts to a non-existent cluster: \'%s\'", $r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : throw $r16
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r8 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r8 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r9 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r9 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r9 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r10 = interfaceinvoke r26.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r10 = interfaceinvoke r26.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : return z3
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r7 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r11
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r7 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r11 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r12 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r12 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22[0] = r1
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r23 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r23 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22[1] = $r23
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22[1] = $r23 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("An error occurred while registering host \'%s\' with config group \'%s\' ", $r22)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("An error occurred while registering host \'%s\' with config group \'%s\' ", $r22) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r20)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r20) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : throw $r21
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z3 = 1
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z3 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z3 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r14 = interfaceinvoke r27.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 = interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r14 = interfaceinvoke r27.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z2 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r14 = interfaceinvoke r27.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z2 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 != 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z2 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r27)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r27) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r27) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 := @caughtexception
