org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : i0 = 0
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : i0 = 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r21 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r21 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z0 == 0
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r4 = new java.util.HashSet
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r5 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r5 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r25 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r25 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z1 == 0
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r6 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : return $r4
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r6 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r26 = (java.util.Map$Entry) $r6
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r26 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r7 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r7 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r8 = (java.util.SortedSet) $r7
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r8 = (java.util.SortedSet) $r7 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r2 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.util.Set replaceRanges(java.util.SortedSet)>($r8)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r2 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.util.Set replaceRanges(java.util.SortedSet)>($r8) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r10 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r10 = interfaceinvoke r26.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r13 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",")
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r13 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r14 = virtualinvoke $r13.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(r2)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r14 = virtualinvoke $r13.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(r2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : goto [?= $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : goto [?= $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r17 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r17 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r23 = (java.util.SortedSet) $r17
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r23 = (java.util.SortedSet) $r17 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if r23 != null
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if r23 != null >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r19 = new java.util.TreeSet
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : if r23 != null >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke r23.<java.util.SortedSet: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke r23.<java.util.SortedSet: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : i0 = i0 + 1
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r19 = new java.util.TreeSet >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r19.<java.util.TreeSet: void <init>()>()
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : specialinvoke $r19.<java.util.TreeSet: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r23 = $r19
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : r23 = $r19 >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r19)
org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r19) >>>>>>>> org.apache.ambari.server.utils.StageUtils.replaceMappedRanges : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
