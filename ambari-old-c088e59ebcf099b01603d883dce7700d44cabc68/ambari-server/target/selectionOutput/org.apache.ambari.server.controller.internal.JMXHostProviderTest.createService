org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : r14 = null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : if r3 == null
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : r14 = virtualinvoke r3.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r6 = new org.apache.ambari.server.controller.ServiceRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r6 = new org.apache.ambari.server.controller.ServiceRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r7 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_repositoryVersion>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r7 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity m_repositoryVersion> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : specialinvoke $r6.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.String)>(r1, r2, $r8, r14)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : specialinvoke $r6.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.Long,java.lang.String)>(r1, r2, $r8, r14) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r9 = new java.util.HashSet
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r11 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r11 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r10 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r10 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r12 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r12 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r13 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r12
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r13 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: void createServices(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,java.util.Set)>($r11, $r13, $r9)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: void createServices(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,java.util.Set)>($r11, $r13, $r9) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : return
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : r14 = virtualinvoke r3.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createService : $r6 = new org.apache.ambari.server.controller.ServiceRequest
