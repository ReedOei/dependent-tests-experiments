org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/HostVersionEntity;") >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : r4 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r6
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : r4 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r6 >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r7 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r7 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r11 = (org.apache.ambari.server.state.RepositoryVersionState) $r10
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r11 = (org.apache.ambari.server.state.RepositoryVersionState) $r10 >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r11)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r11) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/RepositoryVersionEntity;")
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/RepositoryVersionEntity;") >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : r5 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r13
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : r5 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r13 >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r14 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>()
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r14 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r17 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r17 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r20 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>()
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r20 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("somehost")
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("somehost") >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23 = newarray (java.lang.Object)[2]
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23[0] = r4
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23[0] = r4 >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23[1] = r5
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : $r23[1] = r5 >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r23)
org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r23) >>>>>>>> org.apache.ambari.server.StateRecoveryManagerTest.getHostVersionMock : return r4
