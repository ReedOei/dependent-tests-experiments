org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;")
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljavax/persistence/EntityManager;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;")
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessor;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.ldap.LdapModuleFunctionalTest$1.configure : return
