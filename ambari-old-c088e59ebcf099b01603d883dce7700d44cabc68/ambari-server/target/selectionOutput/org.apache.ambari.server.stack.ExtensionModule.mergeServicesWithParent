org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r8 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r9 = virtualinvoke $r8.<org.apache.ambari.server.state.ExtensionInfo: java.util.Collection getServices()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r9 = virtualinvoke $r8.<org.apache.ambari.server.state.ExtensionInfo: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r9.<java.util.Collection: void clear()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r9.<java.util.Collection: void clear()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r11 = <org.apache.ambari.server.stack.ExtensionModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r11 = <org.apache.ambari.server.stack.ExtensionModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***Merging extension services with parent: ")
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***Merging extension services with parent: ") >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r13 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.lang.String getId()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r13 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>($r15)
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r17 = r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r17 = r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r16 = r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r16 = r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r5 = virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection mergeChildModules(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>(r2, r3, r4, $r17, $r16)
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r5 = virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection mergeChildModules(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>(r2, r3, r4, $r17, $r16) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z0 == 0
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : return
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r7 = (org.apache.ambari.server.stack.ServiceModule) $r18
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : r7 = (org.apache.ambari.server.stack.ServiceModule) $r18 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $z1 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: boolean isDeleted()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $z1 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: boolean isDeleted()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z1 != 0
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r19 = r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules>
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r19 = r0.<org.apache.ambari.server.stack.ExtensionModule: java.util.Map serviceModules> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r20 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: java.lang.String getId()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r20 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r7)
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r7) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r22 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo>
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r22 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.ExtensionInfo: java.util.Collection getServices()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.ExtensionInfo: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r24 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>()
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : $r24 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r23.<java.util.Collection: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : interfaceinvoke $r23.<java.util.Collection: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.mergeServicesWithParent : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
