org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r3 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.state.scheduler.Batch batch> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r4 = virtualinvoke $r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r4 = virtualinvoke $r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $z0 == 0
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : return null
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : r2 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r5
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : r2 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r5 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $r6 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $b2 = l0 cmp $l1
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $b2 = l0 cmp $l1 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $b2 != 0
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $b2 != 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : return r2
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : if $b2 != 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.getBatchRequest : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
