org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r4 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("Clusters/version") >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : r2 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("-")
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : r2 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r6 = new org.apache.ambari.server.controller.internal.Stack
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r6 = new org.apache.ambari.server.controller.internal.Stack >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r9 = r2[0]
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r9 = r2[0] >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r8 = r2[1]
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r8 = r2[1] >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r7 = <org.apache.ambari.server.controller.internal.ExportBlueprintRequest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r7 = <org.apache.ambari.server.controller.internal.ExportBlueprintRequest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : specialinvoke $r6.<org.apache.ambari.server.controller.internal.Stack: void <init>(java.lang.String,java.lang.String,org.apache.ambari.server.controller.AmbariManagementController)>($r9, $r8, $r7)
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r7 = <org.apache.ambari.server.controller.internal.ExportBlueprintRequest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r10 := @caughtexception
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r11 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r13 = r2[0]
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r13 = r2[0] >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12[0] = $r13
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r14 = r2[1]
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r14 = r2[1] >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12[1] = $r14
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r12[1] = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The specified stack doesn\'t exist: name=%s version=%s", $r12)
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The specified stack doesn\'t exist: name=%s version=%s", $r12) >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : specialinvoke $r11.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : specialinvoke $r11.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : throw $r11
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : specialinvoke $r6.<org.apache.ambari.server.controller.internal.Stack: void <init>(java.lang.String,java.lang.String,org.apache.ambari.server.controller.AmbariManagementController)>($r9, $r8, $r7) >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : return $r6
org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : specialinvoke $r6.<org.apache.ambari.server.controller.internal.Stack: void <init>(java.lang.String,java.lang.String,org.apache.ambari.server.controller.AmbariManagementController)>($r9, $r8, $r7) >>>>>>>> org.apache.ambari.server.controller.internal.ExportBlueprintRequest.parseStack : $r10 := @caughtexception
