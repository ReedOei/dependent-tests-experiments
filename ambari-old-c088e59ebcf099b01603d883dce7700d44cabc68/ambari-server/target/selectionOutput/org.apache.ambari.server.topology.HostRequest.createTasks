org.apache.ambari.server.topology.HostRequest.createTasks : $r13 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r11 = new org.apache.ambari.server.topology.tasks.PersistHostResourcesTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r11 = new org.apache.ambari.server.topology.tasks.PersistHostResourcesTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r12 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r12 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r11.<org.apache.ambari.server.topology.tasks.PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r12, r0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r11.<org.apache.ambari.server.topology.tasks.PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r12, r0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r14 = new org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r14 = new org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r15 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r15 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r14.<org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r15, r0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r14.<org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r15, r0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r17 = new org.apache.ambari.server.topology.tasks.InstallHostTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r17 = new org.apache.ambari.server.topology.tasks.InstallHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r18 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r18 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r17.<org.apache.ambari.server.topology.tasks.InstallHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r18, r0, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r17.<org.apache.ambari.server.topology.tasks.InstallHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r18, r0, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r21 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r21 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r20 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasks : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r20)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r20) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r25 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r25 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : z1 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.topology.HostRequest.createTasks : z1 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r26 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r26 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r28 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r28 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : z2 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.topology.HostRequest.createTasks : z2 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r68 = null
org.apache.ambari.server.topology.HostRequest.createTasks : r68 = null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r62 = new org.apache.ambari.server.topology.tasks.StartHostTask
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r30 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r30 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.topology.HostRequest.createTasks : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping Start task creation since provision action = ")
org.apache.ambari.server.topology.HostRequest.createTasks : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping Start task creation since provision action = ") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r32 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r32 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33)
org.apache.ambari.server.topology.HostRequest.createTasks : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>($r35)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r2 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r2 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r36 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r36 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r3 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r36)
org.apache.ambari.server.topology.HostRequest.createTasks : r3 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r36) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r37 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r37 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r4 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r37)
org.apache.ambari.server.topology.HostRequest.createTasks : r4 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r37) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r38 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_AND_START>
org.apache.ambari.server.topology.HostRequest.createTasks : $r38 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_AND_START> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r5 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r38)
org.apache.ambari.server.topology.HostRequest.createTasks : r5 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r38) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r39 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r39 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r6 = interfaceinvoke $r39.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r6 = interfaceinvoke $r39.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r40 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : return
org.apache.ambari.server.topology.HostRequest.createTasks : $r40 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r7 = (java.lang.String) $r40
org.apache.ambari.server.topology.HostRequest.createTasks : r7 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r7 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if r7 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER")
org.apache.ambari.server.topology.HostRequest.createTasks : if r7 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r41 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r41 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r41.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping component {} when creating request\n", r7)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r41.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping component {} when creating request\n", r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z6 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r41 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r42 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r42 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $r42 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if $r42 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if $r42 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r43 = new java.lang.StringBuilder
org.apache.ambari.server.topology.HostRequest.createTasks : $r43 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PENDING HOST ASSIGNMENT : HOSTGROUP=")
org.apache.ambari.server.topology.HostRequest.createTasks : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PENDING HOST ASSIGNMENT : HOSTGROUP=") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r45 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r45 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)
org.apache.ambari.server.topology.HostRequest.createTasks : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r8 = $r69
org.apache.ambari.server.topology.HostRequest.createTasks : r8 = $r69 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r47 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r47 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r9 = interfaceinvoke $r47.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r9 = interfaceinvoke $r47.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r10 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r10 = interfaceinvoke r2.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r3.<java.util.Collection: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of INSTALL task for {} on {}.", r7, r8)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of INSTALL task for {} on {}.", r7, r8) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z14 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7)]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z14 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7)] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z14 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : $z14 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r78 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r78 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r78.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of START task for {} on {}.", r7, r8)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r78.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of START task for {} on {}.", r7, r8) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= (branch)]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r78 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r58 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l1 = r0.<org.apache.ambari.server.topology.HostRequest: long id>
org.apache.ambari.server.topology.HostRequest.createTasks : $l1 = r0.<org.apache.ambari.server.topology.HostRequest: long id> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r49 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START>
org.apache.ambari.server.topology.HostRequest.createTasks : $r49 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r79 = virtualinvoke r9.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, r7, r8, $r49, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : r79 = virtualinvoke r9.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, r7, r8, $r49, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r50 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r50 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l2 = virtualinvoke r79.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l2 = virtualinvoke r79.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.topology.HostRequest.createTasks : $r51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, r79)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, r79) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r53 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r53 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r54 = interfaceinvoke $r53.<java.util.Map: java.lang.Object get(java.lang.Object)>(r68)
org.apache.ambari.server.topology.HostRequest.createTasks : $r54 = interfaceinvoke $r53.<java.util.Map: java.lang.Object get(java.lang.Object)>(r68) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r55 = (java.util.Map) $r54
org.apache.ambari.server.topology.HostRequest.createTasks : $r55 = (java.util.Map) $r54 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l3 = virtualinvoke r79.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l3 = virtualinvoke r79.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.topology.HostRequest.createTasks : $r56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r56)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r56) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : $r58 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z8 = virtualinvoke $r58.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z8 = virtualinvoke $r58.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r78 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z9 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l5 = r0.<org.apache.ambari.server.topology.HostRequest: long id>
org.apache.ambari.server.topology.HostRequest.createTasks : $l5 = r0.<org.apache.ambari.server.topology.HostRequest: long id> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r70 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL>
org.apache.ambari.server.topology.HostRequest.createTasks : $r70 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r71 = virtualinvoke r9.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l4, $l5, r7, r8, $r70, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : r71 = virtualinvoke r9.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l4, $l5, r7, r8, $r70, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r72 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r72 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l6 = virtualinvoke r71.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l6 = virtualinvoke r71.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.topology.HostRequest.createTasks : $r73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, r71)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r72.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, r71) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r74 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r74 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r75 = interfaceinvoke $r74.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.topology.HostRequest.createTasks : $r75 = interfaceinvoke $r74.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r76 = (java.util.Map) $r75
org.apache.ambari.server.topology.HostRequest.createTasks : $r76 = (java.util.Map) $r75 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l7 = virtualinvoke r71.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l7 = virtualinvoke r71.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.topology.HostRequest.createTasks : $r77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r77)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r77) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z14 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : $z9 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z10 = interfaceinvoke r5.<java.util.Collection: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z10 = interfaceinvoke r5.<java.util.Collection: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r61 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r7)
org.apache.ambari.server.topology.HostRequest.createTasks : if r10 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r61 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z11 = virtualinvoke $r61.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z11 = virtualinvoke $r61.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r8 = $r69]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r8 = $r69] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r8 = $r69
org.apache.ambari.server.topology.HostRequest.createTasks : $r62 = new org.apache.ambari.server.topology.tasks.StartHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r63 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r63 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r62.<org.apache.ambari.server.topology.tasks.StartHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r63, r0, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r62.<org.apache.ambari.server.topology.tasks.StartHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r63, r0, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r68 = $r62
org.apache.ambari.server.topology.HostRequest.createTasks : r68 = $r62 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r64 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r64 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r62)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r66 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r66 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r65.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r65.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r65)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r65) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r2 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r2 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r2 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()
