org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : r10 = null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : if r4 == null
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : r10 = virtualinvoke r4.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r7 = new org.apache.ambari.server.controller.ServiceComponentRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r7 = new org.apache.ambari.server.controller.ServiceComponentRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : specialinvoke $r7.<org.apache.ambari.server.controller.ServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r10)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : specialinvoke $r7.<org.apache.ambari.server.controller.ServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r10) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r8 = new java.util.HashSet
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r9 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r9 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : staticinvoke <org.apache.ambari.server.controller.internal.ComponentResourceProviderTest: void createComponents(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set)>($r9, $r8)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : staticinvoke <org.apache.ambari.server.controller.internal.ComponentResourceProviderTest: void createComponents(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set)>($r9, $r8) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : return
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : r10 = virtualinvoke r4.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createServiceComponent : $r7 = new org.apache.ambari.server.controller.ServiceComponentRequest
