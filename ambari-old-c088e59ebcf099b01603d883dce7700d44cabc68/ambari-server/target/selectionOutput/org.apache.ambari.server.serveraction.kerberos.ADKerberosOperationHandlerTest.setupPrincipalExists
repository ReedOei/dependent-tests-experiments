org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/naming/directory/SearchResult;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : r2 = (javax.naming.directory.SearchResult) $r4
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : r2 = (javax.naming.directory.SearchResult) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r5 = virtualinvoke r2.<javax.naming.directory.SearchResult: java.lang.String getNameInNamespace()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r5 = virtualinvoke r2.<javax.naming.directory.SearchResult: java.lang.String getNameInNamespace()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("user/service dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("user/service dn") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/naming/NamingEnumeration;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Ljavax/naming/NamingEnumeration;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : r3 = (javax.naming.NamingEnumeration) $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : r3 = (javax.naming.NamingEnumeration) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke r3.<javax.naming.NamingEnumeration: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke r3.<javax.naming.NamingEnumeration: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z1 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z1 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r15 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r15 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r17 = interfaceinvoke r3.<javax.naming.NamingEnumeration: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r17 = interfaceinvoke r3.<javax.naming.NamingEnumeration: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z2 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $z2 = interfaceinvoke r3.<javax.naming.NamingEnumeration: boolean hasMore()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r26 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r26 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljavax/naming/Name;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljavax/naming/Name;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r28 = (javax.naming.Name) $r27
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r28 = (javax.naming.Name) $r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljavax/naming/directory/SearchControls;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljavax/naming/directory/SearchControls;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r31 = (javax.naming.directory.SearchControls) $r30
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r31 = (javax.naming.directory.SearchControls) $r30 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r32 = interfaceinvoke $r26.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r28, $r29, $r31)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r32 = interfaceinvoke $r26.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r28, $r29, $r31) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r34 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r34 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r36.<javax.naming.ldap.LdapContext: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r36.<javax.naming.ldap.LdapContext: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupPrincipalExists : return
