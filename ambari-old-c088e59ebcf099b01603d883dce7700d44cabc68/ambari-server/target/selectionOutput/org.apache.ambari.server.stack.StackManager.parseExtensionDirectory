org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return $r12
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return $r12
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r13 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter FILENAME_FILTER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r13 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r3 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r13)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r3 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r13) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i0 = lengthof r3
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i2 >= i0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i2 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r5 = r3[i2]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i2 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r14 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map stackMap>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r14 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map stackMap> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z1 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z1 = interfaceinvoke $r14.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r15 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return $r12
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r15 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find extension definitions under extensionRoot = ")
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find extension definitions under extensionRoot = ") >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r18 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r18 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : throw $r15
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r5 = r3[i2] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z2 = virtualinvoke r5.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z2 = virtualinvoke r5.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i2 = i2 + 1]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r21 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter FILENAME_FILTER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r21 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r6 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r21)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r6 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r21) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = lengthof r6
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = lengthof r6 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r7 = r6[i3]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = i2 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i2 >= i0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r7 = r6[i3] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z3 = virtualinvoke r7.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z3 = virtualinvoke r7.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i3 = i3 + 1]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r8 = virtualinvoke r5.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r8 = virtualinvoke r5.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r9 = virtualinvoke r7.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r9 = virtualinvoke r7.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r22 = new org.apache.ambari.server.stack.ExtensionModule
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r22 = new org.apache.ambari.server.stack.ExtensionModule >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r23 = new org.apache.ambari.server.stack.ExtensionDirectory
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r23 = new org.apache.ambari.server.stack.ExtensionDirectory >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r24 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r24 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r23.<org.apache.ambari.server.stack.ExtensionDirectory: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r23.<org.apache.ambari.server.stack.ExtensionDirectory: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r25 = r0.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.stack.StackContext stackContext>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r25 = r0.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.stack.StackContext stackContext> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r22.<org.apache.ambari.server.stack.ExtensionModule: void <init>(org.apache.ambari.server.stack.ExtensionDirectory,org.apache.ambari.server.stack.StackContext)>($r23, $r25)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r22.<org.apache.ambari.server.stack.ExtensionModule: void <init>(org.apache.ambari.server.stack.ExtensionDirectory,org.apache.ambari.server.stack.StackContext)>($r23, $r25) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r28 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r28 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r11 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r11 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r22)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r22) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r32 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map extensionMap>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r32 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map extensionMap> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r33 = virtualinvoke $r22.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r33 = virtualinvoke $r22.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r33)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r33) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i3 = i3 + 1] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i2 = i2 + 1] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = i2 + 1
