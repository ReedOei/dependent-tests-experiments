org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : i0 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z0 == 0
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : return i0
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r4 = (org.apache.ambari.server.controller.spi.Resource) $r12
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r4 = (org.apache.ambari.server.controller.spi.Resource) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r5 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r5 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z1 == 0
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r7 = (java.lang.String) $r14
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r7 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r8 = (java.util.Map) $r15
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r8 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r16 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("stack_version")
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r16 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("stack_version") >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r9 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r9 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z2 == 0
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r17 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r18 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("upgrade_types")
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r18 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("upgrade_types") >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r19 = (java.util.Set) $r18
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r19 = (java.util.Set) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r19)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r20 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : $r20 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r11 = (java.util.List) $r20
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : r11 = (java.util.List) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <java.util.Collections: void sort(java.util.List)>($r17)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <java.util.Collections: void sort(java.util.List)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <java.util.Collections: void sort(java.util.List)>(r11)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <java.util.Collections: void sort(java.util.List)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r11, $r17)
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r11, $r17) >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : i0 = i0 + 1
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest.checkUpgradeTypes : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
