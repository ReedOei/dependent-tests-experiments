org.apache.ambari.server.view.ViewRegistry.main : $i0 = lengthof r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : if $i0 < 2
org.apache.ambari.server.view.ViewRegistry.main : if $i0 < 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r5 = r0[0]
org.apache.ambari.server.view.ViewRegistry.main : if $i0 < 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : return
org.apache.ambari.server.view.ViewRegistry.main : $r5 = r0[0] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("extract")
org.apache.ambari.server.view.ViewRegistry.main : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("extract") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : r1 = r0[1]
org.apache.ambari.server.view.ViewRegistry.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.view.ViewRegistry.main : r1 = r0[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r6 = new org.apache.ambari.server.view.ViewRegistry$ViewModule
org.apache.ambari.server.view.ViewRegistry.main : $r6 = new org.apache.ambari.server.view.ViewRegistry$ViewModule >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : specialinvoke $r6.<org.apache.ambari.server.view.ViewRegistry$ViewModule: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.main : specialinvoke $r6.<org.apache.ambari.server.view.ViewRegistry$ViewModule: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $z1 = staticinvoke <org.apache.ambari.server.view.ViewRegistry: boolean extractViewArchive(java.lang.String,org.apache.ambari.server.view.ViewRegistry$ViewModule,boolean)>(r1, $r6, 1)
org.apache.ambari.server.view.ViewRegistry.main : specialinvoke $r6.<org.apache.ambari.server.view.ViewRegistry$ViewModule: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r7 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.main : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception extracting view archive ")
org.apache.ambari.server.view.ViewRegistry.main : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception extracting view archive ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewRegistry.main : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewRegistry.main : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.main : r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r12 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.main : $r12 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r4, $r7)
org.apache.ambari.server.view.ViewRegistry.main : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r4, $r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(2)
org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.view.ViewRegistry.main : $z1 = staticinvoke <org.apache.ambari.server.view.ViewRegistry: boolean extractViewArchive(java.lang.String,org.apache.ambari.server.view.ViewRegistry$ViewModule,boolean)>(r1, $r6, 1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.main : $z1 = staticinvoke <org.apache.ambari.server.view.ViewRegistry: boolean extractViewArchive(java.lang.String,org.apache.ambari.server.view.ViewRegistry$ViewModule,boolean)>(r1, $r6, 1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r7 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.ambari.server.view.ViewRegistry.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(1)]
org.apache.ambari.server.view.ViewRegistry.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r7 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(1)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(1)]
org.apache.ambari.server.view.ViewRegistry.main : staticinvoke <java.lang.System: void exit(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.main : $r7 := @caughtexception
