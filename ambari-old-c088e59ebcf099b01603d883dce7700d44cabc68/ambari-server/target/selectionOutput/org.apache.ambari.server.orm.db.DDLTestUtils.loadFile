org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r5 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.net.URL getDdlUrl(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r1 = staticinvoke <com.google.common.io.Resources: java.util.List readLines(java.net.URL,java.nio.charset.Charset)>($r5, $r6)
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r1 = staticinvoke <com.google.common.io.Resources: java.util.List readLines(java.net.URL,java.nio.charset.Charset)>($r5, $r6) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r7 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : return $r7
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r4 = (java.lang.String) $r8
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.loadFile : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
