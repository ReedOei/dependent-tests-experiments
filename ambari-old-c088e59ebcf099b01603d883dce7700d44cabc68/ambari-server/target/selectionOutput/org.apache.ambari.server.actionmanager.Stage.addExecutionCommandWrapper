org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r24 = staticinvoke <org.apache.ambari.server.actionmanager.Stage: java.lang.String getSafeHost(java.lang.String)>(r23) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r3 = virtualinvoke r2.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r3 = virtualinvoke r2.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r4 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r4 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r5 != null
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r5 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r21 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r5 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r6 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r6 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r8 = (java.util.List) $r7
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r8 = (java.util.List) $r7 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r9 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r24, r3)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r9 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r24, r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r10 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r10 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r11 != null
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r11 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r18 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r11 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r14 = (java.util.Map) $r13
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r14 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r15 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>(r24, r3)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r15 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>(r24, r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r15)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r15) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : return
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r18 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r17 = new java.util.LinkedHashMap
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r17 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r17.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r17.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r17)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r17) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r21 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r20 = new java.util.ArrayList
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r20 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r20.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r20.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r20)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r20) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r6 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
