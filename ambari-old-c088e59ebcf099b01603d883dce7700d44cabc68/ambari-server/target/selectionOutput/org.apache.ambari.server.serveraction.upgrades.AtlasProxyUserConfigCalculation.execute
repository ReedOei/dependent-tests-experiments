org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r2 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r2 = virtualinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("application-properties")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("application-properties") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null != r4
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null != r4 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r14 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null != r4 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("knox-env")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("knox-env") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r18 = "knox"
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r18 = "knox" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null == r5
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null == r5 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r10 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if null == r5 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("atlas.proxyusers", r18)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("atlas.proxyusers", r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r21[0] = "application-properties"
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r21[0] = "application-properties" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Successfully updated {0} config type.\n", $r21)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Successfully updated {0} config type.\n", $r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r25 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r25 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r25, "{}", r24, "")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r25, "{}", r24, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : return $r26
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r10 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>("knox_user")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>("knox_user") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("knox_user")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("knox_user") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r18 = (java.lang.String) $r12
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r18 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r14 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r13[0] = "application-properties"
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r13[0] = "application-properties" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Config type {0} not found, skipping updating property in same.", $r13)
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Config type {0} not found, skipping updating property in same.", $r13) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r14, "{}", $r15, "")
org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r14, "{}", $r15, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.AtlasProxyUserConfigCalculation.execute : return $r16
