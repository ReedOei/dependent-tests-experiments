org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r11 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackDirectory;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r4 = (org.apache.ambari.server.stack.StackDirectory) $r11
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r4 = (org.apache.ambari.server.stack.StackDirectory) $r11 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i0 = lengthof r3
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = 0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r6 = r3[i1]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z0 = virtualinvoke r2.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z0 = virtualinvoke r2.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z0 == 0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r29 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r12 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r12 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r13 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r12)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r13 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r13.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r13.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r15 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getStackDirName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r15 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getStackDirName()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r15)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r0)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r18 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.io.File getDirectory()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r18 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.io.File getDirectory()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r19 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r18)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r19 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r20 = new java.io.File
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r20 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r19.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r20)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r19.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackContext;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackContext;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r70 = (org.apache.ambari.server.stack.StackContext) $r22
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r70 = (org.apache.ambari.server.stack.StackContext) $r22 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r23 = new org.apache.ambari.server.stack.StackModule
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r23 = new org.apache.ambari.server.stack.StackModule >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r23.<org.apache.ambari.server.stack.StackModule: void <init>(org.apache.ambari.server.stack.StackDirectory,org.apache.ambari.server.stack.StackContext)>(r4, r70)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r23.<org.apache.ambari.server.stack.StackModule: void <init>(org.apache.ambari.server.stack.StackDirectory,org.apache.ambari.server.stack.StackContext)>(r4, r70) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24[0] = r0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24[0] = r0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24[1] = r1
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24[1] = r1 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r24)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r24) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r26 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r25, $r23)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r26 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r25, $r23) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r27 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r27 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r28 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r28 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : virtualinvoke $r23.<org.apache.ambari.server.stack.StackModule: void resolve(org.apache.ambari.server.stack.StackModule,java.util.Map,java.util.Map,java.util.Map)>(null, $r26, $r27, $r28)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : virtualinvoke $r23.<org.apache.ambari.server.stack.StackModule: void resolve(org.apache.ambari.server.stack.StackModule,java.util.Map,java.util.Map,java.util.Map)>(null, $r26, $r27, $r28) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : return $r23
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r29 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r69 = (org.apache.ambari.server.state.stack.RepositoryXml) $r29
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r69 = (org.apache.ambari.server.state.stack.RepositoryXml) $r29 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r30 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r30 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r31 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r30)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r31 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r31.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r69)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r31.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r69) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r33 = virtualinvoke r69.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r33 = virtualinvoke r69.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r34 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r33)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r34 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r35 = virtualinvoke r2.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r35 = virtualinvoke r2.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r34.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r35)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r34.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r12 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r6 = r3[i1] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r37 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackServiceDirectory;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r37 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackServiceDirectory;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r7 = (org.apache.ambari.server.stack.StackServiceDirectory) $r37
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r7 = (org.apache.ambari.server.stack.StackServiceDirectory) $r37 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/RepositoryXml;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r8 = (org.apache.ambari.server.state.stack.RepositoryXml) $r38
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r8 = (org.apache.ambari.server.state.stack.RepositoryXml) $r38 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r39 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r39 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r40 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r39)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r40 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r40.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r8)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r40.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r42 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r42 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r43 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r42)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r43 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r43.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r6)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r43.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r45 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/ServiceMetainfoXml;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r45 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/ServiceMetainfoXml;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r9 = (org.apache.ambari.server.state.stack.ServiceMetainfoXml) $r45
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r9 = (org.apache.ambari.server.state.stack.ServiceMetainfoXml) $r45 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z1 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z1 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r47 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r46)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r47 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r47.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r48)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r47.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r50 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceInfo;")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r50 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ServiceInfo;") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r10 = (org.apache.ambari.server.state.ServiceInfo) $r50
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r10 = (org.apache.ambari.server.state.ServiceInfo) $r50 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z2 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z2 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r52 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r51)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r52 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r52.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r53)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r52.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r55 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r55 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r56 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r55)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r56 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r57 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r57 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r58 = virtualinvoke $r57.<java.util.UUID: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r58 = virtualinvoke $r57.<java.util.UUID: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r56.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r58)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r56.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r60 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r60 = virtualinvoke r9.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r61 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r60)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r61 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r62 = newarray (org.apache.ambari.server.state.ServiceInfo)[1]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r62 = newarray (org.apache.ambari.server.state.ServiceInfo)[1] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r62[0] = r10
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r62[0] = r10 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r63 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r62)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r63 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r62) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r61.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r63)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r61.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r65 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r65 = virtualinvoke r7.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r66 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r65)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r66 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r66.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r9)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r66.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = i1 + 1
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : goto [?= (branch)]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0
