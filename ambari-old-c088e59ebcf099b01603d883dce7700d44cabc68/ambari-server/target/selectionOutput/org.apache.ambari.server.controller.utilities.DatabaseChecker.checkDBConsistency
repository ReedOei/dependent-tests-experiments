org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r14 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB consistency")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB consistency") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r15 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r15 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r15 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r15 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r74 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r15 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r16 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r16 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r0 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r17
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r0 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r17 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r77 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r77 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z9 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r21 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r18 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r18 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>("DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>("DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r19 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r19 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r19.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r19.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("DB consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : throw $r19
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("DB consistency check passed.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("DB consistency check passed.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= return]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : return
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r21 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r2 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r21
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r2 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r21 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r22 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r22 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r23 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity getDesiredStack()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r23 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.StackEntity getDesiredStack()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r22.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r23)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : specialinvoke $r22.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r23) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z1 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r24 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z9 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z9 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z9 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r24 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r6 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r24
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r6 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r24 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r7 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r7 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r7 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r8 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r8 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r8 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r8 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z2 = interfaceinvoke r8.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r8 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r26 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r26 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r27 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25[0] = $r27
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25[0] = $r27 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r28 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r28 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25[1] = $r28
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r25[1] = $r28 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("serviceComponentDesiredStateEntities is null or empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r25)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("serviceComponentDesiredStateEntities is null or empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r25) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r29)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z2 = interfaceinvoke r8.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z2 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r9 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r9 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r30 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r30 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r10 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r30
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r10 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r30 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r11 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r11 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentDesiredStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r12 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r12 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.util.Collection getHostComponentStateEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r31 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r31 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r32 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r33 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r33 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r34 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r34 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r35 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r35 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r13 = virtualinvoke $r31.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r32, $r33, $r34, $r35)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r13 = virtualinvoke $r31.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r32, $r33, $r34, $r35) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r36 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r36 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r36 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r36 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r67 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $r36 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z0 = $z10]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z0 = $z10] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z10
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z10 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r11 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r11 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r11 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z5 = interfaceinvoke r11.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z4 = interfaceinvoke r12.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i0 = interfaceinvoke r11.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = $z12
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = $z12 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z12 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z8 = $z12]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= z8 = $z12] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = $z12
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i0 = interfaceinvoke r11.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i1 = interfaceinvoke r12.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $i1 = interfaceinvoke r12.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r38 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r38 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r39 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r39 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[0] = $r39
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[0] = $r39 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r40 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r40 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[1] = $r40
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[1] = $r40 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r41 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r41 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[2] = $r41
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r37[2] = $r41 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("HostComponentStateEntities and HostComponentDesiredStateEntities tables must contain equal number of rows mapped to ServiceComponentDesiredStateEntity, (clusterName=%s, serviceName=%s, componentName=%s) ", $r37)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("HostComponentStateEntities and HostComponentDesiredStateEntities tables must contain equal number of rows mapped to ServiceComponentDesiredStateEntity, (clusterName=%s, serviceName=%s, componentName=%s) ", $r37) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String)>($r42)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z8 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z4 = interfaceinvoke r12.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r44 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r44 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r45 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r45 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[0] = $r45
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[0] = $r45 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r46 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[1] = $r46
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[1] = $r46 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r47 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r47 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[2] = $r47
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r43[2] = $r47 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r43)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r43) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r48)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r50 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r50 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r51 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r51 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[0] = $r51
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[0] = $r51 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r52 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[1] = $r52
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[1] = $r52 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r53 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r53 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[2] = $r53
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r49[2] = $r53 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r49)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r54 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r49) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r54)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r54) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if z11 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z5 = interfaceinvoke r11.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r56 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r56 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r57 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r57 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[0] = $r57
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[0] = $r57 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r58 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[1] = $r58
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[1] = $r58 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r59 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r59 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[2] = $r59
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r55[2] = $r59 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r55)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is empty for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r55) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r56.<org.slf4j.Logger: void error(java.lang.String)>($r60)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r56.<org.slf4j.Logger: void error(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z11 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r62 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r62 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r63 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r63 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[0] = $r63
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[0] = $r63 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r64 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[1] = $r64
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[1] = $r64 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r65 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r65 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[2] = $r65
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r61[2] = $r65 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r66 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r61)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r66 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("hostComponentDesiredStateEntities is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s, componentName=%s ", $r61) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r62.<org.slf4j.Logger: void error(java.lang.String)>($r66)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r62.<org.slf4j.Logger: void error(java.lang.String)>($r66) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if r12 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r67 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z6 = virtualinvoke $r67.<java.lang.String: boolean startsWith(java.lang.String)>("0")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z6 = virtualinvoke $r67.<java.lang.String: boolean startsWith(java.lang.String)>("0") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r68 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r68 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z7 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("SECONDARY_NAMENODE")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z7 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("SECONDARY_NAMENODE") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $z10 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z0 = $z10
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : z8 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r70 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r71 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r71 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69[0] = $r71
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69[0] = $r71 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r72 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r72 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69[1] = $r72
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r69[1] = $r72 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r73 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ServiceDesiredStateEntity is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r69)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r73 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ServiceDesiredStateEntity is null for ServiceComponentDesiredStateEntity, clusterName=%s, serviceName=%s ", $r69) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String)>($r73)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String)>($r73) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : r8 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.util.Collection getServiceComponentDesiredStateEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r74 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r75 = interfaceinvoke $r74.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r75 = interfaceinvoke $r74.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r76 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r75
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r76 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r75 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r76
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r76 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConsistency : $r16 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
