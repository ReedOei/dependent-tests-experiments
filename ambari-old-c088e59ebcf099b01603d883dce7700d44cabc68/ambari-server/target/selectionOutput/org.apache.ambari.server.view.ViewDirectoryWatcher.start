org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r5 = <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("There were errors in starting the view directory watcher. This task will not run", $r4)
org.apache.ambari.server.view.ViewDirectoryWatcher.start : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("There were errors in starting the view directory watcher. This task will not run", $r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : return
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.Path buildWatchService()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : r1 = specialinvoke r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.lang.Runnable startWatching(java.nio.file.Path)>(r6)
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.Path buildWatchService()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r4 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r1 = specialinvoke r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.lang.Runnable startWatching(java.nio.file.Path)>(r6) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r2 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.ExecutorService executorService>
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r1 = specialinvoke r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.lang.Runnable startWatching(java.nio.file.Path)>(r6) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r4 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r2 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.ExecutorService executorService> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r1)
org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r2 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.ExecutorService executorService> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r4 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.Future watchTask> = $r3
org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r4 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.Future watchTask> = $r3 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : goto [?= return]
org.apache.ambari.server.view.ViewDirectoryWatcher.start : r0.<org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.concurrent.Future watchTask> = $r3 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : $r4 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher.start : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher.start : return
