org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.stack.ConfigurationXml: java.util.List getProperties()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.stack.ConfigurationXml: java.util.List getProperties()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r4 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r4 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z0 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : return $r11
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r5 = (org.apache.ambari.server.state.PropertyInfo) $r13
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r5 = (org.apache.ambari.server.state.PropertyInfo) $r13 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: void setFilename(java.lang.String)>(r2)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: void setFilename(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r14 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: java.util.Set getPropertyTypes()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r14 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: java.util.Set getPropertyTypes()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r15 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType VALUE_FROM_PROPERTY_FILE>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r15 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType VALUE_FROM_PROPERTY_FILE> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z1 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>($r15)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z1 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z1 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r16 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r16 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $r16 == null
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $r16 == null >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r17 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $r16 == null >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r37 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r37 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r38 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r38 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r39 = virtualinvoke $r38.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r39 = virtualinvoke $r38.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Properties directory {} does not exist", $r39)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Properties directory {} does not exist", $r39) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r17 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z3 = virtualinvoke $r17.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z3 = virtualinvoke $r17.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z3 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r18 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r37 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r18 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z4 = virtualinvoke $r18.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z4 = virtualinvoke $r18.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z4 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r19 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.ValueAttributesInfo getPropertyValueAttributes()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r37 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r19 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.ValueAttributesInfo getPropertyValueAttributes()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r6 = virtualinvoke $r19.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String getPropertyFileName()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r6 = virtualinvoke $r19.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String getPropertyFileName()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r20 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.ValueAttributesInfo getPropertyValueAttributes()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r20 = virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: org.apache.ambari.server.state.ValueAttributesInfo getPropertyValueAttributes()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r7 = virtualinvoke $r20.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String getPropertyFileType()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r7 = virtualinvoke $r20.<org.apache.ambari.server.state.ValueAttributesInfo: java.lang.String getPropertyFileType()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r22 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r22 = r0.<org.apache.ambari.server.stack.ConfigurationDirectory: java.io.File propertiesDirFile> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r23 = virtualinvoke $r22.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r23 = virtualinvoke $r22.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r25 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r25 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r8 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r8 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r28 = new java.io.File
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r28 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>(r8)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z5 = virtualinvoke $r28.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z5 = virtualinvoke $r28.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z5 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z6 = virtualinvoke $r28.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r29 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r29 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Properties file {} does not exist", r8)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Properties file {} does not exist", r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z6 = virtualinvoke $r28.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z6 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r35 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r28)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r29 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r33 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r34 = virtualinvoke $r32.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r34 = virtualinvoke $r32.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to load value from property file {}. Error Message {}", r8, $r34)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to load value from property file {}. Error Message {}", r8, $r34) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r35 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r28) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 1
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r35 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r28) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r10 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r10 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = -1
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : r10 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = -1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $i0 = virtualinvoke r10.<java.lang.String: int hashCode()>()
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = -1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $i0 = virtualinvoke r10.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $i0 = virtualinvoke r10.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("xml")
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("json")
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("text")
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : lookupswitch($i0) {     case 118807: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z12 = staticinvoke <org.apache.ambari.server.utils.XmlUtils: boolean isValidXml(java.lang.String)>(r35)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z8 = staticinvoke <org.apache.ambari.server.utils.JsonUtils: boolean isValidJson(java.lang.String)>(r35)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: void setValue(java.lang.String)>(r35)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: void setValue(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : virtualinvoke r5.<org.apache.ambari.server.state.PropertyInfo: void setValue(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z8 = staticinvoke <org.apache.ambari.server.utils.JsonUtils: boolean isValidJson(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z8 != 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z8 = staticinvoke <org.apache.ambari.server.utils.JsonUtils: boolean isValidJson(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z8 != 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z8 != 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r31 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r31 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid JSON file", r8)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r31 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid JSON file", r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid JSON file", r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z12 = staticinvoke <org.apache.ambari.server.utils.XmlUtils: boolean isValidXml(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z12 != 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z12 = staticinvoke <org.apache.ambari.server.utils.XmlUtils: boolean isValidXml(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z12 != 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z12 != 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : z11 = 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r30 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r30 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid XML file", r8)
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r30 = <org.apache.ambari.server.stack.ConfigurationDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid XML file", r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to load value from property file. Property file {} is not a valid XML file", r8) >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if z11 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("text") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z7 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("text") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 2
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 2 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("json") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z9 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("json") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z9 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 1
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z9 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("xml") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z10 == 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("xml") >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : $r32 := @caughtexception
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z10 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 0
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : if $z10 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : b1 = 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationDirectory.parseProperties : tableswitch(b1) {     case 0:
