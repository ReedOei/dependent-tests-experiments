org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4 = new org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: void <init>(org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$1)>(null)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: void <init>(org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$1)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String url> = r1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String url> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r5 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.configuration.Configuration s_configuration>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r5 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.configuration.Configuration s_configuration> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : i0 = virtualinvoke $r5.<org.apache.ambari.server.configuration.Configuration: int getVersionDefinitionConnectTimeout()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : i0 = virtualinvoke $r5.<org.apache.ambari.server.configuration.Configuration: int getVersionDefinitionConnectTimeout()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r6 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.configuration.Configuration s_configuration>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r6 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.configuration.Configuration s_configuration> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : i1 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: int getVersionDefinitionReadTimeout()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : i1 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: int getVersionDefinitionReadTimeout()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r7 = new java.net.URI
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r7 = new java.net.URI >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r7 = new java.net.URI >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r16 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r16[0] = r1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r16[0] = r1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r17 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r17 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r16[1] = $r17
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r16[1] = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load url from %s.  %s", $r16)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load url from %s.  %s", $r16) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r18 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r18 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>(r22, $r15)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>(r22, $r15) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : throw $r18
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getScheme()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : if $z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r14 = virtualinvoke $r7.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r9 = new org.apache.ambari.server.controller.internal.URLStreamProvider
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r9 = new org.apache.ambari.server.controller.internal.URLStreamProvider >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r10 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r9 = new org.apache.ambari.server.controller.internal.URLStreamProvider >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r10 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,org.apache.ambari.server.configuration.ComponentSSLConfiguration)>(i0, i1, $r10)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r10 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,org.apache.ambari.server.configuration.ComponentSSLConfiguration)>(i0, i1, $r10) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.io.InputStream readFrom(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : specialinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,org.apache.ambari.server.configuration.ComponentSSLConfiguration)>(i0, i1, $r10) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.io.InputStream readFrom(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.io.InputStream readFrom(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString> = $r11
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString> = $r11 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r12 = $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString> = $r11 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r12 = $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r13 = staticinvoke <org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.VersionDefinitionXml load(java.lang.String)>($r12)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r12 = $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: java.lang.String xmlString> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r13 = staticinvoke <org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.VersionDefinitionXml load(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> = $r13
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r13 = staticinvoke <org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.VersionDefinitionXml load(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> = $r13 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : goto [?= return $r4]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r4.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> = $r13 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : return $r4
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r14 = virtualinvoke $r7.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r14.<java.net.URL: java.io.InputStream openStream()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r14 = virtualinvoke $r7.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r14.<java.net.URL: java.io.InputStream openStream()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : goto [?= $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8")]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : r20 = virtualinvoke $r14.<java.net.URL: java.io.InputStream openStream()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : goto [?= $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8")] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : goto [?= $r11 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r20, "UTF-8")] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.loadXml : $r15 := @caughtexception
