org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : r4 = virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r5 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : r4 = virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r13 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r14 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An internal error occurred while performing request host registration: ")
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An internal error occurred while performing request host registration: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r13)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r13) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : throw $r14
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r5 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r5, r4)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r5 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r13 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r5, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void updateHostWithRackInfo(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r1, r2, r3)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r5, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r13 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void updateHostWithRackInfo(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : goto [?= $r6 = new org.apache.ambari.server.topology.TopologyManager$3]
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void updateHostWithRackInfo(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r13 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : goto [?= $r6 = new org.apache.ambari.server.topology.TopologyManager$3] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r6 = new org.apache.ambari.server.topology.TopologyManager$3
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r6 = new org.apache.ambari.server.topology.TopologyManager$3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r6.<org.apache.ambari.server.topology.TopologyManager$3: void <init>(org.apache.ambari.server.topology.TopologyManager,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r0, r2, r3)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r6 = new org.apache.ambari.server.topology.TopologyManager$3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r10 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r11 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception ocurred while registering host name", $r10)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception ocurred while registering host name", $r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r12 = new java.lang.RuntimeException
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r12 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : throw $r12
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r6.<org.apache.ambari.server.topology.TopologyManager$3: void <init>(org.apache.ambari.server.topology.TopologyManager,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r0, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r6)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke $r6.<org.apache.ambari.server.topology.TopologyManager$3: void <init>(org.apache.ambari.server.topology.TopologyManager,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>(r0, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r10 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : goto [?= $r8 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>]
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r10 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : goto [?= $r8 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r8 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r8 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r9 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : $r9 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processAcceptedHostOffer: queue tasks for host = {} which responded {}", r4, $r9)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processAcceptedHostOffer: queue tasks for host = {} which responded {}", r4, $r9) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void queueHostTasks(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,java.lang.String)>(r1, r2, r4)
org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void queueHostTasks(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,java.lang.String)>(r1, r2, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAcceptedHostOffer : return
