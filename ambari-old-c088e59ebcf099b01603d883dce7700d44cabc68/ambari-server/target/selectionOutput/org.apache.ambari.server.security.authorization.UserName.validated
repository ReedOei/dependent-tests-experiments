org.apache.ambari.server.security.authorization.UserName.validated : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0
org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $r2 = new java.lang.IllegalArgumentException
org.apache.ambari.server.security.authorization.UserName.validated : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS>
org.apache.ambari.server.security.authorization.UserName.validated : $r1 = <org.apache.ambari.server.security.authorization.UserName: char[] FORBIDDEN_CHARS> >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1)
org.apache.ambari.server.security.authorization.UserName.validated : staticinvoke <org.apache.ambari.server.security.authorization.UserName: void rejectIfContainsAnyOf(java.lang.String,char[])>(r0, $r1) >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : return r0
org.apache.ambari.server.security.authorization.UserName.validated : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Username cannot be empty")
org.apache.ambari.server.security.authorization.UserName.validated : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Username cannot be empty") >>>>>>>> org.apache.ambari.server.security.authorization.UserName.validated : throw $r2
