org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r3 = r0.<org.apache.ambari.server.state.alerts.AlertStateChangedEventTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r4 = interfaceinvoke $r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r4 = interfaceinvoke $r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : r1 = (org.apache.ambari.server.state.Clusters) $r4
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : r1 = (org.apache.ambari.server.state.Clusters) $r4 >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.alerts.AlertStateChangedEventTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.alerts.AlertStateChangedEventTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : r2 = (org.apache.ambari.server.state.Cluster) $r5
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : r2 = (org.apache.ambari.server.state.Cluster) $r5 >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $z0 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: boolean isUpgradeSuspended()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $z0 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: boolean isUpgradeSuspended()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r17 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16)
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : $r17 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertStateChangedEventTest.expectNormalCluster : return
