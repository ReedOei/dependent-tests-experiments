org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r7 = new org.apache.ambari.server.orm.entities.TopologyHostInfoEntity >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void <init>()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(100L) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void setId(java.lang.Long)>($r8)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void setId(java.lang.Long)>($r8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void setHostCount(java.lang.Integer)>($r9)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyHostInfoEntity: void setHostCount(java.lang.Integer)>($r9) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r10 = new org.apache.ambari.server.orm.entities.TopologyHostGroupEntity
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r10 = new org.apache.ambari.server.orm.entities.TopologyHostGroupEntity >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void <init>()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r11 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r7)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r11 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void setTopologyHostInfoEntities(java.util.Collection)>($r11)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void setTopologyHostInfoEntities(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void setName(java.lang.String)>(r1)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r12 = new org.apache.ambari.server.orm.entities.TopologyRequestEntity
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r12 = new org.apache.ambari.server.orm.entities.TopologyRequestEntity >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r12.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: void <init>()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r12.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r10)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r12.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: void setTopologyHostGroupEntities(java.util.Collection)>($r13)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r12.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: void setTopologyHostGroupEntities(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r14 = new java.util.HashSet
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r14 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r14.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r14.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : l3 = 0L
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : l3 = 0L >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $l1 = (long) i0
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $l1 = (long) i0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $b2 = l3 cmp $l1
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $b2 = l3 cmp $l1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : if $b2 >= 0
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : if $b2 >= 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r45 = new org.apache.ambari.server.orm.entities.TopologyHostRequestEntity
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : if $b2 >= 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r15 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r15 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: org.apache.ambari.server.orm.entities.TopologyRequestEntity getTopologyRequestEntity()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: org.apache.ambari.server.orm.entities.TopologyRequestEntity getTopologyRequestEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r20 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r20 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r23 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r14)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r23 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r25 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r25 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r26 = virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r26 = virtualinvoke $r10.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r26)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r28 = (java.lang.String) $r27
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r29 = interfaceinvoke $r25.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>($r28)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r29 = interfaceinvoke $r25.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r31 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.HostGroup hostGroup1>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r31 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.HostGroup hostGroup1> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r32 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r32 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r34 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.HostGroup hostGroup1>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r34 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.HostGroup hostGroup1> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $z0 = interfaceinvoke $r34.<org.apache.ambari.server.topology.HostGroup: boolean containsMasterComponent()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $z0 = interfaceinvoke $r34.<org.apache.ambari.server.topology.HostGroup: boolean containsMasterComponent()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequestTest: void replayAll()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequestTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r40 = new org.apache.ambari.server.topology.LogicalRequest
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r40 = new org.apache.ambari.server.topology.LogicalRequest >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r44 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.TopologyRequest replayedTopologyRequest>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r44 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.TopologyRequest replayedTopologyRequest> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r43 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r43 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.topology.ClusterTopology clusterTopology> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r42 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity>
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r42 = r0.<org.apache.ambari.server.topology.LogicalRequestTest: org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity logicalRequestEntity> >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r40.<org.apache.ambari.server.topology.LogicalRequest: void <init>(java.lang.Long,org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity)>($r41, $r44, $r43, $r42)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r40.<org.apache.ambari.server.topology.LogicalRequest: void <init>(java.lang.Long,org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity)>($r41, $r44, $r43, $r42) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : return $r40
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r45 = new org.apache.ambari.server.orm.entities.TopologyHostRequestEntity >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void <init>()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : specialinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setId(java.lang.Long)>($r46)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setId(java.lang.Long)>($r46) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setTopologyHostGroupEntity(org.apache.ambari.server.orm.entities.TopologyHostGroupEntity)>($r10)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setTopologyHostGroupEntity(org.apache.ambari.server.orm.entities.TopologyHostGroupEntity)>($r10) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r47 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $r47 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setTopologyHostTaskEntities(java.util.Collection)>($r47)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : virtualinvoke $r45.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: void setTopologyHostTaskEntities(java.util.Collection)>($r47) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r45)
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : l3 = l3 + 1L
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : l3 = l3 + 1L >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : goto [?= $l1 = (long) i0]
org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : goto [?= $l1 = (long) i0] >>>>>>>> org.apache.ambari.server.topology.LogicalRequestTest.createTopologyRequestByHostCount : $l1 = (long) i0
