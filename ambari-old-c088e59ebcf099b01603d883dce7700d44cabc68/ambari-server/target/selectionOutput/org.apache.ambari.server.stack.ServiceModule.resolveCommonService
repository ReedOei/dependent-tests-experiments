org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $z0 = r0.<org.apache.ambari.server.stack.ServiceModule: boolean isCommonService> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z0 != 0
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r39 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r9 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r9 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState moduleState> = $r9
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState moduleState> = $r9 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r10 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r10 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r4 = virtualinvoke $r10.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getParent()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r4 = virtualinvoke $r10.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getParent()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r4 == null
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r4 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r12 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r4 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r11 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r11 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState moduleState> = $r11
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState moduleState> = $r11 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : return
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r12 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>($r12)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $i0 = lengthof r5
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $i0 == 3
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $i0 == 3 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r26 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $i0 == 3 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r13 = r5[0]
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r13 = r5[0] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $z1 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("common-services")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $z1 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("common-services") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z1 == 0
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r14 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r14 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r14.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Common service cannot inherit from a non common service")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r14.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Common service cannot inherit from a non common service") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : throw $r14
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r16 = r5[1]
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r16 = r5[1] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r18 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r18 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r20 = r5[2]
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r20 = r5[2] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r7 = (org.apache.ambari.server.stack.ServiceModule) $r22
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r7 = (org.apache.ambari.server.stack.ServiceModule) $r22 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r8 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState getModuleState()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : r8 = virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ModuleState getModuleState()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r23 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r23 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r23
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r23 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: void resolveCommonService(java.util.Map,java.util.Map,java.util.Map)>(r1, r2, r3)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r23 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r24 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r24 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r24
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r24 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r25 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : if r8 != $r24 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void resolveExplicit(org.apache.ambari.server.stack.ServiceModule,java.util.Map,java.util.Map,java.util.Map)>(r7, r1, r2, r3)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void resolveExplicit(org.apache.ambari.server.stack.ServiceModule,java.util.Map,java.util.Map,java.util.Map)>(r7, r1, r2, r3) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : goto [?= $r11 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED>]
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : goto [?= $r11 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED>] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r11 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState RESOLVED>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r25 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing common service")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing common service") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : throw $r25
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : virtualinvoke r7.<org.apache.ambari.server.stack.ServiceModule: void resolveCommonService(java.util.Map,java.util.Map,java.util.Map)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : goto [?= virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void resolveExplicit(org.apache.ambari.server.stack.ServiceModule,java.util.Map,java.util.Map,java.util.Map)>(r7, r1, r2, r3)]
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : goto [?= virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void resolveExplicit(org.apache.ambari.server.stack.ServiceModule,java.util.Map,java.util.Map,java.util.Map)>(r7, r1, r2, r3)] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void resolveExplicit(org.apache.ambari.server.stack.ServiceModule,java.util.Map,java.util.Map,java.util.Map)>(r7, r1, r2, r3)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r26 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The common service \'")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The common service \'") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r29 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r29 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r32 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r32 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' extends an invalid parent: \'")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' extends an invalid parent: \'") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r26.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : throw $r26
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : $r39 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Not a common service")
org.apache.ambari.server.stack.ServiceModule.resolveCommonService : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Not a common service") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.resolveCommonService : throw $r39
