org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i0 = interfaceinvoke $r6.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i0 = interfaceinvoke $r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i0 != 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i0 != 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i4 = 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i4 = 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : return $r5
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r3 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r8
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r3 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r8 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r9 = class "Lorg/apache/ambari/server/state/stack/upgrade/ClusterGrouping;"
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r9 = class "Lorg/apache/ambari/server/state/stack/upgrade/ClusterGrouping;" >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z1 = virtualinvoke $r9.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z1 = virtualinvoke $r9.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i1 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i1 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r10 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i2 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i2 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i1 >= $i2
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i1 >= $i2 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i1 >= $i2 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i3 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i3 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i3)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r13 = class "Lorg/apache/ambari/server/state/stack/upgrade/ServiceCheckGrouping;"
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r13 = class "Lorg/apache/ambari/server/state/stack/upgrade/ServiceCheckGrouping;" >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z2 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z2 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, r3)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, r3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, $r14)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, $r14) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, r3)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i4, r3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i5 = i5 + 1]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i5 = i5 + 1] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i4 = i4 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i4 = i4 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i5 = i5 + 1]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i5 = i5 + 1] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i5 = i5 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : return $r15
