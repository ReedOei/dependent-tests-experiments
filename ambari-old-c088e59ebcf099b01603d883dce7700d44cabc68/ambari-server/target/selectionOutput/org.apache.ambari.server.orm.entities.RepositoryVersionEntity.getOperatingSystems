org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : return $r4
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r11[0] = $r12
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to parse repository from OS/Repo information in the database: %s. Required fields: repo_name, repo_id, base_url", $r11)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to parse repository from OS/Repo information in the database: %s. Required fields: repo_name, repo_id, base_url", $r11) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r13 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r13 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r2, $r10)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r2, $r10) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r6
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r6 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r6 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r9 = virtualinvoke $r7.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r8)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r9 = virtualinvoke $r7.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : return $r9
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r9 = virtualinvoke $r7.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 := @caughtexception
