org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r8 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Checking for tables with large physical size")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Checking for tables with large physical size") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r0 = interfaceinvoke $r9.<org.apache.ambari.server.orm.DBAccessor: org.apache.ambari.server.orm.DBAccessor$DbType getDbType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r0 = interfaceinvoke $r9.<org.apache.ambari.server.orm.DBAccessor: org.apache.ambari.server.orm.DBAccessor$DbType getDbType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r1 = interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: java.lang.String getDbSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r1 = interfaceinvoke $r10.<org.apache.ambari.server.orm.DBAccessor: java.lang.String getDbSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT (data_length + index_length) \"Table Size\" FROM information_schema.TABLES WHERE table_schema = \"")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT (data_length + index_length) \"Table Size\" FROM information_schema.TABLES WHERE table_schema = \"") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" AND table_name =\"%s\"")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" AND table_name =\"%s\"") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r15 = new java.util.HashMap
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r16 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType POSTGRES>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r16 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType POSTGRES> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, "SELECT pg_total_relation_size(\'%s\') \"Table Size\"")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, "SELECT pg_total_relation_size(\'%s\') \"Table Size\"") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r17 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType MYSQL>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r17 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType MYSQL> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r18 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType ORACLE>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r18 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType ORACLE> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, "SELECT bytes \"Table Size\" FROM user_segments WHERE segment_type=\'TABLE\' AND segment_name=\'%s\'")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, "SELECT bytes \"Table Size\" FROM user_segments WHERE segment_type=\'TABLE\' AND segment_name=\'%s\'") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19 = newarray (java.lang.String)[5]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19 = newarray (java.lang.String)[5] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[0] = "host_role_command"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[0] = "host_role_command" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[1] = "execution_command"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[1] = "execution_command" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[2] = "stage"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[2] = "stage" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[3] = "request"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[3] = "request" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[4] = "alert_history"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r19[4] = "alert_history" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r20 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r20 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r5 = (java.lang.String) $r20
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r5 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r21 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType ORACLE>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r21 = <org.apache.ambari.server.orm.DBAccessor$DbType: org.apache.ambari.server.orm.DBAccessor$DbType ORACLE> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r0 != $r21
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r0 != $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i5 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r0 != $r21 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r68 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r68 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r22 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r22 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r6 = (java.lang.String) $r22
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r6 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = -1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = -1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = -1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r62 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r63 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r63.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r62)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r63.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r62) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r57
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r60 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r61 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r61.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r60)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r61.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r60) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r57
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= throw $r57]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r60 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= throw $r57] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r57
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r62 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = interfaceinvoke $r23.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = interfaceinvoke $r23.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = interfaceinvoke $r23.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r70 = interfaceinvoke $r23.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r24[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r24)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, $r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r25)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s table size from database, will check row count: ", $r37)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r37[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s table size from database, will check row count: ", $r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r39, $r36)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s table size from database, will check row count: ", $r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r39, $r36) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r39, $r36) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r40[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) FROM %s", $r40)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) FROM %s", $r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) FROM %s", $r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) FROM %s", $r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r41)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r69 = interfaceinvoke r70.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 <= 3000000
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r54 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r54[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r54 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r54[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s row count: ", $r54)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r54[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s row count: ", $r54) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to get %s row count: ", $r54) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56[0] = $r36
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56[0] = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r55, $r56)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r56[0] = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r55, $r56) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r55, $r56) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r58 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r59 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r59.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r58)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r59.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r58) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r51 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r52 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r51)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r52.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r51) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r51 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r58 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 <= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 <= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 == -1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 <= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 == -1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 >= 3000000
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 == -1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 == -1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Unable to get size for table {}!", $r42)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Unable to get size for table {}!", $r42) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Unable to get size for table {}!", $r42) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Unable to get size for table {}!", $r42) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 >= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r44 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 >= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r42 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 >= 3000000 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r44 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r44 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[1] = $r45
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[1] = $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[1] = $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[1] = $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[2] = $r46
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[2] = $r46 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[2] = $r46 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r43[2] = $r46 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s currently has %d rows and is within normal limits (%d)", $r43)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s currently has %d rows and is within normal limits (%d)", $r43) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s currently has %d rows and is within normal limits (%d)", $r43) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s currently has %d rows and is within normal limits (%d)", $r43) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r47)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[1] = $r49
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[1] = $r49 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[1] = $r49 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[1] = $r49 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000000) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[2] = $r50
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[2] = $r50 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[2] = $r50 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r48[2] = $r50 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} currently has {} rows (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r48)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} currently has {} rows (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r48) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} currently has {} rows (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r48) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} currently has {} rows (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r48) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = interfaceinvoke r69.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i6 <= 3000000
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = interfaceinvoke r69.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = interfaceinvoke r69.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i6 = interfaceinvoke r69.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r53 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z0 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d1 = virtualinvoke r71.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d0 = virtualinvoke r71.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r26 = new java.lang.Exception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r26 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r26 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r26 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r26.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r26.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r26.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : specialinvoke $r26.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r26
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : throw $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d0 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d0 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d0 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b0 = $d0 cmpg 3000.0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b0 = $d0 cmpg 3000.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b0 >= 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b0 = $d0 cmpg 3000.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b0 >= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r28 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b0 >= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r26 = new java.lang.Exception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b0 >= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r28 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r28 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r28 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[1] = r71
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[2] = $r29
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[2] = $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[2] = $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r27[2] = $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s is currently %.3f MB and is within normal limits (%.3f)", $r27)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s is currently %.3f MB and is within normal limits (%.3f)", $r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s is currently %.3f MB and is within normal limits (%.3f)", $r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The database table %s is currently %.3f MB and is within normal limits (%.3f)", $r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r66 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r67 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r66)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r67.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r66) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r64 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r65 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r65.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r64)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke $r65.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r64) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r70.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r64 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r69.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r66 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r70 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d1 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d1 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d1 = virtualinvoke r71.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b1 = $d1 cmpl 3000.0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b1 = $d1 cmpl 3000.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b1 <= 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $b1 = $d1 cmpl 3000.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b1 <= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b1 <= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b1 <= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $b1 <= 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[0] = r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[0] = r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[1] = r71
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[1] = r71 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3000.0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[2] = $r32
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[2] = $r32 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[2] = $r32 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r31[2] = $r32 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} is currently {} MB (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r31)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} is currently {} MB (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} is currently {} MB (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The database table {} is currently {} MB (limit is {}) and may impact performance. It is recommended that you reduce its size by executing \"ambari-server db-purge-history\".", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r69 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z2 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l2 = interfaceinvoke r69.<java.sql.ResultSet: long getLong(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r71 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l2 = interfaceinvoke r69.<java.sql.ResultSet: long getLong(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l2 = interfaceinvoke r69.<java.sql.ResultSet: long getLong(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l2 = interfaceinvoke r69.<java.sql.ResultSet: long getLong(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r72 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r72 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l3 = virtualinvoke r72.<java.lang.Long: long longValue()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r72 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r72 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if r72 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l3 = virtualinvoke r72.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l3 = virtualinvoke r72.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $l3 = virtualinvoke r72.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d2 = (double) $l3
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d2 = (double) $l3 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d3 = $d2 / 1024.0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d2 = (double) $l3 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d3 = $d2 / 1024.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d4 = $d3 / 1024.0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d3 = $d2 / 1024.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d4 = $d3 / 1024.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d4 = $d3 / 1024.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $d4 = $d3 / 1024.0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r71 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r57 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $z2 = interfaceinvoke r69.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i5 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $i4 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $i4 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i5 >= $i4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i5 >= $i4 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r33 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i5)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : if i5 >= $i4 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : r68 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r33 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i5) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r34 = (java.lang.String) $r33
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r34 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r35 = virtualinvoke $r34.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $r35 = virtualinvoke $r34.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, $r35)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, $r35) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i5 = i5 + 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : i5 = i5 + 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $i4 = interfaceinvoke r4.<java.util.List: int size()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : goto [?= $i4 = interfaceinvoke r4.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForLargeTables : $i4 = interfaceinvoke r4.<java.util.List: int size()>()
