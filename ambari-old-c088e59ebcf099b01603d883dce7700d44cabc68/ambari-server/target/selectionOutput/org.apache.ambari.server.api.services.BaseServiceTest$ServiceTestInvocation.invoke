org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r3 = r0.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.reflect.Method m_method> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r2 = r0.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: org.apache.ambari.server.api.services.BaseService m_instance>
org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r2 = r0.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: org.apache.ambari.server.api.services.BaseService m_instance> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r1 = r0.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.Object[] m_args>
org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r1 = r0.<org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation: java.lang.Object[] m_args> >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r1)
org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r1) >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r5 = (javax.ws.rs.core.Response) $r4
org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : $r5 = (javax.ws.rs.core.Response) $r4 >>>>>>>> org.apache.ambari.server.api.services.BaseServiceTest$ServiceTestInvocation.invoke : return $r5
