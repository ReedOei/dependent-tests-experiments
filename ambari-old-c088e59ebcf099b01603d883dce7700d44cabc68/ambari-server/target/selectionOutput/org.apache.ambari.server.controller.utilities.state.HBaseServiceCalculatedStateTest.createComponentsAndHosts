org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r8 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r1 = interfaceinvoke $r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_MASTER")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r1 = interfaceinvoke $r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r9 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r9 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_REGIONSERVER")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_REGIONSERVER") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r10 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r10 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_CLIENT")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r3 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HBASE_CLIENT") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r4 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: java.lang.String[] hosts>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r4 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: java.lang.String[] hosts> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i0 = lengthof r4
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i1 = 0
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r5 = r4[i1]
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : return
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r11 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r11 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r12 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r12 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r6 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r6 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r13 = new java.util.HashMap
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r13)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r13) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r16 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r16 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r16)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r16) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r17 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r17 = r0.<org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r5, "c1")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r5, "c1") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r21 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r21 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r21.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r21.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r21.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r18)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r21.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r18) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r22 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r22 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r22.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r22.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r22.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r19)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r22.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r19) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r23 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : r23 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r23.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r23.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r23.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r20)
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r23.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r20) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i1 = i1 + 1
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.state.HBaseServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0
