org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if null != r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : return null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if null != r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/sql/ResultSet;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/sql/ResultSet;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r3 = (java.sql.ResultSet) $r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r3 = (java.sql.ResultSet) $r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z0 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z2 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z1 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z1 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z3 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r11[0] = r3
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r11[0] = r3 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r11)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : return r3
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r12 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>(r1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r12 = interfaceinvoke r3.<java.sql.ResultSet: java.lang.Object getObject(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z2 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $r18 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $i0 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $i0 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>($i0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest.resultSet : $z1 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
