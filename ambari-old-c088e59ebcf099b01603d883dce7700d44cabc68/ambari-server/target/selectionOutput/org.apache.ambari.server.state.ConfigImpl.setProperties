org.apache.ambari.server.state.ConfigImpl.setProperties : $r3 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties> = r1
org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r7 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.setProperties : $r8 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : throw $r7
org.apache.ambari.server.state.ConfigImpl.setProperties : r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties> = r1 >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r5 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock>
org.apache.ambari.server.state.ConfigImpl.setProperties : r0.<org.apache.ambari.server.state.ConfigImpl: java.util.Map properties> = r1 >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r7 := @caughtexception
org.apache.ambari.server.state.ConfigImpl.setProperties : $r5 = r0.<org.apache.ambari.server.state.ConfigImpl: java.util.concurrent.locks.ReadWriteLock propertyLock> >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.ConfigImpl.setProperties : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : goto [?= return]
org.apache.ambari.server.state.ConfigImpl.setProperties : goto [?= return] >>>>>>>> org.apache.ambari.server.state.ConfigImpl.setProperties : return
