org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r4 = r0.<org.apache.ambari.server.orm.dao.TopologyHostTaskDAO: com.google.inject.Provider entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r5 = interfaceinvoke $r4.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : r2 = (javax.persistence.EntityManager) $r5
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : r2 = (javax.persistence.EntityManager) $r5 >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : r3 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("TopologyLogicalTaskEntity.findHostRequestIdsByHostTaskIds", class "Ljava/lang/Long;")
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : r3 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("TopologyLogicalTaskEntity.findHostRequestIdsByHostTaskIds", class "Ljava/lang/Long;") >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : interfaceinvoke r3.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("hostTaskIds", r1)
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : interfaceinvoke r3.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("hostTaskIds", r1) >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r8 = r0.<org.apache.ambari.server.orm.dao.TopologyHostTaskDAO: org.apache.ambari.server.orm.dao.DaoUtils daoUtils>
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r8 = r0.<org.apache.ambari.server.orm.dao.TopologyHostTaskDAO: org.apache.ambari.server.orm.dao.DaoUtils daoUtils> >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r7 = newarray (java.lang.Object)[0]
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r7 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r9 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r3, $r7)
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r9 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r3, $r7) >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r10 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>($r9)
org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : $r10 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>($r9) >>>>>>>> org.apache.ambari.server.orm.dao.TopologyHostTaskDAO.findHostRequestIdsByHostTaskIds : return $r10
