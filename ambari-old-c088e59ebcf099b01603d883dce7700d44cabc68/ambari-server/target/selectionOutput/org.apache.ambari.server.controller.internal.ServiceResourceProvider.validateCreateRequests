org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r3 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r3 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r9 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r10 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r98 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r98 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z17 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r22 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $i0 = interfaceinvoke $r9.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $i0 = interfaceinvoke $r9.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i0 == 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i0 == 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r21 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i0 == 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z0 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z0 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z0 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r11 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : return
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r11 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r13 = (org.apache.ambari.server.controller.ServiceRequest) $r12
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r13 = (org.apache.ambari.server.controller.ServiceRequest) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r113 = virtualinvoke $r13.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r113 = virtualinvoke $r13.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create a service which already exists: , clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create a service which already exists: , clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r113)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r113) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r18 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r10, ",")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r18 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r10, ",") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r114 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r114 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r20 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r20 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r20.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r114)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r20.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r114) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r20
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r21 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, updates allowedon only one cluster at a time")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, updates allowedon only one cluster at a time") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r21
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r22 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r99 = (org.apache.ambari.server.controller.ServiceRequest) $r22
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r99 = (org.apache.ambari.server.controller.ServiceRequest) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r6 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r6 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r7 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r7 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>(r6, "Cluster name should be provided when creating a service")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>(r6, "Cluster name should be provided when creating a service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>(r7, "Service name should be provided when creating a service")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>(r7, "Service name should be provided when creating a service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r23 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r23 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z1 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z1 = interfaceinvoke $r23.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z1 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r94 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r24 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r24 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.Long getClusterResourceId(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.Long getClusterResourceId(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r24, $r25, $r26)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r24, $r25, $r26) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z2 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r92 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z3 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z3 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z3 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r90 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r27 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r27 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r28 = (java.util.Set) $r27
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r28 = (java.util.Set) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z4 = interfaceinvoke $r28.<java.util.Set: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z4 = interfaceinvoke $r28.<java.util.Set: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z4 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r29 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r29 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r30 = (java.util.Set) $r29
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r30 = (java.util.Set) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r31 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r31 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r31)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z6 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r82 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r101 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r95 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r96 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r96.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a service to a cluster which doesn\'t exist", $r95)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r96.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a service to a cluster which doesn\'t exist", $r95) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r96
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r101 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7)]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r101 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r95 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7)] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7)] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r97 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r105 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.Long getDesiredRepositoryVersionId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r65 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r61 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r32 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r32 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r33 = virtualinvoke $r32.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r105)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r33 = virtualinvoke $r32.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r105) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r110 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r33
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r110 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r110
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r110 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r58 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r110 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r111 = virtualinvoke r110.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r111 = virtualinvoke r110.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: void setResolvedRepository(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r110)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: void setResolvedRepository(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r110) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r34 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r34 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r35 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r35 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r36 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r36 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z7 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidService(java.lang.String,java.lang.String,java.lang.String)>($r34, $r35, $r36)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z7 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidService(java.lang.String,java.lang.String,java.lang.String)>($r34, $r35, $r36) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z7 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r48 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r37 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r37 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r38 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r38 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r39 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r39 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r112 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r37, $r38, $r39)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r112 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r37, $r38, $r39) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r40 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r40 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r40)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z8 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r41 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r41 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r41)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z9 = virtualinvoke r112.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z9 = virtualinvoke r112.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z9 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if z18 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r42 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r42 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r43 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r43 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r45 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r45 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r42
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r48 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid service in stack, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid service in stack, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackInfo=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stackInfo=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r55 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r55 = virtualinvoke r111.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r48
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r58 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r59 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r59 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r59[0] = r105
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r59[0] = r105 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find any repositories defined by %d", $r59)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find any repositories defined by %d", $r59) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r58.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r60)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r58.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r58
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r61 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r62 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r62 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r63 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r63 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r62[0] = $r63
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r62[0] = $r63 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s is required when adding a service.", $r62)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s is required when adding a service.", $r62) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r61.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r61.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r61
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r65 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r65.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r65.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r66 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r66 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r67 = interfaceinvoke $r66.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r67 = interfaceinvoke $r66.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r107 = interfaceinvoke $r67.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r107 = interfaceinvoke $r67.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z10 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r78 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r68 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r68 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r69 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r69 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r70 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r65, 44)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r70 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r65, 44) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r68.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("{} was not specified; the following repository ids were found: {}", $r69, $r70)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r68.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("{} was not specified; the following repository ids were found: {}", $r69, $r70) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z11 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isEmpty(java.util.Collection)>($r65)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z11 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isEmpty(java.util.Collection)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z11 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r77 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $i1 = interfaceinvoke $r65.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $i1 = interfaceinvoke $r65.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i1 <= 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r73 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r71 = interfaceinvoke $r65.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r71 = interfaceinvoke $r65.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r72 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r72 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r105 = (java.lang.Long) $r72
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r105 = (java.lang.Long) $r72 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null != r105
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r73 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r74 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r74 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r75 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r75 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_DESIRED_REPO_VERSION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r74[0] = $r75
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r74[0] = $r75 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r76 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was not specified, and the cluster contains more than one standard-type repository", $r74)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r76 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was not specified, and the cluster contains more than one standard-type repository", $r74) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r76)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r76) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r73
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r77 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r77.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No repositories were found for service installation")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r77.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No repositories were found for service installation") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r77
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r78 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r108 = (org.apache.ambari.server.state.Service) $r78
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r108 = (org.apache.ambari.server.state.Service) $r78 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r109 = interfaceinvoke r108.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r109 = interfaceinvoke r108.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r79 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getParentId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r79 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getParentId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null == $r79
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null == $r79 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r81 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getParentId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if null == $r79 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r80 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r80 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r81 = virtualinvoke r109.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getParentId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>($r81)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= (branch)]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z10 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r103 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r97 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= r105 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.Long getDesiredRepositoryVersionId()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r97 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= r105 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.Long getDesiredRepositoryVersionId()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r105 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.Long getDesiredRepositoryVersionId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r97 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r82 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r100 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r82)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r100 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z15 = virtualinvoke r100.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z15 = virtualinvoke r100.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z15 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r89 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r83 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r83 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r84 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r84 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r84.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r84.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r86 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r86 = virtualinvoke r99.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r83.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r88)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r83.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r83
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r89 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r100 == $r89
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r100 == $r89 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r83 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r100 == $r89 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : r101 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : if r100 == $r89 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r95 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : goto [?= $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $z17 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r90 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r90.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r90.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r90)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r90) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r27 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r92 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r92.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The user is not authorized to create services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : specialinvoke $r92.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The user is not authorized to create services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : throw $r92
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r94 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[0] = r6
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[0] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[1] = r7
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[1] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[2] = r99
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r93[2] = r99 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r94.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Received a createService request, clusterName={}, serviceName={}, request={}", $r93)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : interfaceinvoke $r94.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Received a createService request, clusterName={}, serviceName={}, request={}", $r93) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.validateCreateRequests : $r24 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
