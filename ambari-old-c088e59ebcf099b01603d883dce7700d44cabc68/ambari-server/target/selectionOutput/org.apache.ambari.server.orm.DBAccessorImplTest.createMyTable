org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r7 = r0.<org.apache.ambari.server.orm.DBAccessorImplTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessorImpl;")
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessorImpl;") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r3 = (org.apache.ambari.server.orm.DBAccessorImpl) $r8
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r3 = (org.apache.ambari.server.orm.DBAccessorImpl) $r8 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r9 = new java.util.ArrayList
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r9 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "Ljava/lang/Long;", null, null, 0)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "Ljava/lang/Long;", null, null, 0) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i0 = lengthof r2
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i0 = lengthof r2 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i1 = 0
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i1 = 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : if i1 >= i0
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : if i1 >= i0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r6 = r2[i1]
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : if i1 >= i0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11 = newarray (java.lang.String)[1]
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11[0] = "id"
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11[0] = "id" >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessorImpl: void createTable(java.lang.String,java.util.List,java.lang.String[])>(r1, $r9, $r11)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessorImpl: void createTable(java.lang.String,java.util.List,java.lang.String[])>(r1, $r9, $r11) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : return
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r6 = r2[i1] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r12 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r12 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20000)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20000) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r12.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>(r6, class "Ljava/lang/String;", $r13, null, 1)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r12.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>(r6, class "Ljava/lang/String;", $r13, null, 1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i1 = i1 + 1
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : goto [?= (branch)]
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : if i1 >= i0
