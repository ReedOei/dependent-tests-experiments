org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r5 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r1)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r6 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r6 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : return r5
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r7 = (java.lang.String) $r11
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r7 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z2 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r8 = (java.util.List) $r12
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r8 = (java.util.List) $r12 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z3 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r13 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r13 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r10 = (java.lang.String) $r13
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : r10 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z4 != 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z5 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z5 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z5 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z6 != 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z6 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : if $z6 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getRecursiveDependencies(java.util.Set,java.util.Map,java.util.Set,java.util.Set)>(r5, r2, r3, r4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getRecursiveDependencies(java.util.Set,java.util.Map,java.util.Set,java.util.Set)>(r5, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r14)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r14) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getRecursiveDependencies : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
