org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : $z0 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger: boolean m_seeded> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : $r1 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger: org.apache.ambari.server.state.repository.VersionDefinitionXml m_xml>
org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : $r1 = null
org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : $r1 = null >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : return $r1
org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : $r1 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger: org.apache.ambari.server.state.repository.VersionDefinitionXml m_xml> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : goto [?= return $r1]
org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : goto [?= return $r1] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml$Merger.merge : return $r1
