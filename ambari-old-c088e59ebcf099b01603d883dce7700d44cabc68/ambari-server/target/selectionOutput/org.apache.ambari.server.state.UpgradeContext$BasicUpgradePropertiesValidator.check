org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r7 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if r2 != $r7
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if r2 != $r7 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Upgrade/repository_version_id")
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if r2 != $r7 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : return
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Upgrade/repository_version_id") >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : r6 = (java.lang.String) $r8
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : r6 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r6)
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if $z0 == 0
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r9 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : return
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r9 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r10 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r10 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r10[0] = "Upgrade/repository_version_id"
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r10[0] = "Upgrade/repository_version_id" >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s is required for upgrades", $r10)
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s is required for upgrades", $r10) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r11)
org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$BasicUpgradePropertiesValidator.check : throw $r9
