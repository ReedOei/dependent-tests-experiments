org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r0 = (org.apache.ambari.server.configuration.Configuration) $r12
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r0 = (org.apache.ambari.server.configuration.Configuration) $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r14 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r14 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r13 != $r14
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r13 != $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r13 != $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("Ensuring that the schema set for Postgres is correct")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("Ensuring that the schema set for Postgres is correct") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r16 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r16 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = interfaceinvoke $r16.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r16 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r49 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r49[0] = $r48
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r49[0] = $r48 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during checking db schema name: ", $r49)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during checking db schema name: ", $r49) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = interfaceinvoke $r16.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r53 = interfaceinvoke $r17.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = interfaceinvoke $r16.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r53 = interfaceinvoke $r17.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r53 = interfaceinvoke $r17.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = interfaceinvoke $r18.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = interfaceinvoke $r18.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = interfaceinvoke $r18.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = interfaceinvoke $r18.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r55 = interfaceinvoke $r19.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("show search_path")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r55 = interfaceinvoke $r19.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("show search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r55 = interfaceinvoke $r19.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("show search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r55 = interfaceinvoke $r19.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("show search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r57 = interfaceinvoke $r21.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select table_schema from information_schema.tables where table_name = \'hostcomponentdesiredstate\'")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r57 = interfaceinvoke $r21.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select table_schema from information_schema.tables where table_name = \'hostcomponentdesiredstate\'") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r57 = interfaceinvoke $r21.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select table_schema from information_schema.tables where table_name = \'hostcomponentdesiredstate\'") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r57 = interfaceinvoke $r21.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select table_schema from information_schema.tables where table_name = \'hostcomponentdesiredstate\'") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r53, "TABLE_SCHEM")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r53, "TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r53, "TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r53, "TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r23 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r23 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r23 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r23 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z4 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r23)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z4 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z4 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z4 = virtualinvoke $r22.<java.util.ArrayList: boolean contains(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r55, "search_path")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r54 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r46
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r46 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r54 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r54 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r54 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r50 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r54 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r54.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r50) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r46]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r54.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r50) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r46] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r46
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r46
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r46]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r50 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r46] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r46
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = $r41 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r41
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r54 = $r41 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r41 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r40 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r56 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r40 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r56.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r56.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r56.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r45] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r45
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = $r43 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r43
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r56 = $r43 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r43 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r52 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r58 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r52 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r58.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r52) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r58.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r52) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : virtualinvoke r58.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r52) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw $r44] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r44
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = $r47 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r47
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r58 = $r47 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw $r47 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r55, "search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r55, "search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r55, "search_path") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 = virtualinvoke $r24.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 = virtualinvoke $r24.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 = virtualinvoke $r24.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 = virtualinvoke $r24.<com.google.common.base.Splitter: com.google.common.base.Splitter trimResults()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 = virtualinvoke $r25.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r27)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 = virtualinvoke $r25.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 = virtualinvoke $r25.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 = virtualinvoke $r25.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>($r27) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r28)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.lang.Iterable)>($r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = $r59
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = $r59 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = $r59 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = $r59 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke $r59.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke $r59.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke $r59.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke $r59.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r29 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r29 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r29 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r29 = interfaceinvoke $r59.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = (java.lang.String) $r29
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r60, $r30)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r60, $r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r60, $r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r60, $r30) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r57, "table_schema")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r57, "table_schema") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r57, "table_schema") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r57, "table_schema") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r57.<java.sql.ResultSet: void close()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r55.<java.sql.ResultSet: void close()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r53.<java.sql.ResultSet: void close()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r53.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r53.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r53.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r55.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r55.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r55.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r55.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r53 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r57.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r57.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= interfaceinvoke r57.<java.sql.ResultSet: void close()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r57.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r41 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r55 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31[0] = r4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31[0] = r4 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31[0] = r4 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31[0] = r4 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r43 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Multiple schemas contain the Ambari tables: {}. This can lead to problems.", $r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r57 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z3 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r32)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z3 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z3 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z3 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z3 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r34 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r34 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r34 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r34 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33[0] = $r34
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties does not contain the Ambari tables. Storing Ambari tables under a different schema can lead to problems.", $r33)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties does not contain the Ambari tables. Storing Ambari tables under a different schema can lead to problems.", $r33) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties does not contain the Ambari tables. Storing Ambari tables under a different schema can lead to problems.", $r33) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties does not contain the Ambari tables. Storing Ambari tables under a different schema can lead to problems.", $r33) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r36 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r36 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r36 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r36 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[0] = $r36
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[0] = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[0] = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[0] = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[1] = r2
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[1] = r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[1] = r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r35[1] = r2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari in ambari.properties is not first on the search path: {}. This can lead to problems.", $r35)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari in ambari.properties is not first on the search path: {}. This can lead to problems.", $r35) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari in ambari.properties is not first on the search path: {}. This can lead to problems.", $r35) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari in ambari.properties is not first on the search path: {}. This can lead to problems.", $r35) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r57, "table_schema")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r60 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r59 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= r2 = $r59]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= r2 = $r59] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= r2 = $r59] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= r2 = $r59] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = $r59
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r38 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r38 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r38 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r38 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37[0] = $r38
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37[0] = $r38 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37[0] = $r38 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r37[0] = $r38 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties has not been found in the database. Storing Ambari tables under a different schema can lead to problems.", $r37)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties has not been found in the database. Storing Ambari tables under a different schema can lead to problems.", $r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r47 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties has not been found in the database. Storing Ambari tables under a different schema can lead to problems.", $r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r44 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("The schema [{}] defined for Ambari from ambari.properties has not been found in the database. Storing Ambari tables under a different schema can lead to problems.", $r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.util.ArrayList getResultSetColumn(java.sql.ResultSet,java.lang.String)>(r55, "search_path")
