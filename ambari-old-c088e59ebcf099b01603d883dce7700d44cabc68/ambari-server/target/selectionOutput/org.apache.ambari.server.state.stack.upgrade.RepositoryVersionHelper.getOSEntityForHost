org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r12 = null
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r12 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if null != r12
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if null != r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r7 = new org.apache.ambari.server.controller.spi.SystemException
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if null != r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : return r12
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r7 = new org.apache.ambari.server.controller.spi.SystemException >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r8 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r8[0] = r3
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r8[0] = r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Operating System matching %s could not be found", $r8)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Operating System matching %s could not be found", $r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : specialinvoke $r7.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String)>($r9)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : specialinvoke $r7.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : throw $r7
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r5 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r5 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r11)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r12 = r5
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : r12 = r5 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getOSEntityForHost : if null != r12
