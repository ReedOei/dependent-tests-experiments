org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r16 = <org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Create and Configure...")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Create and Configure...") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if null == r2
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if null == r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if null == r2 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r17 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r17 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r18 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r17, "{}", "", "Unable to change configuration values without command parameters")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r18 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r17, "{}", "", "Unable to change configuration values without command parameters") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : return $r18
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r17 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("clusterName")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("clusterName") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r3 = (java.lang.String) $r19
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r3 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r4 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r4 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.UpgradeContext getUpgradeContext(org.apache.ambari.server.state.Cluster)>(r4)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.UpgradeContext getUpgradeContext(org.apache.ambari.server.state.Cluster)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r6 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r6 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r21 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction DOWNGRADE>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r21 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction DOWNGRADE> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r6 != $r21
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r6 != $r21 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r50 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r6 != $r21 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("configure-task-config-type")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("configure-task-config-type") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r7 = (java.lang.String) $r22
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r7 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r52 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r52 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r52)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z1 == 0
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r49 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("configure-task-associated-service")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r8 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getSourceRepositoryVersion(java.lang.String)>(r52)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r8 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getSourceRepositoryVersion(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r9 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion(java.lang.String)>(r52)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r9 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r10 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r10 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r11 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r11 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z2 = virtualinvoke r10.<org.apache.ambari.server.state.StackId: boolean equals(java.lang.Object)>(r11)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z2 = virtualinvoke r10.<org.apache.ambari.server.state.StackId: boolean equals(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z2 != 0
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r47 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r12 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r12 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r23 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r23 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r13 = (org.apache.ambari.server.state.DesiredConfig) $r23
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r13 = (org.apache.ambari.server.state.DesiredConfig) $r23 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r13 != null
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r26 = <org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r24 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureAction: org.apache.ambari.server.agent.CommandReport execute(java.util.concurrent.ConcurrentMap)>(r1)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r24 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureAction: org.apache.ambari.server.agent.CommandReport execute(java.util.concurrent.ConcurrentMap)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : return $r24
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r26 = <org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r25[0] = r7
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r25[0] = r7 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find desired config type with name %s. Create it with default values.", $r25)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find desired config type with name %s. Create it with default values.", $r25) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r27)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r14 = virtualinvoke $r28.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getDefaultProperties(org.apache.ambari.server.state.StackId,java.lang.String)>(r11, r52)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r14 = virtualinvoke $r28.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getDefaultProperties(org.apache.ambari.server.state.StackId,java.lang.String)>(r11, r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z3 = interfaceinvoke r14.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z3 = interfaceinvoke r14.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z3 != 0
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z3 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42 = newarray (java.lang.Object)[3]
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z3 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r29 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r29 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r54 = (java.util.Map) $r29
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r54 = (java.util.Map) $r29 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r30 = interfaceinvoke r54.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r30 = interfaceinvoke r54.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r15 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r15 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z4 == 0
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r40 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31 = newarray (java.lang.Object)[3]
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r32 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r32 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[0] = $r32
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[0] = $r32 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r33 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getPreposition()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r33 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getPreposition()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[1] = $r33
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[1] = $r33 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r35 = virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r35 = virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[2] = $r35
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r31[2] = $r35 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s %s", $r31)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s %s", $r31) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.controller.AmbariManagementController m_controller>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.controller.AmbariManagementController m_controller> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r36 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.controller.AmbariManagementController m_controller>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r36 = r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.controller.AmbariManagementController m_controller> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r39 = interfaceinvoke $r36.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r39 = interfaceinvoke $r36.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : virtualinvoke $r37.<org.apache.ambari.server.state.ConfigHelper: void createConfigType(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.util.Map,java.lang.String,java.lang.String)>(r4, r11, $r38, r7, r54, $r39, r56)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : virtualinvoke $r37.<org.apache.ambari.server.state.ConfigHelper: void createConfigType(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.util.Map,java.lang.String,java.lang.String)>(r4, r11, $r38, r7, r54, $r39, r56) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r24 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureAction: org.apache.ambari.server.agent.CommandReport execute(java.util.concurrent.ConcurrentMap)>(r1)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r40 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r55 = (java.util.Map$Entry) $r40
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r55 = (java.util.Map$Entry) $r40 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r41 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r41 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $r41 != null
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $r41 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke r15.<java.util.Iterator: void remove()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : if $r41 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke r15.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : goto [?= $z4 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[0] = r52
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[0] = r52 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r43 = virtualinvoke r11.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r43 = virtualinvoke r11.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[1] = $r43
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[1] = $r43 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[2] = r7
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r42[2] = r7 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r53 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s in %s does not contain configuration type %s", $r42)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r53 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s in %s does not contain configuration type %s", $r42) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r44 = <org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r44 = <org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>(r53)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>(r53) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r45 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r45 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r46 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r45, "{}", "", r53)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r46 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r45, "{}", "", r53) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : return $r46
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r47 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r48 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r47, "{}", "", "Unable to change configuration values across stacks. Use regular config task type instead.")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r48 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r47, "{}", "", "Unable to change configuration values across stacks. Use regular config task type instead.") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : return $r48
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r49 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("configure-task-associated-service") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r52 = (java.lang.String) $r49
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r52 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : r8 = virtualinvoke r5.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getSourceRepositoryVersion(java.lang.String)>(r52)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r50 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r51 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r50, "{}", "", "Skip changing configuration values for downgrade")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : $r51 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r50, "{}", "", "Skip changing configuration values for downgrade") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureAction.execute : return $r51
