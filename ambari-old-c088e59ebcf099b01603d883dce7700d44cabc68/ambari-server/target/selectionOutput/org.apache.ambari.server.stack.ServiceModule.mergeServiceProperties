org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z0 != 0
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r6 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : return
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r6 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r2 = virtualinvoke $r6.<org.apache.ambari.server.state.ServiceInfo: java.util.List getServicePropertyList()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r2 = virtualinvoke $r6.<org.apache.ambari.server.state.ServiceInfo: java.util.List getServicePropertyList()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r7 = new org.apache.ambari.server.stack.ServiceModule$1
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r7 = new org.apache.ambari.server.stack.ServiceModule$1 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : specialinvoke $r7.<org.apache.ambari.server.stack.ServiceModule$1: void <init>(org.apache.ambari.server.stack.ServiceModule)>(r0)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : specialinvoke $r7.<org.apache.ambari.server.stack.ServiceModule$1: void <init>(org.apache.ambari.server.stack.ServiceModule)>(r0) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r8 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function)>(r2, $r7)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r8 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function)>(r2, $r7) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r4 = staticinvoke <com.google.common.collect.Sets: java.util.TreeSet newTreeSet(java.lang.Iterable)>($r8)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r4 = staticinvoke <com.google.common.collect.Sets: java.util.TreeSet newTreeSet(java.lang.Iterable)>($r8) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r15 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r15 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z1 == 0
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r9 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r9 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r2)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r2) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r3)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r3) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r16 = virtualinvoke $r11.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r16 = virtualinvoke $r11.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r12 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r12 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : virtualinvoke $r12.<org.apache.ambari.server.state.ServiceInfo: void setServicePropertyList(java.util.List)>(r16)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : virtualinvoke $r12.<org.apache.ambari.server.state.ServiceInfo: void setServicePropertyList(java.util.List)>(r16) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : specialinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void validateServiceInfo()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : specialinvoke r0.<org.apache.ambari.server.stack.ServiceModule: void validateServiceInfo()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : return
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r13 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r5 = (org.apache.ambari.server.state.ServicePropertyInfo) $r13
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : r5 = (org.apache.ambari.server.state.ServicePropertyInfo) $r13 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r14 = virtualinvoke r5.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $r14 = virtualinvoke r5.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r14)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z2 != 0
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : goto [?= $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : goto [?= $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeServiceProperties : goto [?= $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
