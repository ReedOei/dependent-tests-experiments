org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r6 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r1 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r1 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z0 == 0
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r8 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r8 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : return $r9
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r2 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r10
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r2 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r10 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r3 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCommandDetail()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r3 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCommandDetail()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r3 == null
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r3 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("null")
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r3 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map physicalTasks>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map physicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l6 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l6 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r4 = (java.lang.Long) $r27
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r4 = (java.lang.Long) $r27 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r4 == null
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r4 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r11 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r4 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r11 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l0 = virtualinvoke r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l0 = virtualinvoke r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r5 = virtualinvoke $r12.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand getPhysicalTask(long)>($l0)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : r5 = virtualinvoke $r12.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand getPhysicalTask(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r5 == null
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r5 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r13 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.HostRoleStatus getStatus()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if r5 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r13 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.HostRoleStatus getStatus()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r13)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r13) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r14 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCommandDetail()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r14 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCommandDetail()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r14)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r15 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCustomCommandName()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r15 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getCustomCommandName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCustomCommandName(java.lang.String)>($r15)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCustomCommandName(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l1 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStartTime()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l1 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStartTime()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStartTime(long)>($l1)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStartTime(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l2 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getOriginalStartTime()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l2 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getOriginalStartTime()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setOriginalStartTime(long)>($l2)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setOriginalStartTime(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l3 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getEndTime()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l3 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getEndTime()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setEndTime(long)>($l3)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setEndTime(long)>($l3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r16 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getErrorLog()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r16 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getErrorLog()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setErrorLog(java.lang.String)>($r16)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setErrorLog(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $i4 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: int getExitCode()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $i4 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: int getExitCode()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExitCode(int)>($i4)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExitCode(int)>($i4) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r17 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r17 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>($r17)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>($r17) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l5 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getLastAttemptTime()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $l5 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getLastAttemptTime()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setLastAttemptTime(long)>($l5)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setLastAttemptTime(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r18 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getOutputLog()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r18 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getOutputLog()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setOutputLog(java.lang.String)>($r18)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setOutputLog(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r19 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStderr()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r19 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStderr(java.lang.String)>($r19)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStderr(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r20 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStdout()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r20 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStdout(java.lang.String)>($r20)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStdout(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r21 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStructuredOut()>()
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r21 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getStructuredOut()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStructuredOut(java.lang.String)>($r21)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStructuredOut(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("null") >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z1 == 0
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r22 = r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String hostname>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map physicalTasks>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r22 = r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String hostname> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $r22 == null
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $r22 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String hostname>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : if $r22 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map physicalTasks>
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String hostname> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r24 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("null", $r23)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r24 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("null", $r23) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r24)
org.apache.ambari.server.topology.HostRequest.getLogicalTasks : virtualinvoke r2.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasks : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map physicalTasks>
