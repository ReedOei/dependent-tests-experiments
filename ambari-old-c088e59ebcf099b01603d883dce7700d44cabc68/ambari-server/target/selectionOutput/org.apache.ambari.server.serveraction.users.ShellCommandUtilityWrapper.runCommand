org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : $r3 = <org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Running command: {}, variables: {}", r1, r2)
org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Running command: {}, variables: {}", r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map)>(r1, r2)
org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.users.ShellCommandUtilityWrapper.runCommand : return $r4
