org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.lang.String getResourceTypeFromResources(java.util.Set)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r28 != null
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r28 != null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r28 != null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.util.Set getClustersResourceId(java.util.Set,java.lang.String)>(r1, r2)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.util.Set getClustersResourceId(java.util.Set,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r7 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r7 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r27 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 1
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r5 = (java.lang.Long) $r8
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r5 = (java.lang.Long) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r6 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType valueOf(java.lang.String)>(r28)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r6 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType valueOf(java.lang.String)>(r28) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r9 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r9 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i1 = virtualinvoke r6.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i1 = virtualinvoke r6.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i2 = $r9[$i1]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i2 = $r9[$i1] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1:
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r11 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r19 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r15 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r26 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r26 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>("Unsuported Resource Type for Metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>("Unsuported Resource Type for Metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r15 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r16 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r14)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r16 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r15, r5, $r16)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r15, r5, $r16) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r17 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r17 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r17.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r17.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r17
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r19 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r20 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r18)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r20 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r19, r5, $r20)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r19, r5, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r21 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r21 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r21.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r21.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r21
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r23 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r24 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r22)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r24 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r23, r5, $r24)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r23, r5, $r24) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r25 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r25 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r25.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Host metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r25.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Host metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r25
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r11 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r12 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r10)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r12 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r11, r5, $r12)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r11, r5, $r12) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r13 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r13 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r13.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view cluster metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r13.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view cluster metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r13
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r27 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Retrieved cluster\'s Resource Id = {}, Resource Type = {}", r3, r28)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Retrieved cluster\'s Resource Id = {}, Resource Type = {}", r3, r28) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
