org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r6 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z0 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>("AMBARI_METRICS")
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z0 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z0 == 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if r2 == null
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : return r2
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : return "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter"
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z1 == 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : return "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter"
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter")
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z2 != 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : return r2
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8[0] = r2
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8[1] = "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter"
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r8[1] = "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter" >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s,%s", $r8)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s,%s", $r8) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$5.updateForClusterCreate : return $r9
