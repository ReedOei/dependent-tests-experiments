org.apache.ambari.server.configuration.Configuration.getDatabaseType : r1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUrl()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r2 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r2 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r4 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r4 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z1 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r6 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r6 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z2 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z2 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z2 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z2 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z2 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType DERBY>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType DERBY> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z3 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r9)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z3 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z3 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z3 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType DERBY>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z3 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r10 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_SERVER>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r10 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_SERVER> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z4 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r11)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z4 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r11) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z4 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z4 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_SERVER>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z4 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r12 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_ANYWHERE>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r12 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_ANYWHERE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r13 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r13 = virtualinvoke $r12.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z5 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r13)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z5 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z5 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z5 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_ANYWHERE>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z5 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r14 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType H2>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r14 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType H2> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r15 = virtualinvoke $r14.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r15 = virtualinvoke $r14.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z6 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r15)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $z6 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z6 == 0
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z6 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType H2>
org.apache.ambari.server.configuration.Configuration.getDatabaseType : if $z6 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r16 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r16 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The database type could be not determined from the JDBC URL ")
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The database type could be not determined from the JDBC URL ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getDatabaseType : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.configuration.Configuration.getDatabaseType : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : throw $r16
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType H2> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_ANYWHERE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType SQL_SERVER> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType DERBY> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
org.apache.ambari.server.configuration.Configuration.getDatabaseType : r21 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21]
org.apache.ambari.server.configuration.Configuration.getDatabaseType : goto [?= return r21] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabaseType : return r21
