org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r10 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r10 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r12 = virtualinvoke $r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r12 = virtualinvoke $r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r12)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r16 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r16)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r16) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r20 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r6 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Service installService(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r3, "ZOOKEEPER", $r20)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r6 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Service installService(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r3, "ZOOKEEPER", $r20) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponent addServiceComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service,java.lang.String)>(r3, r6, "ZOOKEEPER_SERVER")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponent addServiceComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service,java.lang.String)>(r3, r6, "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponent addServiceComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service,java.lang.String)>(r3, r6, "ZOOKEEPER_CLIENT")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponent addServiceComponent(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service,java.lang.String)>(r3, r6, "ZOOKEEPER_CLIENT") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponentHost createNewServiceComponentHost(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r3, "ZOOKEEPER", "ZOOKEEPER_SERVER", "h1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponentHost createNewServiceComponentHost(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r3, "ZOOKEEPER", "ZOOKEEPER_SERVER", "h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponentHost createNewServiceComponentHost(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r3, "ZOOKEEPER", "ZOOKEEPER_CLIENT", "h1")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ServiceComponentHost createNewServiceComponentHost(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r3, "ZOOKEEPER", "ZOOKEEPER_CLIENT", "h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r25 = new org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest$20
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r25 = new org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest$20 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke $r25.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest$20: void <init>(org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest)>(r0)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : specialinvoke $r25.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest$20: void <init>(org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity repoVersion2110> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r8 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,java.lang.String,java.lang.String,java.util.Map)>(r3, $r26, "zoo.cfg", "version1", $r25)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r8 = specialinvoke r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,java.lang.String,java.lang.String,java.util.Map)>(r3, $r26, "zoo.cfg", "version1", $r25) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r27 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r27 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set)>("user", $r27)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set)>("user", $r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r9 = virtualinvoke $r29.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPropertyValueFromStackDefinitions(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "zoo.cfg", "tickTime")
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : r9 = virtualinvoke $r29.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getPropertyValueFromStackDefinitions(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "zoo.cfg", "tickTime") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ConfigureActionTest.makeUpgradeCluster : return
