org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z0 = interfaceinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z0 = interfaceinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.persistent", $r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.persistent", $r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r7 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r7 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z1 = interfaceinvoke $r8.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $z1 = interfaceinvoke $r8.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>($r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.temporary", $r9)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("storage.temporary", $r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getCredentialStoreServiceProperties : return $r2
