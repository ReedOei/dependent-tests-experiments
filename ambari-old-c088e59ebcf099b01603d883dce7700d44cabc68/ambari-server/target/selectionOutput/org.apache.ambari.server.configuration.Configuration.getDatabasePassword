org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.orm.PersistenceType getPersistenceType()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r3 = <org.apache.ambari.server.orm.PersistenceType: org.apache.ambari.server.orm.PersistenceType IN_MEMORY>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r3 = <org.apache.ambari.server.orm.PersistenceType: org.apache.ambari.server.orm.PersistenceType IN_MEMORY> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $r2 != $r3
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $r2 != $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : return ""
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $r2 != $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_JDBC_USER_PASSWD>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_JDBC_USER_PASSWD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r6 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r6 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r1 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r6)
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r1 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r13 = null
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r13 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : z1 = 0
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : z1 = 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $z0 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialProvider: boolean isAliasString(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $z0 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialProvider: boolean isAliasString(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 == null
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : return r13
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 != null
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if z1 == 0
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_JDBC_USER_PASSWD>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_JDBC_USER_PASSWD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r9 = (java.lang.String) $r8
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r10 = specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromFile(java.lang.String,java.lang.String)>(r1, $r9)
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r10 = specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromFile(java.lang.String,java.lang.String)>(r1, $r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : return $r10
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if z1 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r11 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if z1 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_JDBC_USER_PASSWD>
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r11 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>("Can\'t read db password from keystore. Please, check master key was set correctly.")
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>("Can\'t read db password from keystore. Please, check master key was set correctly.") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r12 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : $r12 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t read db password from keystore. Please, check master key was set correctly.")
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t read db password from keystore. Please, check master key was set correctly.") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : throw $r12
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : z1 = 1
org.apache.ambari.server.configuration.Configuration.getDatabasePassword : z1 = 1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getDatabasePassword : if r13 == null
