org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r7 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r8 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r8 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r4 = (org.apache.ambari.server.orm.dao.HostDAO) $r9
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r4 = (org.apache.ambari.server.orm.dao.HostDAO) $r9 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r10 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r10 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r11 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r11 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r12 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r12 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : specialinvoke $r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r11, r1, $r12)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : specialinvoke $r10.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r11, r1, $r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r13 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : virtualinvoke $r13.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>($r10)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : virtualinvoke $r13.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r6 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findHostVersionByClusterAndRepository(long,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($l0, r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : r6 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findHostVersionByClusterAndRepository(long,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($l0, r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $i1 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $l2 = (long) $i1
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r15 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r15 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r17 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r16
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r17 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r16 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r15, $r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.createHostVersions : return
