org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = -1
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = -1 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("b")
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("gb")
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mb")
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bytes")
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : lookupswitch($i0) {     case 98: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : return "m"
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : return "g"
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : return ""
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0: >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r2 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported stack unit: ")
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported stack unit: ") >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : throw $r2
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bytes") >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z0 == 0
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 3
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 3 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mb") >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z1 == 0
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 0
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)]
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("gb") >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z2 == 0
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 1
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)]
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("b") >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z3 == 0
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 2
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : b1 = 2 >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)]
org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.UnitUpdater$PropertyUnit.toJvmUnit : tableswitch(b1) {     case 0:
