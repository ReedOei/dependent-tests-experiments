org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : i0 = 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r4 = r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.util.concurrent.ConcurrentMap hostComponents>
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r4 = r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.util.concurrent.ConcurrentMap hostComponents> >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r5 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r5 = interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $z0 == 0
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : return i0
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : r3 = (org.apache.ambari.server.state.ServiceComponentHost) $r6
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : r3 = (org.apache.ambari.server.state.ServiceComponentHost) $r6 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $r7 != r1
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $r7 != r1 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : i0 = i0 + 1
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : if $r7 != r1 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.getSCHCountByState : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
