org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r6 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r3 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z2 = 1
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z2 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z2 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : return
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r33 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r33 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z3 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r14 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if i0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r9 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r9 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configuration types to be resolved before Blueprint deployment can continue")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configuration types to be resolved before Blueprint deployment can continue") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r31 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r32 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>("sleep interrupted")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>("sleep interrupted") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if z2 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r31 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r14 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("All required configuration types are in the TOPOLOGY_RESOLVED state.  Blueprint deployment can now continue.")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("All required configuration types are in the TOPOLOGY_RESOLVED state.  Blueprint deployment can now continue.") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z2 = 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : z2 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r15 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r4 = (java.lang.String) $r15
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r4 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r16 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r16 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r5 = (org.apache.ambari.server.state.DesiredConfig) $r17
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : r5 = (org.apache.ambari.server.state.DesiredConfig) $r17 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if r5 != null
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if r5 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("core-site")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if r5 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r18 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r18 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("TOPOLOGY_RESOLVED")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z0 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("TOPOLOGY_RESOLVED") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z0 != 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r26 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r20 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r20 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is resolved in the cluster config.")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is resolved in the cluster config.") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r24)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r26 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r25 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config type ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not resolved yet, Blueprint deployment will wait until configuration update is completed")
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not resolved yet, Blueprint deployment will wait until configuration update is completed") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r30)
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = i0 + 1
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("core-site") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $r18 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : goto [?= $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.waitForConfigurationResolution : $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
