org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r2 = (org.apache.ambari.server.state.Cluster) $r9
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r2 = (org.apache.ambari.server.state.Cluster) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r10 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r10 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r13 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r13 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r16 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r16 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r17 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r17 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r19 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r19 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r22 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r22 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r24 = (java.lang.String) $r23
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r25 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r24)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r25 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r28 = new org.apache.ambari.server.orm.entities.UpgradeEntity
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r28 = new org.apache.ambari.server.orm.entities.UpgradeEntity >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r28.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r28.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r29 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r29 = <org.apache.ambari.server.state.stack.upgrade.Direction: org.apache.ambari.server.state.stack.upgrade.Direction UPGRADE> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setDirection(org.apache.ambari.server.state.stack.upgrade.Direction)>($r29)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setDirection(org.apache.ambari.server.state.stack.upgrade.Direction)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r30 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r30 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $l0 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $l0 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r37 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r39 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r39 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeInProgress()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r44 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r44 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[0] = $r44
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[0] = $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r45 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r45 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[1] = $r45
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[1] = $r45 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[2] = r2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r43[2] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r43)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r46 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r46 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider createProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r46)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r4 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider createProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r47 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r47 = r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r47.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r47.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r48 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r48 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r48.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r48.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r49 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r49 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r49.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : specialinvoke $r49.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r50 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r50 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, "Cluster100")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r52 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r52 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, "2.2.0.1-885")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, "2.2.0.1-885") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r54 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r54 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, "HDP")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, "HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r56 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r56 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: java.lang.String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, "2.1.1")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r56, "2.1.1") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r48.<java.util.Set: boolean add(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r48.<java.util.Set: boolean add(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r48, null)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r48, null) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r7)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r61 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r62 = virtualinvoke $r61.<java.lang.IllegalArgumentException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Cluster c1 upgrade is in progress.  Cannot install packages.", $r62)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Cluster c1 upgrade is in progress.  Cannot install packages.", $r62) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r60 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r60 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r60[0] = r2
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r60[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r60)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r61 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : goto [?= $r60 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expecting the create to fail due to an already installed version") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r61 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : goto [?= $r60 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProviderTest.testCreateResourcesExistingUpgrade : $r60 = newarray (java.lang.Object)[1]
