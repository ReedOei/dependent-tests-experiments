org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: org.apache.ambari.server.orm.entities.TopologyRequestEntity getTopologyRequestEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r3 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.util.Collection getTopologyHostGroupEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r3 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.util.Collection getTopologyHostGroupEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r4 = specialinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map getReservedHostNamesByHostGroupName(java.util.Collection)>(r3)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r4 = specialinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map getReservedHostNamesByHostGroupName(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r8 = new java.util.HashMap
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r8.<java.util.HashMap: void <init>(java.util.Map)>(r4)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r8.<java.util.HashMap: void <init>(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r31 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r31 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r28 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r10 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r10 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : z8 = interfaceinvoke $r10.<org.apache.ambari.server.topology.Blueprint: boolean shouldSkipFailure()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : z8 = interfaceinvoke $r10.<org.apache.ambari.server.topology.Blueprint: boolean shouldSkipFailure()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r37 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r37 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r12 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : return
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r12 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r38 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r12
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r38 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r12 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r39 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.Long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r39 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r13 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r13 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r13
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r14 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : throw $r30
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r14 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicLong: long get()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r14 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r39.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r39.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r39.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= r42 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= r42 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r42 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r42 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r15 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r15 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r16 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r16 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r43 = (java.util.Set) $r16
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r43 = (java.util.Set) $r16 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r17 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r43, null)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r17 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r43, null) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r44 = (java.lang.String) $r17
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r44 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r18 = new org.apache.ambari.server.topology.HostRequest
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r18 = new org.apache.ambari.server.topology.HostRequest >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l3 = virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l3 = virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l4 = virtualinvoke r39.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l4 = virtualinvoke r39.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r18.<org.apache.ambari.server.topology.HostRequest: void <init>(long,long,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyHostRequestEntity,boolean)>($l3, $l4, r44, r1, r38, z8)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r18.<org.apache.ambari.server.topology.HostRequest: void <init>(long,long,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyHostRequestEntity,boolean)>($l3, $l4, r44, r1, r38, z8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r19 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r19 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r19.<java.util.Collection: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z3 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: boolean isCompleted()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z3 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: boolean isCompleted()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z3 != 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r44 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r44 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r23 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r44 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r20 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r20 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r20.<java.util.Collection: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r21 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r21 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l5 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l5 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.createHostRequests: created new outstanding host request ID = {}", $r22)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.createHostRequests: created new outstanding host request ID = {}", $r22) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r23 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, $r18)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r44, $r18) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r43.<java.util.Set: boolean remove(java.lang.Object)>(r44)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r43.<java.util.Set: boolean remove(java.lang.Object)>(r44) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r25 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r25 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l6 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l6 = virtualinvoke $r18.<org.apache.ambari.server.topology.HostRequest: long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("LogicalRequest.createHostRequests: created new request for a reserved request ID = {} for host name = {}", $r26, r44)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("LogicalRequest.createHostRequests: created new request for a reserved request ID = {} for host name = {}", $r26, r44) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l7 = virtualinvoke r39.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l7 = virtualinvoke r39.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l8 = $l7 + 1L
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l7 = virtualinvoke r39.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l8 = $l7 + 1L >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l8)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l8 = $l7 + 1L >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor $r13
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r30 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r28 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r32 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r28
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r32 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r28 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r33 = virtualinvoke r32.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r33 = virtualinvoke r32.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r34 = virtualinvoke r33.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r34 = virtualinvoke r33.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r35 = virtualinvoke r32.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r35 = virtualinvoke r32.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z6 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r34)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z6 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r36 = (java.util.Set) $r29
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r36 = (java.util.Set) $r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r36 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r36 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r36.<java.util.Set: boolean remove(java.lang.Object)>(r35)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r36 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r36.<java.util.Set: boolean remove(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
