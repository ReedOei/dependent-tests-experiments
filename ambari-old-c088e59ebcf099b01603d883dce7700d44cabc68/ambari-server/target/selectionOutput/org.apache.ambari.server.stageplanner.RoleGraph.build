org.apache.ambari.server.stageplanner.RoleGraph.build : $r2 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r2.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r2.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r2
org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r2 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r5 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r5 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r4 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r4 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r5 != $r4
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r5 != $r4 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r6 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r5 != $r4 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r6 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r6
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r6 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r7 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r6 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r7 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r42 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r42 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r43 = (java.lang.String) $r9
org.apache.ambari.server.stageplanner.RoleGraph.build : r43 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r44 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r44 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r45 = (java.lang.String) $r12
org.apache.ambari.server.stageplanner.RoleGraph.build : r45 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = virtualinvoke r43.<java.lang.String: boolean equals(java.lang.Object)>(r45)
org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = virtualinvoke r43.<java.lang.String: boolean equals(java.lang.Object)>(r45) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 != 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r43)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r43) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r46 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r14
org.apache.ambari.server.stageplanner.RoleGraph.build : r46 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r14 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r45)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r45) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r47 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r16
org.apache.ambari.server.stageplanner.RoleGraph.build : r47 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r16 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r17.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46, r47)
org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r17.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46, r47) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r46.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r47)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r47.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r47.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r46) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r46.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r47) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r36 = (java.lang.String) $r18
org.apache.ambari.server.stageplanner.RoleGraph.build : r36 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = (java.util.Map) $r19
org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = (java.util.Map) $r19 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r37 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r37 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r38 = (java.lang.String) $r22
org.apache.ambari.server.stageplanner.RoleGraph.build : r38 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r24 = (java.util.Map) $r23
org.apache.ambari.server.stageplanner.RoleGraph.build : $r24 = (java.util.Map) $r23 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r39 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r25
org.apache.ambari.server.stageplanner.RoleGraph.build : r39 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r25 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r26 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r26 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r27 != null
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r27 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = new org.apache.ambari.server.stageplanner.RoleGraphNode
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r27 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r41 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r29
org.apache.ambari.server.stageplanner.RoleGraph.build : r41 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r29 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r41.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r36)
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r41.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r36) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = new org.apache.ambari.server.stageplanner.RoleGraphNode >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = virtualinvoke r39.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = virtualinvoke r39.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r39)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r39) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r30.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r31, $r32)
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r30.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r31, $r32) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r33 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r33 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r38, $r30)
org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r38, $r30) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
