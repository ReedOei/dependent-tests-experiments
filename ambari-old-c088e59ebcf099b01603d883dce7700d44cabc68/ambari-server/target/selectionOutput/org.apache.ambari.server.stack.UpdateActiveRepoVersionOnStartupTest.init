org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r16
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r16 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RepositoryVersionDAO;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r17
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r18 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r17 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r18
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> = $r18 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r19 = new org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = class "Lorg/apache/ambari/server/state/stack/upgrade/RepositoryVersionHelper;"
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r20 = class "Lorg/apache/ambari/server/state/stack/upgrade/RepositoryVersionHelper;" >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("gson")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r3 = virtualinvoke $r20.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("gson") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = new com.google.gson.Gson
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r21 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r21.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r21.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r19, $r21)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r19, $r21) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r4 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r22 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManager;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r23 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/StackManager;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r23
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r5 = (org.apache.ambari.server.stack.StackManager) $r23 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.stack.StackManager getStackManager()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r24)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r25 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r25.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r25.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = new org.apache.ambari.server.orm.entities.ClusterEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r27 = new org.apache.ambari.server.orm.entities.ClusterEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r28 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String CLUSTER_NAME> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r28)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterName(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r30 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r27)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r31 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r31)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r30.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = new org.apache.ambari.server.orm.entities.StackEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r33 = new org.apache.ambari.server.orm.entities.StackEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r33.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setDesiredStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r34 = new org.apache.ambari.server.orm.entities.RepositoryVersionEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setStack(org.apache.ambari.server.orm.entities.StackEntity)>($r33) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r35 = staticinvoke <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String resourceAsString(java.lang.String)>("org/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartupTest_initialRepos.json") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>($r35)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r34.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setOperatingSystems(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r36 = new org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r36 = new org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r36.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r36.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r36.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: void setDesiredRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r34)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r36.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: void setDesiredRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r34) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r37 = new org.apache.ambari.server.orm.entities.ClusterServiceEntity
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r37 = new org.apache.ambari.server.orm.entities.ClusterServiceEntity >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r37.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r37.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r37.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: void setServiceDesiredStateEntity(org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity)>($r36)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r37.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: void setServiceDesiredStateEntity(org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity)>($r36) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r38 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r37)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r38 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterServiceEntities(java.util.Collection)>($r38)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r27.<org.apache.ambari.server.orm.entities.ClusterEntity: void setClusterServiceEntities(java.util.Collection)>($r38) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r39 = new org.apache.ambari.server.state.StackInfo
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r39 = new org.apache.ambari.server.state.StackInfo >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r39.<org.apache.ambari.server.state.StackInfo: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r39.<org.apache.ambari.server.state.StackInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: void setName(java.lang.String)>("HDP")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: void setName(java.lang.String)>("HDP") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: void setVersion(java.lang.String)>("2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: void setVersion(java.lang.String)>("2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r40 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r40 = new org.apache.ambari.server.state.RepositoryInfo >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r41 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r41 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r41)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r40.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r42 = virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r42 = virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r40)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43 = virtualinvoke r5.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>("HDP", "2.3")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r43 = virtualinvoke r5.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>("HDP", "2.3") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r44 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r43)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r44 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r44.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r39)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r44.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r46 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/google/inject/Provider;")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r46 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lcom/google/inject/Provider;") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r13 = (com.google.inject.Provider) $r46
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r13 = (com.google.inject.Provider) $r46 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r47 = interfaceinvoke r13.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r47 = interfaceinvoke r13.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r48 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r47)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r48 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r48.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r19)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r48.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r50 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r50 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r50.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1: void <init>(org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest,com.google.inject.Provider,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r0, r13, r4)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r50.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest$1: void <init>(org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest,com.google.inject.Provider,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r0, r13, r4) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51[0] = $r50
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r51[0] = $r50 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r51)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r51) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r55 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r53 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r53 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r54 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r54 = r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDao> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r53.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void <init>(org.apache.ambari.server.orm.dao.ClusterDAO,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r1, $r54, $r19, r4)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r53.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void <init>(org.apache.ambari.server.orm.dao.ClusterDAO,org.apache.ambari.server.orm.dao.RepositoryVersionDAO,org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r1, $r54, $r19, r4) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup activeRepoUpdater> = $r53
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : r0.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup activeRepoUpdater> = $r53 >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : return
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r55 = new org.apache.ambari.server.state.RepositoryInfo >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : specialinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>("http://msft.r") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r56 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID>
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r56 = <org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest: java.lang.String ADD_ON_REPO_ID> >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r56)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R1")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>("MSFT_R1") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6")
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : virtualinvoke $r55.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>("redhat6") >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r57 = virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>()
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r57 = virtualinvoke $r39.<org.apache.ambari.server.state.StackInfo: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r57.<java.util.List: boolean add(java.lang.Object)>($r55)
org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : interfaceinvoke $r57.<java.util.List: boolean add(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartupTest.init : $r53 = new org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup
