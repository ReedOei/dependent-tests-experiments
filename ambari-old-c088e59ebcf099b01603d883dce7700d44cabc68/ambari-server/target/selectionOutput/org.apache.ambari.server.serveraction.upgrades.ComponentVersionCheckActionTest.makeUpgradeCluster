org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r22 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r22.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r22.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r25 = interfaceinvoke $r24.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r25 = interfaceinvoke $r24.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r7 = (org.apache.ambari.server.state.Clusters) $r25
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r7 = (org.apache.ambari.server.state.Clusters) $r25 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r26 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r27 = interfaceinvoke $r26.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r27 = interfaceinvoke $r26.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r8 = (org.apache.ambari.server.orm.dao.StackDAO) $r27
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r8 = (org.apache.ambari.server.orm.dao.StackDAO) $r27 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r29 = interfaceinvoke $r28.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RequestDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r29 = interfaceinvoke $r28.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RequestDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r9 = (org.apache.ambari.server.orm.dao.RequestDAO) $r29
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r9 = (org.apache.ambari.server.orm.dao.RequestDAO) $r29 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r30 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r30 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r31 = interfaceinvoke $r30.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UpgradeDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r31 = interfaceinvoke $r30.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UpgradeDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r10 = (org.apache.ambari.server.orm.dao.UpgradeDAO) $r31
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r10 = (org.apache.ambari.server.orm.dao.UpgradeDAO) $r31 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r11 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r32, $r33)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r11 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r32, $r33) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r34 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r34 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r35 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r35 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r12 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r34, $r35)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r12 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r34, $r35) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r11)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r12)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r14 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r14 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r36 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r36 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r36.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r36.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r14.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r36)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r14.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r36) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r39 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r39 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r39.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r39.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r41 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r41 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{\'repositories\':[{\'Repositories/base_url\':\'http://foo1\',\'Repositories/repo_name\':\'HDP\',\'Repositories/repo_id\':\'")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{\'repositories\':[{\'Repositories/base_url\':\'http://foo1\',\'Repositories/repo_name\':\'HDP\',\'Repositories/repo_id\':\'") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r43 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r43 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}], \'OperatingSystems/os_type\':\'redhat6\'}]")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}], \'OperatingSystems/os_type\':\'redhat6\'}]") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r16 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r16 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r46 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r46 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r47 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r17 = virtualinvoke $r46.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity create(org.apache.ambari.server.orm.entities.StackEntity,java.lang.String,java.lang.String,java.lang.String)>(r12, r4, $r47, r16)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r17 = virtualinvoke $r46.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity create(org.apache.ambari.server.orm.entities.StackEntity,java.lang.String,java.lang.String,java.lang.String)>(r12, r4, $r47, r16) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r3)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r48 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r48 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r49 = interfaceinvoke $r48.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r49 = interfaceinvoke $r48.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/HostDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r18 = (org.apache.ambari.server.orm.dao.HostDAO) $r49
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : r18 = (org.apache.ambari.server.orm.dao.HostDAO) $r49 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r50 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r50 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r51 = virtualinvoke r18.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>("h1")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r51 = virtualinvoke r18.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r51)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r51) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r53 = virtualinvoke $r52.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r53 = virtualinvoke $r52.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r53)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r53) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r54 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r54 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r54)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r50.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r54) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r55 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r55 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r55.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>($r50)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r55.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>($r50) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r56 = new org.apache.ambari.server.orm.entities.RequestEntity
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r56 = new org.apache.ambari.server.orm.entities.RequestEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l1 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l1 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setClusterId(java.lang.Long)>($r57)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setClusterId(java.lang.Long)>($r57) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setRequestId(java.lang.Long)>($r58)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setRequestId(java.lang.Long)>($r58) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setStartTime(java.lang.Long)>($r59)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setStartTime(java.lang.Long)>($r59) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setCreateTime(java.lang.Long)>($r60)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r56.<org.apache.ambari.server.orm.entities.RequestEntity: void setCreateTime(java.lang.Long)>($r60) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke r9.<org.apache.ambari.server.orm.dao.RequestDAO: void create(org.apache.ambari.server.orm.entities.RequestEntity)>($r56)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke r9.<org.apache.ambari.server.orm.dao.RequestDAO: void create(org.apache.ambari.server.orm.entities.RequestEntity)>($r56) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r61 = new org.apache.ambari.server.orm.entities.UpgradeEntity
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r61 = new org.apache.ambari.server.orm.entities.UpgradeEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : specialinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setId(java.lang.Long)>($r62)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setId(java.lang.Long)>($r62) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l4 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $l4 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setClusterId(java.lang.Long)>($r63)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setClusterId(java.lang.Long)>($r63) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRequestEntity(org.apache.ambari.server.orm.entities.RequestEntity)>($r56)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRequestEntity(org.apache.ambari.server.orm.entities.RequestEntity)>($r56) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradePackage(java.lang.String)>("")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradePackage(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r17)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r17) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r64 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType NON_ROLLING>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : $r64 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType NON_ROLLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradeType(org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r64)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke $r61.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradeType(org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r64) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.dao.UpgradeDAO: void create(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r61)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.dao.UpgradeDAO: void create(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r61) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setUpgradeEntity(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r61)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setUpgradeEntity(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r61) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeUpgradeCluster : return
