org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z1 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : z7 = 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z2 = virtualinvoke r2.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z2 = virtualinvoke r2.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z2 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r4 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.util.regex.Pattern PATTERN_KERBEROS_DESCRIPTOR_FILENAME>
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return z0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r4 = <org.apache.ambari.server.stack.KerberosDescriptorTest: java.util.regex.Pattern PATTERN_KERBEROS_DESCRIPTOR_FILENAME> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r5 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r5 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r6 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r6 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z3 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z3 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z3 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r8 = <org.apache.ambari.server.stack.KerberosDescriptorTest: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r8 = <org.apache.ambari.server.stack.KerberosDescriptorTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validating ")
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validating ") >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r12)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r13 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r13 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r14 = virtualinvoke $r13.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r14 = virtualinvoke $r13.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r15 = virtualinvoke $r14.<java.net.URL: java.lang.String toExternalForm()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r15 = virtualinvoke $r14.<java.net.URL: java.lang.String toExternalForm()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r21 = specialinvoke r0.<org.apache.ambari.server.stack.KerberosDescriptorTest: com.fasterxml.jackson.databind.JsonNode getJsonNodeFromUrl(java.lang.String)>($r15)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r21 = specialinvoke r0.<org.apache.ambari.server.stack.KerberosDescriptorTest: com.fasterxml.jackson.databind.JsonNode getJsonNodeFromUrl(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r22 = virtualinvoke r1.<com.networknt.schema.JsonSchema: java.util.Set validate(com.fasterxml.jackson.databind.JsonNode)>(r21)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r22 = virtualinvoke r1.<com.networknt.schema.JsonSchema: java.util.Set validate(com.fasterxml.jackson.databind.JsonNode)>(r21) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r22 == null
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r22 == null >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z4 = interfaceinvoke r22.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r22 == null >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z4 = interfaceinvoke r22.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z4 != 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r23 = interfaceinvoke r22.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r23 = interfaceinvoke r22.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z5 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r16 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r16 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r24 = (com.networknt.schema.ValidationMessage) $r16
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r24 = (com.networknt.schema.ValidationMessage) $r16 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r17 = <org.apache.ambari.server.stack.KerberosDescriptorTest: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r17 = <org.apache.ambari.server.stack.KerberosDescriptorTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r18 = virtualinvoke r24.<com.networknt.schema.ValidationMessage: java.lang.String getMessage()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $r18 = virtualinvoke r24.<com.networknt.schema.ValidationMessage: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String)>($r18)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : z7 = 1 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r19 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r19 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r19 == null
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r19 == null >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i0 = lengthof r19
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if r19 == null >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z0 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z9 = 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z9 = 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return $z9
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z9 = 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z9 = 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z9 = 1 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= return $z9]
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= return $z9] >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : return $z9
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i0 = lengthof r19 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i1 = 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if i1 >= i0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r3 = r19[i1]
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z0 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : r3 = r19[i1] >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z6 = specialinvoke r0.<org.apache.ambari.server.stack.KerberosDescriptorTest: boolean visitFile(com.networknt.schema.JsonSchema,java.io.File,boolean)>(r1, r3, z0)
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z6 = specialinvoke r0.<org.apache.ambari.server.stack.KerberosDescriptorTest: boolean visitFile(com.networknt.schema.JsonSchema,java.io.File,boolean)>(r1, r3, z0) >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z6 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z8 = 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z8 = 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : z7 = $z8
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : z7 = $z8 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i1 = i1 + 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= (branch)]
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if i1 >= i0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z8 = 1
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : if z7 == 0 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z8 = 0
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : $z8 = 1 >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= z7 = $z8]
org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : goto [?= z7 = $z8] >>>>>>>> org.apache.ambari.server.stack.KerberosDescriptorTest.visitFile : z7 = $z8
