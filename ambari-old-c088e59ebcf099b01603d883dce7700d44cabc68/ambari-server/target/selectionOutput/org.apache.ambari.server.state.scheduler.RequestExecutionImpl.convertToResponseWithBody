org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r6 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r1 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.controller.RequestScheduleResponse convertToResponse()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r12 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : throw $r11
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r1 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.controller.RequestScheduleResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleResponse: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r1 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.controller.RequestScheduleResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleResponse: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r2 == null
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleResponse: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r14 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r16 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r16 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : return r1
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r14 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r14 == null
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r14 = virtualinvoke r2.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r14 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r3 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r14 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r16 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if r14 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r3 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r3 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if $z0 == 0
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r16 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.util.concurrent.locks.ReadWriteLock readWriteLock>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r4 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r8
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r4 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r8 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : r4 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r8 >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.lang.String getRequestBody(java.lang.Long)>($r9)
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.lang.String getRequestBody(java.lang.Long)>($r9) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: void setBody(java.lang.String)>($r10)
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: java.lang.String getRequestBody(java.lang.Long)>($r9) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: void setBody(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequest: void setBody(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.convertToResponseWithBody : $r11 := @caughtexception
