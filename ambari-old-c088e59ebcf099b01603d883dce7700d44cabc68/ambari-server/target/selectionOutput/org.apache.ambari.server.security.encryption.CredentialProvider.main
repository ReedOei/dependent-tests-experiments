org.apache.ambari.server.security.encryption.CredentialProvider.main : if r0 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i0 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r0 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r5 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r5 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>("No arguments provided to CredentialProvider")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>("No arguments provided to CredentialProvider") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : return
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i0 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r1 = r0[0]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r5 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r1 = r0[0] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r30 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r30 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r31 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r31 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r6 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r6 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r6.<org.apache.ambari.server.configuration.Configuration: void <init>()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r6.<org.apache.ambari.server.configuration.Configuration: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i1 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i1 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r23 = r0[1]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r7 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r7 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>("No valid arguments provided.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>("No valid arguments provided.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i4 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i4 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 3
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 3 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i4 <= 3 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r34 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r25.<java.lang.Exception: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r9 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r9 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("action => ")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("action => ") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alias => ")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", alias => ") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r14)
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PUT")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PUT") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 == 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r37 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GET")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GET") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 == 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r40 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(0)
org.apache.ambari.server.security.encryption.CredentialProvider.main : r40 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i2 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i2 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 2
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r18 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i2 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z2 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>("Alias and file path are required arguments.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>("Alias and file path are required arguments.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z2 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r40 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r40 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z3 = virtualinvoke r40.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r40 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z3 = virtualinvoke r40.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z3 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r41 = ""
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r45 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r41 = "" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r42 = virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r30)
org.apache.ambari.server.security.encryption.CredentialProvider.main : r41 = "" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r28 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>("Error retrieving password for alias.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>("Error retrieving password for alias.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r27.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r27.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r44) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : throw $r24
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r15 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String)>(r40)
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String)>(r40) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String)>(r40) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String)>(r40) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = $r15
org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = $r15 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = $r15 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = $r15 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = virtualinvoke r41.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = virtualinvoke r41.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = virtualinvoke r41.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r16 = virtualinvoke r41.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>($r16)
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>($r16) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r26 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>($r16) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>($r16) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>($r15)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>($r15) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r26.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r44)
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r26.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r24 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <org.apache.ambari.server.utils.Closeables: void closeSilently(java.io.Closeable)>(r44) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : r42 = virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r30) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r42 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r42 = virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r30) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r42 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new java.lang.String
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r42 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r44 = null]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r44 = null] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r44 = null
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<java.lang.String: void <init>(char[])>(r42)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r17 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<java.lang.String: void <init>(char[])>(r42) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r41 = $r17
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r17.<java.lang.String: void <init>(char[])>(r42) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r27 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r41 = $r17 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= r44 = null]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r18 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z4 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z4 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r40 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r40 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r37 = null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i3 = lengthof r0
org.apache.ambari.server.security.encryption.CredentialProvider.main : $i3 = lengthof r0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r19 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $i3 <= 2 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z5 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r39 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r39 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String)>("Alias and password are required arguments.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String)>("Alias and password are required arguments.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1)
org.apache.ambari.server.security.encryption.CredentialProvider.main : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= staticinvoke <java.lang.System: void exit(int)>(0)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z5 = virtualinvoke r30.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r37 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r39 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r37 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z6 = virtualinvoke r37.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : if r37 == null >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r39 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z6 = virtualinvoke r37.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r30, r37)
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r39 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r29 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke $r29.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r30, r37) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : virtualinvoke r32.<org.apache.ambari.server.security.encryption.CredentialProvider: void addAliasToCredentialStore(java.lang.String,java.lang.String)>(r30, r37) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r29 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= (branch)]
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r19 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z7 = virtualinvoke $r19.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z7 = virtualinvoke $r19.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r37 = r0[2]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : r37 = r0[2] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if r30 == null
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r34 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z11 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r34 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z11 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z11 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r33.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r31, $r34, $z11, $r35)
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r35 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r33.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r31, $r34, $z11, $r35) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = $r33
org.apache.ambari.server.security.encryption.CredentialProvider.main : specialinvoke $r33.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(r31, $r34, $z11, $r35) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r25 := @caughtexception
org.apache.ambari.server.security.encryption.CredentialProvider.main : r32 = $r33 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $r9 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $r9 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r9 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r20 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z8 = virtualinvoke $r20.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z8 = virtualinvoke $r20.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r21 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r21 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z9 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("None")
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z9 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("None") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r31 = r0[3]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : r31 = r0[3] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r22 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r22 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("Master key provided as an argument.")
org.apache.ambari.server.security.encryption.CredentialProvider.main : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("Master key provided as an argument.") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r33 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.security.encryption.CredentialProvider.main : $r23 = r0[1] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $z10 = virtualinvoke $r23.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.CredentialProvider.main : $z10 = virtualinvoke $r23.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : r30 = r0[1]
org.apache.ambari.server.security.encryption.CredentialProvider.main : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $r7 = <org.apache.ambari.server.security.encryption.CredentialProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.CredentialProvider.main : r30 = r0[1] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $i4 = lengthof r0]
org.apache.ambari.server.security.encryption.CredentialProvider.main : goto [?= $i4 = lengthof r0] >>>>>>>> org.apache.ambari.server.security.encryption.CredentialProvider.main : $i4 = lengthof r0
