org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r2 = virtualinvoke r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap getContent()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13 = newarray (java.lang.String)[5]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13 = newarray (java.lang.String)[5] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[0] = "general_deps"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[0] = "general_deps" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[1] = "optional_glusterfs"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[1] = "optional_glusterfs" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[2] = "optional_no_glusterfs"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[2] = "optional_no_glusterfs" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[3] = "namenode_optional_ha"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[3] = "namenode_optional_ha" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[4] = "resourcemanager_optional_ha"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r13[4] = "resourcemanager_optional_ha" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z0 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : return
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r5 = (java.lang.String) $r14
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r5 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : interfaceinvoke r1.<org.slf4j.Logger: void debug(java.lang.String)>(r5)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : interfaceinvoke r1.<org.slf4j.Logger: void debug(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z1 = r6 instanceof java.util.Map
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z1 = r6 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z1 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r7 = (java.util.Map) $r15
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r7 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r16 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r16 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r8 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r8 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z2 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r9 = (java.lang.String) $r17
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r9 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z3 = r22 instanceof java.util.Collection
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z3 = r22 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z3 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r18 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : interfaceinvoke r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} => {}", r9, r22)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : interfaceinvoke r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} => {}", r9, r22) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r19 = (java.util.Collection) r22
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $r19 = (java.util.Collection) r22 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r11 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r11 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z4 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : interfaceinvoke r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} => {}", r9, r22)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $i0 = virtualinvoke $r18.<java.lang.StringBuilder: int length()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $i0 = virtualinvoke $r18.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $i0 <= 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.printRoleCommandOrder : virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12)
