org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r11 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r12 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r13 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r13 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r3 = virtualinvoke $r11.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r12, $r13)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r3 = virtualinvoke $r11.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r12, $r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r2)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r15 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.OrmTestHelper helper>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.OrmTestHelper helper> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r19 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r6 = virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, $r19)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r6 = virtualinvoke $r18.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, $r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r23 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r20 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r20 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>(r1, "c1")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>(r1, "c1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Cluster c1> = $r22
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Cluster c1> = $r22 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : return
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r23 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r8 = (java.lang.String) $r23
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r8 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r24 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r24 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r25 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r25 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r9 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r8)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : r9 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setIpv4(java.lang.String)>("ipv4")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setIpv4(java.lang.String)>("ipv4") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setIpv6(java.lang.String)>("ipv6")
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setIpv6(java.lang.String)>("ipv6") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r26 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: com.google.gson.Gson gson>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r26 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r27 = virtualinvoke $r26.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r15)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r27 = virtualinvoke $r26.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setHostAttributes(java.lang.String)>($r27)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setHostAttributes(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r28 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r28 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : specialinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : specialinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r6)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r29)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r29) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>(r9)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r28.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>(r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r30 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r28)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r30 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setHostVersionEntities(java.util.Collection)>($r30)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke r9.<org.apache.ambari.server.orm.entities.HostEntity: void setHostVersionEntities(java.util.Collection)>($r30) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r31 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $r31 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity merge(org.apache.ambari.server.orm.entities.HostEntity)>(r9)
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity merge(org.apache.ambari.server.orm.entities.HostEntity)>(r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createDefaultCluster : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
