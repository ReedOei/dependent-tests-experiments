org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : $r3 = new org.apache.ambari.server.agent.ExecutionCommand >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : specialinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : specialinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r1)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : $r4 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r4)
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : $r5 = virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>()
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : $r5 = virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getRoleParams()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_USER_NAME", "username")
org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_USER_NAME", "username") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.CreateAndConfigureActionTest.getExecutionCommand : return $r3
