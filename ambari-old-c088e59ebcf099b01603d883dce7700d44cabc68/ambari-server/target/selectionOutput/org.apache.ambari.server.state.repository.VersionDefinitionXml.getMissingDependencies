org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r36 = staticinvoke <com.google.common.collect.Sets: java.util.TreeSet newTreeSet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterProperty(java.lang.String,java.lang.String)>("stack_packages", null)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterProperty(java.lang.String,java.lang.String)>("stack_packages", null) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r18 = new com.google.gson.GsonBuilder
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r18 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r18.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r18.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r19 = new org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencyDeserializer
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r19 = new org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencyDeserializer >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r19.<org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencyDeserializer: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r19.<org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencyDeserializer: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : virtualinvoke $r18.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class "Lorg/apache/ambari/server/state/repository/StackPackage$UpgradeDependencies;", $r19)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : virtualinvoke $r18.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>(class "Lorg/apache/ambari/server/state/repository/StackPackage$UpgradeDependencies;", $r19) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r4 = virtualinvoke $r18.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r4 = virtualinvoke $r18.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r21 = new org.apache.ambari.server.state.repository.VersionDefinitionXml$1
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r21 = new org.apache.ambari.server.state.repository.VersionDefinitionXml$1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r21.<org.apache.ambari.server.state.repository.VersionDefinitionXml$1: void <init>(org.apache.ambari.server.state.repository.VersionDefinitionXml)>(r0)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r21.<org.apache.ambari.server.state.repository.VersionDefinitionXml$1: void <init>(org.apache.ambari.server.state.repository.VersionDefinitionXml)>(r0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r5 = virtualinvoke $r21.<org.apache.ambari.server.state.repository.VersionDefinitionXml$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r5 = virtualinvoke $r21.<org.apache.ambari.server.state.repository.VersionDefinitionXml$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r22 = virtualinvoke r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r2, r5)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r5 = virtualinvoke $r21.<org.apache.ambari.server.state.repository.VersionDefinitionXml$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r34 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r35[0] = "Unable to deserialize the stack packages JSON, assuming no service dependencies"
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r35[0] = "Unable to deserialize the stack packages JSON, assuming no service dependencies" >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r35[1] = $r34
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r35[1] = $r34 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : staticinvoke <jline.internal.Log: void warn(java.lang.Object[])>($r35)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : staticinvoke <jline.internal.Log: void warn(java.lang.Object[])>($r35) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r22 = virtualinvoke r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r2, r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r6 = (java.util.Map) $r22
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r22 = virtualinvoke r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r2, r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r34 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r6 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $r23 = new org.apache.ambari.server.state.StackId]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r6 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r34 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $r23 = new org.apache.ambari.server.state.StackId] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r23 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r23 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r24 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r24 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r25 = $r24.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r25 = $r24.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r23.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : specialinvoke $r23.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r26 = virtualinvoke $r23.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r26 = virtualinvoke $r23.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r27 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r27 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r7 = (org.apache.ambari.server.state.repository.StackPackage) $r27
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r7 = (org.apache.ambari.server.state.repository.StackPackage) $r27 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r28 = r7.<org.apache.ambari.server.state.repository.StackPackage: org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies upgradeDependencies>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r28 = r7.<org.apache.ambari.server.state.repository.StackPackage: org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies upgradeDependencies> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != $r28
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != $r28 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != $r28 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r29 = r7.<org.apache.ambari.server.state.repository.StackPackage: org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies upgradeDependencies>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r29 = r7.<org.apache.ambari.server.state.repository.StackPackage: org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies upgradeDependencies> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r8 = $r29.<org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies: java.util.Map dependencies>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r8 = $r29.<org.apache.ambari.server.state.repository.StackPackage$UpgradeDependencies: java.util.Map dependencies> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r8
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z1 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null == r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z1 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r36
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r10 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r1)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r10 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r1) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r11 = virtualinvoke r10.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r11 = virtualinvoke r10.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r12 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r12 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r13 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r13 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z6 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r31 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r30 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r30 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r39 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getRecursiveDependencies(java.util.Set,java.util.Map,java.util.Set,java.util.Set)>(r36, r8, r11, $r30)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r39 = virtualinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getRecursiveDependencies(java.util.Set,java.util.Map,java.util.Set,java.util.Set)>(r36, r8, r11, $r30) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : return r39
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r31 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r14 = (java.lang.String) $r31
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r14 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r32 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r32 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r15 = (java.util.List) $r32
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r15 = (java.util.List) $r32 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != r15
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != r15 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if null != r15 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z2 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r33 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $r33 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r17 = (java.lang.String) $r33
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : r17 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z3 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>(r17)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z3 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z3 != 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z4 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r17)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z4 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z4 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : interfaceinvoke r36.<java.util.Set: boolean add(java.lang.Object)>(r17)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : interfaceinvoke r36.<java.util.Set: boolean add(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getMissingDependencies : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
