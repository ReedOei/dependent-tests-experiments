org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r33 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r33 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r1, r4)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r33.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r1, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r34 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r34 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r5 = interfaceinvoke $r34.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r5 = interfaceinvoke $r34.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r35 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r35 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r1, $r35)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r1, $r35) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r36 = new org.apache.ambari.server.state.cluster.ClusterTest$1
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r36 = new org.apache.ambari.server.state.cluster.ClusterTest$1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r36.<org.apache.ambari.server.state.cluster.ClusterTest$1: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r36.<org.apache.ambari.server.state.cluster.ClusterTest$1: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r86 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r86 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r84 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r4)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r4)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r88 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r88 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r82 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r37 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r37 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r90 = interfaceinvoke $r37.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r90 = interfaceinvoke $r37.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r80 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r38 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r38 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r92 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "HDFS", r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r92 = interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "HDFS", r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r39 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r39 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r93 = interfaceinvoke $r39.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "ZOOKEEPER", r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r93 = interfaceinvoke $r39.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "ZOOKEEPER", r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r40 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r40 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r7 = interfaceinvoke $r40.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "GANGLIA", r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r7 = interfaceinvoke $r40.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r5, "GANGLIA", r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r92)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r92) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r93)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r93) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r7)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r41 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r41 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r8 = interfaceinvoke $r41.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "NAMENODE")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r8 = interfaceinvoke $r41.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "NAMENODE") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r42 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r42 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r9 = interfaceinvoke $r42.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "DATANODE")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r9 = interfaceinvoke $r42.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "DATANODE") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r43 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r43 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r10 = interfaceinvoke $r43.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "HDFS_CLIENT")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r10 = interfaceinvoke $r43.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r92, "HDFS_CLIENT") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r8)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r9)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r10)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r92.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r10) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r44 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r44 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r11 = interfaceinvoke $r44.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r93, "ZOOKEEPER_SERVER")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r11 = interfaceinvoke $r44.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r93, "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r45 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r45 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r12 = interfaceinvoke $r45.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r93, "ZOOKEEPER_CLIENT")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r12 = interfaceinvoke $r45.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r93, "ZOOKEEPER_CLIENT") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r93.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r11)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r93.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r93.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r12)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r93.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r46 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r46 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r13 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, "GANGLIA_SERVER")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r13 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, "GANGLIA_SERVER") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r47 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r47 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r14 = interfaceinvoke $r47.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, "GANGLIA_MONITOR")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r14 = interfaceinvoke $r47.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, "GANGLIA_MONITOR") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r13)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r14)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r15 = interfaceinvoke $r48.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r8, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r15 = interfaceinvoke $r48.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r8, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r49 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r49 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r16 = interfaceinvoke $r49.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r9, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r16 = interfaceinvoke $r49.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r9, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r50 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r50 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r17 = interfaceinvoke $r50.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r10, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r17 = interfaceinvoke $r50.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r10, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r51 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r51 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r18 = interfaceinvoke $r51.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r11, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r18 = interfaceinvoke $r51.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r11, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r52 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r52 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r19 = interfaceinvoke $r52.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r19 = interfaceinvoke $r52.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r53 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r53 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r20 = interfaceinvoke $r53.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r20 = interfaceinvoke $r53.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r21 = interfaceinvoke $r54.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r21 = interfaceinvoke $r54.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r15)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r16)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r17)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r18)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r19)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r20)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r21)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r55 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r55 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r22 = interfaceinvoke $r55.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r22 = interfaceinvoke $r55.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r23 = interfaceinvoke $r56.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r23 = interfaceinvoke $r56.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r22)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r23)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r57 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r57 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r24 = interfaceinvoke $r57.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-3")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r24 = interfaceinvoke $r57.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-3") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r24)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r24) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r25 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r25 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i0 = interfaceinvoke r25.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i0 = interfaceinvoke r25.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i1 = interfaceinvoke r26.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i1 = interfaceinvoke r26.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-3")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-3") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i2 = interfaceinvoke r27.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i2 = interfaceinvoke r27.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r58 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r58 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r58.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r58.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r59 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r59 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r59.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r59.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r60 = new org.apache.ambari.server.state.cluster.ClusterTest$2
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r60 = new org.apache.ambari.server.state.cluster.ClusterTest$2 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r60.<org.apache.ambari.server.state.cluster.ClusterTest$2: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r60.<org.apache.ambari.server.state.cluster.ClusterTest$2: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r61 = new org.apache.ambari.server.state.cluster.ClusterTest$3
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r61 = new org.apache.ambari.server.state.cluster.ClusterTest$3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r61.<org.apache.ambari.server.state.cluster.ClusterTest$3: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r61.<org.apache.ambari.server.state.cluster.ClusterTest$3: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r62 = new org.apache.ambari.server.state.cluster.ClusterTest$4
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r62 = new org.apache.ambari.server.state.cluster.ClusterTest$4 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r62.<org.apache.ambari.server.state.cluster.ClusterTest$4: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r62.<org.apache.ambari.server.state.cluster.ClusterTest$4: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", $r60)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", $r60) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER", $r61)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER", $r61) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GANGLIA", $r62)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GANGLIA", $r62) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r66 = virtualinvoke $r58.<java.util.HashMap: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r66 = virtualinvoke $r58.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r94 = interfaceinvoke $r66.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r94 = interfaceinvoke $r66.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r74 = interfaceinvoke r94.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r67 = virtualinvoke $r59.<java.util.HashMap: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r67 = virtualinvoke $r59.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r100 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r100 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r68 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : return r5
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r68 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r101 = (java.lang.String) $r68
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r101 = (java.lang.String) $r68 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r69 = virtualinvoke $r59.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r101)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r69 = virtualinvoke $r59.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r101) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r102 = (java.util.Set) $r69
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r102 = (java.util.Set) $r69 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r103 = interfaceinvoke r102.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r103 = interfaceinvoke r102.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z5 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r70 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r70 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r104 = (java.lang.String) $r70
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r104 = (java.lang.String) $r70 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r71 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r71 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r72 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r72 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r73 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r73 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r105 = virtualinvoke $r71.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r72, $r73, r101, r104)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r105 = virtualinvoke $r71.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r72, $r73, r101, r104) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z6 = virtualinvoke r105.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z6 = virtualinvoke r105.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z6)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z6) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r74 = interfaceinvoke r94.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r95 = (java.lang.String) $r74
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r95 = (java.lang.String) $r74 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r75 = virtualinvoke $r58.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r95)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r75 = virtualinvoke $r58.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r95) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r96 = (java.util.Set) $r75
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r96 = (java.util.Set) $r75 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r97 = interfaceinvoke r96.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r97 = interfaceinvoke r96.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r76 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z3 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z3 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r76 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r98 = (java.lang.String) $r76
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r98 = (java.lang.String) $r76 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r77 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r77 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r78 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r78 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r79 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r79 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r99 = virtualinvoke $r77.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r78, $r79, r95, r98)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r99 = virtualinvoke $r77.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r78, $r79, r95, r98) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z8 = virtualinvoke r99.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z8 = virtualinvoke r99.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z8)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r80 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r91 = (org.apache.ambari.server.state.Host) $r80
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r91 = (org.apache.ambari.server.state.Host) $r80 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r81 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r81 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r91.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r81)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r91.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r81) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z2 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z2 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r82 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r89 = (java.lang.String) $r82
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r89 = (java.lang.String) $r82 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r83 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r83 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r83.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r89, r1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r83.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r89, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r84 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r87 = (java.lang.String) $r84
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r87 = (java.lang.String) $r84 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Host addHost(java.lang.String,java.util.Map)>(r87, r3)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Host addHost(java.lang.String,java.util.Map)>(r87, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>()
