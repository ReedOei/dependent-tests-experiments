org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r2 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("Getting security configuration from the request ...")
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("Getting security configuration from the request ...") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.SecurityConfiguration getSecurityConfiguration()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.SecurityConfiguration getSecurityConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 != null
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 != null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r3 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 != null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : return r10
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r3 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>("There\'s no security configuration in the request, retrieving it from the associated blueprint")
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>("There\'s no security configuration in the request, retrieving it from the associated blueprint") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = interfaceinvoke $r4.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.SecurityConfiguration getSecurity()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = interfaceinvoke $r4.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.SecurityConfiguration getSecurity()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 == null
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r5 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: org.apache.ambari.server.state.SecurityType getType()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if r10 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : return r10
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r5 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: org.apache.ambari.server.state.SecurityType getType()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r6 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r5 != $r6
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r7 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: java.lang.String getDescriptorReference()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : return r10
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r7 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: java.lang.String getDescriptorReference()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r7 == null
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r7 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.SecurityConfigurationFactory securityConfigurationFactory>
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : if $r7 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : return r10
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.SecurityConfigurationFactory securityConfigurationFactory> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r9 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: java.lang.String getDescriptorReference()>()
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : $r9 = virtualinvoke r10.<org.apache.ambari.server.topology.SecurityConfiguration: java.lang.String getDescriptorReference()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = virtualinvoke $r8.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.SecurityConfiguration loadSecurityConfigurationByReference(java.lang.String)>($r9)
org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : r10 = virtualinvoke $r8.<org.apache.ambari.server.topology.SecurityConfigurationFactory: org.apache.ambari.server.topology.SecurityConfiguration loadSecurityConfigurationByReference(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processSecurityConfiguration : return r10
