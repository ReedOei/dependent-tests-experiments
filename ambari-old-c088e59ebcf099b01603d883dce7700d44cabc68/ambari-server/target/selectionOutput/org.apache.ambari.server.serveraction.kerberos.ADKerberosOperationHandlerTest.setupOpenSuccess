org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : r2 = (org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler) r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Properties;")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Properties;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r4 = (java.util.Properties) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r4 = (java.util.Properties) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r6 = (javax.naming.ldap.Control[]) $r5
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r6 = (javax.naming.ldap.Control[]) $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r7 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r4, $r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r7 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>($r4, $r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest.setupOpenSuccess : return
