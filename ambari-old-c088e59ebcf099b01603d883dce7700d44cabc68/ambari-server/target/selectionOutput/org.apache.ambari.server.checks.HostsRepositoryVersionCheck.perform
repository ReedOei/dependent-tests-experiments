org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r15 = (org.apache.ambari.server.state.Clusters) $r14
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r15 = (org.apache.ambari.server.state.Clusters) $r14 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r16 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r16 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r18 = (org.apache.ambari.server.state.Clusters) $r17
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r18 = (org.apache.ambari.server.state.Clusters) $r17 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r5 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r5 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z0 = virtualinvoke $r20.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z0 = virtualinvoke $r20.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z0 != 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : return
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r22 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r22 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r22)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : return
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r7 = (org.apache.ambari.server.state.Host) $r23
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r7 = (org.apache.ambari.server.state.Host) $r23 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r24 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r24 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r8 == $r24
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r8 == $r24 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r8 == $r24 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r9 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r9 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r10 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r10 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r25 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r25 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r26 = interfaceinvoke $r25.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r26 = interfaceinvoke $r25.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r27 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r26
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r27 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r26 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r28 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r28 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r11 = virtualinvoke $r27.<org.apache.ambari.server.orm.dao.HostVersionDAO: org.apache.ambari.server.orm.entities.HostVersionEntity findByClusterStackVersionAndHost(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String)>(r3, r10, $r28, $r29)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r11 = virtualinvoke $r27.<org.apache.ambari.server.orm.dao.HostVersionDAO: org.apache.ambari.server.orm.entities.HostVersionEntity findByClusterStackVersionAndHost(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String)>(r3, r10, $r28, $r29) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r30 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r30 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r12 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r31, $r30)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r12 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r31, $r30) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r11 == null
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r11 == null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r34 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r11 == null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r32.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r33)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r32.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r34 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z2 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>($r34)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z2 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 != 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
