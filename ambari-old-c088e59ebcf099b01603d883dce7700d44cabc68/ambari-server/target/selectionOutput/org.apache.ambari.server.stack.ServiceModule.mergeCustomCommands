org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r9 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r9 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z0 == 0
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r7 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r11 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r11 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z1 == 0
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : return
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r12 = (org.apache.ambari.server.state.CustomCommandDefinition) $r5
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r12 = (org.apache.ambari.server.state.CustomCommandDefinition) $r5 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r6 = virtualinvoke r12.<org.apache.ambari.server.state.CustomCommandDefinition: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r6 = virtualinvoke r12.<org.apache.ambari.server.state.CustomCommandDefinition: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z2 = interfaceinvoke $r4.<java.util.Collection: boolean contains(java.lang.Object)>($r6)
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z2 = interfaceinvoke $r4.<java.util.Collection: boolean contains(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z2 != 0
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r7 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r10 = (org.apache.ambari.server.state.CustomCommandDefinition) $r7
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : r10 = (org.apache.ambari.server.state.CustomCommandDefinition) $r7 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r8 = virtualinvoke r10.<org.apache.ambari.server.state.CustomCommandDefinition: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $r8 = virtualinvoke r10.<org.apache.ambari.server.state.CustomCommandDefinition: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r8)
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.mergeCustomCommands : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
