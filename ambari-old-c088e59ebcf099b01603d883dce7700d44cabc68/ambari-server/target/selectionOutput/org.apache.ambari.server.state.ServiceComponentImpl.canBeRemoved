org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r3 = r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.util.concurrent.ConcurrentMap hostComponents> >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z0 == 0
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : return 1
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : r2 = (org.apache.ambari.server.state.ServiceComponentHost) $r5
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : r2 = (org.apache.ambari.server.state.ServiceComponentHost) $r5 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $z1 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: boolean canBeRemoved()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $z1 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: boolean canBeRemoved()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z1 != 0
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r7 = <org.apache.ambari.server.state.ServiceComponentImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r7 = <org.apache.ambari.server.state.ServiceComponentImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable hostcomponent when trying to delete service component, clusterName=")
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable hostcomponent when trying to delete service component, clusterName=") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getServiceName()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=")
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getName()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=")
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r18 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r18 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostname=")
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostname=") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r21 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r21 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>($r23)
org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.canBeRemoved : return 0
