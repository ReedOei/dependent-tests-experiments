org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r6 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r6 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r7 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r7 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r8 = (java.util.Set) $r7
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r8 = (java.util.Set) $r7 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : return $r5
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : r4 = (org.apache.ambari.server.state.Host) $r9
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : r4 = (org.apache.ambari.server.state.Host) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsForCluster : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
