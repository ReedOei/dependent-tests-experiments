org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r5 = interfaceinvoke r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/DBAccessorImpl;") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r1 = (org.apache.ambari.server.orm.DBAccessorImpl) $r5
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r1 = (org.apache.ambari.server.orm.DBAccessorImpl) $r5 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z0 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableExists(java.lang.String)>("ambari_sequences")
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r1 = (org.apache.ambari.server.orm.DBAccessorImpl) $r5 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z0 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableExists(java.lang.String)>("ambari_sequences") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z0 == 0
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z0 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableExists(java.lang.String)>("ambari_sequences") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z0 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: void truncateTable(java.lang.String)>("ambari_sequences")
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z0 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= return]
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z0 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= return] >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : return
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: void truncateTable(java.lang.String)>("ambari_sequences") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r6 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.Connection getConnection()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: void truncateTable(java.lang.String)>("ambari_sequences") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r6 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r11 = interfaceinvoke $r6.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO ambari_sequences(sequence_name, sequence_value) values (?, 0);")
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r6 = virtualinvoke r1.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r11 = interfaceinvoke $r6.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO ambari_sequences(sequence_name, sequence_value) values (?, 0);") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r11 = interfaceinvoke $r6.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO ambari_sequences(sequence_name, sequence_value) values (?, 0);") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r11 = interfaceinvoke $r6.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO ambari_sequences(sequence_name, sequence_value) values (?, 0);") >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r7 = <org.apache.ambari.server.H2DatabaseCleaner: java.util.List sequenceList>
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r7 = <org.apache.ambari.server.H2DatabaseCleaner: java.util.List sequenceList> >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r7 = <org.apache.ambari.server.H2DatabaseCleaner: java.util.List sequenceList> >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : throw $r10
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : throw $r10 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z1 == 0
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z1 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z1 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void close()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z1 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : if $z1 == 0 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= (branch)]
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r9 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= return]
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r3 = (java.lang.String) $r8
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, r3)
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, r3) >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: int executeUpdate()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, r3) >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: int executeUpdate()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : interfaceinvoke r11.<java.sql.PreparedStatement: int executeUpdate()>() >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.H2DatabaseCleaner.resetSequences : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.H2DatabaseCleaner.resetSequences : $r10 := @caughtexception
