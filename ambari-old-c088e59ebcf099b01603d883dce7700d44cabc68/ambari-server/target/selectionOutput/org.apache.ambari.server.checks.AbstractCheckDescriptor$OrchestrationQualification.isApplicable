org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $r6 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification: java.lang.Class m_checkClass>
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $r6 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification: java.lang.Class m_checkClass> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/UpgradeCheck;")
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/checks/UpgradeCheck;") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r4 = (org.apache.ambari.server.checks.UpgradeCheck) $r7
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r4 = (org.apache.ambari.server.checks.UpgradeCheck) $r7 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if null != r4
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if null != r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : return 1
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if null != r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r5 = interfaceinvoke r4.<org.apache.ambari.server.checks.UpgradeCheck: org.apache.ambari.server.state.RepositoryType[] orchestration()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : r5 = interfaceinvoke r4.<org.apache.ambari.server.checks.UpgradeCheck: org.apache.ambari.server.state.RepositoryType[] orchestration()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r5)
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r5) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z0 != 0
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r5, r3)
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : return 1
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r5, r3) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z1 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : return 1
org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification.isApplicable : return 0
