org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : $r4 = r0.<org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : r6 = interfaceinvoke $r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : interfaceinvoke r1.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r6)
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : interfaceinvoke r1.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r6) >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : $r5 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : $r5 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : interfaceinvoke r6.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r5)
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : interfaceinvoke r6.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r5) >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : return r6
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : goto [?= return r6]
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : $r3 := @caughtexception
org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : goto [?= return r6] >>>>>>>> org.apache.ambari.server.state.cluster.ServiceComponentHostConcurrentWriteDeadlockTest.addServiceComponent : return r6
