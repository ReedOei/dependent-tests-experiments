org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer: void viewInstanceDAOReturningNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r25 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r25 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r25
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r26 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r26 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r5 = (org.apache.ambari.server.state.Clusters) $r26
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r5 = (org.apache.ambari.server.state.Clusters) $r26 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r27 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r27 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r6 = (org.apache.ambari.server.state.Cluster) $r27
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r6 = (org.apache.ambari.server.state.Cluster) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host101", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r8 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host101", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host102", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host102", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/HostHealthStatus;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r28 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/HostHealthStatus;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r10 = (org.apache.ambari.server.state.HostHealthStatus) $r28
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r10 = (org.apache.ambari.server.state.HostHealthStatus) $r28 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r29 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r29 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r11 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r29
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r11 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/ResourceProviderFactory;") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r12 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r30
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r12 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r30 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r13 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r31 = new java.util.LinkedList
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r31 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r31.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r31.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r32 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r32.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r32.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r35 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r35 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r36 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r36 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r38 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r38 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r40 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r40 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r41 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r41 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r43 = interfaceinvoke r9.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r43 = interfaceinvoke r9.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r45 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r45 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r46 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r46 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r48 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r48 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r52 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r52 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r57 = (java.util.Set) $r56
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r57 = (java.util.Set) $r56 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r58 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r57)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r58 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r60 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r60 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r61 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r61 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r64 = (org.apache.ambari.server.controller.AmbariManagementController) $r63
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r64 = (org.apache.ambari.server.controller.AmbariManagementController) $r63 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r65 = interfaceinvoke r12.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r64)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r65 = interfaceinvoke r12.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(org.apache.ambari.server.controller.AmbariManagementController)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r67 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r67 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r69 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r69 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r71 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r71 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r73 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r73 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r75 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r75 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r77 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r77 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r78 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r77)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r78 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r79 = interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r79 = interfaceinvoke $r78.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r81 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host101")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r81 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host101") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r82 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r81)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r82 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r83 = interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r83 = interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r85 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host102")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r85 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host102") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r87 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r87 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r89 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r89 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r91 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r91 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r92 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r91)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r92 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r94 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r94 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r96 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r96 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r96.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r96.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r97 = interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r97 = interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r99 = virtualinvoke r10.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r99 = virtualinvoke r10.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r101 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r101 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r102 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r102 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r104 = virtualinvoke r10.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r104 = virtualinvoke r10.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r105 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r104)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r105 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r104) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r106 = interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r106 = interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r108 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r108 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r108.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : specialinvoke $r108.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/cluster_name")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/cluster_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/host_name")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/host_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/maintenance_state")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("Hosts/maintenance_state") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r17 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r17 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r18 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r108)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r18 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r108) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r109 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r109 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r109.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : interfaceinvoke $r109.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r19 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r19 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r20 = interfaceinvoke r19.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r18, r17)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r20 = interfaceinvoke r19.<org.apache.ambari.server.controller.spi.ResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r18, r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $i1 = interfaceinvoke r20.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $i1 = interfaceinvoke r20.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $l2 = (long) $i1
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r21 = interfaceinvoke r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r21 = interfaceinvoke r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $z7 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $z7 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : if $z7 == 0
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r110 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : return
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r110 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r22 = (org.apache.ambari.server.controller.spi.Resource) $r110
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r22 = (org.apache.ambari.server.controller.spi.Resource) $r110 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r111 = interfaceinvoke r22.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("Hosts/cluster_name")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r111 = interfaceinvoke r22.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("Hosts/cluster_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r23 = (java.lang.String) $r111
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r23 = (java.lang.String) $r111 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Cluster100", r23)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Cluster100", r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r112 = interfaceinvoke r22.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("Hosts/maintenance_state")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r112 = interfaceinvoke r22.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("Hosts/maintenance_state") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r24 = (org.apache.ambari.server.state.MaintenanceState) $r112
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : r24 = (org.apache.ambari.server.state.MaintenanceState) $r112 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r113 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $r113 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r113, r24)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r113, r24) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : goto [?= $z7 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : goto [?= $z7 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testGetResources : $z7 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
