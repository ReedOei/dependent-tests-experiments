org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $i0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $i0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $z1 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $z1 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r33 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r14 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r14 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ipa: ERROR: user with name \"user\" already exists")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ipa: ERROR: user with name \"user\" already exists") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22 = newarray (java.lang.String)[2]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22[0] = "ipa"
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22[0] = "ipa" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r37 = "service-add"
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : if z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r37 = "user-add"
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r37 = "user-add" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22[1] = $r37
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22[1] = $r37 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r23 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String[])>($r22)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r23 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String[])>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r25 = (java.util.Map) $r24
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r25 = (java.util.Map) $r24 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r27 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r26
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r27 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r28 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r23, $r25, $r27)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r28 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r23, $r25, $r27) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r30 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : return
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r37 = "service-add" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : goto [?= $r22[1] = $r37]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : goto [?= $r22[1] = $r37] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r22[1] = $r37
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r33 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ipa: ERROR: service with name \"service/host@EXAMPLE.COM\" already exists")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ipa: ERROR: service with name \"service/host@EXAMPLE.COM\" already exists") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : goto [?= $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : goto [?= $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.setupPrincipalAlreadyExists : $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
