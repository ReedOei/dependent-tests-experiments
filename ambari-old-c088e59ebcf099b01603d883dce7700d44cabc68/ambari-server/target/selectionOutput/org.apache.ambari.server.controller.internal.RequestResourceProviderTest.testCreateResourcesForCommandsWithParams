org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request> >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r20 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r20 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r5 = (org.apache.ambari.server.state.Cluster) $r20
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r5 = (org.apache.ambari.server.state.Cluster) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r24 = interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r29 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r29 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r31 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r31 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r6 = (org.apache.ambari.server.state.Clusters) $r31
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r6 = (org.apache.ambari.server.state.Clusters) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r32 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r32 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r33 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r34 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r34 = interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r36 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r36 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r36
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r37 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r37 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/RequestStatusResponse;") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r37
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r38 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r38 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r40 = interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r43 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r42
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r43 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r45 = (java.util.Map) $r44
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r45 = (java.util.Map) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r46 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r43, $r45)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r46 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r43, $r45) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r48 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r48 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r50 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r50 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[0] = r5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[0] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[1] = r6
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[1] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[2] = r7
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[2] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[3] = r8
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54[3] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r54)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r55 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r55 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r55.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r55.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r56.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r56.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r57 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r57 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r57.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r57.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r59 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r59 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r59.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r59.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r60 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r60 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r60.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r60.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", "host1,host2,host3")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", "host1,host2,host3") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r59.<java.util.Set: boolean add(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r59.<java.util.Set: boolean add(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", $r59)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", $r59) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r56.<java.util.Set: boolean add(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r56.<java.util.Set: boolean add(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r64 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r64 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r64.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r64.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param1", "value1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param1", "value1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param2", "value2")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param2", "value2") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67 = newarray (java.lang.String)[3]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[0] = "host1"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[0] = "host1" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[1] = "host2"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[1] = "host2" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[2] = "host3"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r67[2] = "host3" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r68 = new org.apache.ambari.server.controller.internal.RequestResourceProviderTest$12
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r68 = new org.apache.ambari.server.controller.internal.RequestResourceProviderTest$12 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r68.<org.apache.ambari.server.controller.internal.RequestResourceProviderTest$12: void <init>(org.apache.ambari.server.controller.internal.RequestResourceProviderTest)>(r0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r68.<org.apache.ambari.server.controller.internal.RequestResourceProviderTest$12: void <init>(org.apache.ambari.server.controller.internal.RequestResourceProviderTest)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r97 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r97 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r16 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r7)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r16 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r97)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r16 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.AmbariManagementController)>(r2, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r95 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r96 = virtualinvoke $r95.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z5 = virtualinvoke $r96.<java.lang.String: boolean contains(java.lang.CharSequence)>("Either command or action must be specified")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z5 = virtualinvoke $r96.<java.lang.String: boolean contains(java.lang.CharSequence)>("Either command or action must be specified") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("action", "a1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("action", "a1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r99 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r99 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r99)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r99 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r93 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r94 = virtualinvoke $r93.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z4 = virtualinvoke $r94.<java.lang.String: boolean contains(java.lang.CharSequence)>("Both command and action cannot be specified")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z4 = virtualinvoke $r94.<java.lang.String: boolean contains(java.lang.CharSequence)>("Both command and action cannot be specified") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>($r56, $r64) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r101)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r101) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r75 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r75 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r102 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r75
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r102 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r75 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r76 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r76 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z3 = virtualinvoke $r76.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z3 = virtualinvoke $r76.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r77 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r77 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r77)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r77) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r78 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r78 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r78)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r78) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r79 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r79 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i1 = interfaceinvoke $r79.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i1 = interfaceinvoke $r79.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l2 = (long) $i1
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r80 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r80 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r81 = interfaceinvoke $r80.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r81 = interfaceinvoke $r80.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r17 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r81
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r17 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r81 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r82 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r82 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r82)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r82) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r83 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r83 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r83)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r83) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r84 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r84 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i3 = interfaceinvoke $r84.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i3 = interfaceinvoke $r84.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l4 = (long) $i3
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l4 = (long) $i3 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r85 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r85 = virtualinvoke r17.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r86 = interfaceinvoke $r85.<java.util.List: java.lang.Object[] toArray()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r86 = interfaceinvoke $r85.<java.util.List: java.lang.Object[] toArray()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r67, $r86)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r67, $r86) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r87 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r87 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i5 = interfaceinvoke $r87.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i5 = interfaceinvoke $r87.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l6 = (long) $i5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l6 = (long) $i5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r88 = interfaceinvoke $r68.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r88 = interfaceinvoke $r68.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r18 = interfaceinvoke $r88.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r18 = interfaceinvoke $r88.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r89 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : return
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r89 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r19 = (java.lang.String) $r89
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r19 = (java.lang.String) $r89 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r90 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r90 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r91 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r91 = virtualinvoke r102.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r92 = interfaceinvoke $r91.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r92 = interfaceinvoke $r91.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r90, $r92)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r90, $r92) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r99) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke $r64.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r99) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r93 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke $r64.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r97) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r97) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r95 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r64.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")
