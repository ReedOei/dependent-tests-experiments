org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r29
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r29 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r30
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r30 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r31
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r31 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r32
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r32 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r33
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r33 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r34
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r34 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r35
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r35 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r36
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r36 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/io/File;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r37
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r37 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarInputStream;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarInputStream;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r38
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r38 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarEntry;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Ljava/util/jar/JarEntry;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r39
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r39 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Ljava/io/FileOutputStream;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Ljava/io/FileOutputStream;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r40
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r40 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r41 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r41 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r42)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r42) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r331 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r43)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r331 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r43) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r332 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r332 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z4 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = interfaceinvoke r332.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r44.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r44.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = virtualinvoke $r45.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = virtualinvoke $r45.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r52.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r52.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r61.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r61.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r62 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r62 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i2 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i2 = virtualinvoke $r66.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r68 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r70 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r69)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r70 = interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r72 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r72 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r72.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r72.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r78 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r78 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l4 = virtualinvoke $r78.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l4 = virtualinvoke $r78.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r79 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r84 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r84 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = virtualinvoke $r84.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = virtualinvoke $r84.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r86 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r85) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r87 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r87 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r87)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = interfaceinvoke $r86.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92[0] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r92[0] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke r3.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r96) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke $r98.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke $r98.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z8 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z8 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z8 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke $r108.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke $r108.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z10 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z10 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r302 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z10 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r113) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r119 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r118)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r119 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r118) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r120.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r120.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r120)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r120) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r8.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r8.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r125 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r125 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r125)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r125) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r129 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = interfaceinvoke $r129.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r133 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r133 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r133) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r135)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = interfaceinvoke $r134.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r135) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r138 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r140)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r139.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r140) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r145.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r145.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r7.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r7.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155[0] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155[0] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r156 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r155)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r156 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r155) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r156.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r158)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r158) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r160.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r160.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r161 = interfaceinvoke $r159.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r160)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r161 = interfaceinvoke $r159.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r160) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r161.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke $r163.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke $r163.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r164)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r164) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r166 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r166 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r166)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r166) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r167.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.state.Cluster) $r169
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.state.Cluster) $r169 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Service;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = (org.apache.ambari.server.state.Service) $r170
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = (org.apache.ambari.server.state.Service) $r170 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r171 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r171 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceEntity;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r171
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r171 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceDataEntity;")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/entities/ViewInstanceDataEntity;") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r172
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r172 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r174 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r173)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r174 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r173) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = interfaceinvoke $r174.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r175.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r177 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r177 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r177)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r177) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = interfaceinvoke $r178.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r181.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r181.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r181.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r184 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r184 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r184.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r184.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r237 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = interfaceinvoke $r185.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = interfaceinvoke $r185.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r186) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r188.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r188.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r187.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r188) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r232 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190 = newarray (java.lang.Object)[19] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[0] = $r191
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[0] = $r191 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[13] = $r192
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[13] = $r192 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[14] = $r193
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[14] = $r193 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[15] = $r194
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[15] = $r194 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[16] = $r195
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[16] = $r195 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[17] = r17
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[17] = r17 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[18] = r19
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190[18] = r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r190)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r190) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r196 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r196 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r331, $r44, $r52, $r54, z0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r331, $r44, $r52, $r54, z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceOperationHandler viewInstanceOperationHandler> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r207 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r207 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PermissionDAO permissionDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r202 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r202 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r209, $r208, $r207, $r206, $r205, $r204, $r203, $r202, $r201, $r200, $r199, null, $r196, $r198, $r197)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.view.ViewInstanceOperationHandler,org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.PermissionDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r209, $r208, $r207, $r206, $r205, $r204, $r203, $r202, $r201, $r200, $r199, null, $r196, $r198, $r197) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l5 + 10000L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l5 + 10000L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z25 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z25 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r340 == null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z25 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r340)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r340)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r340) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r210, $r211)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r210, $r211) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getInstanceDefinitions(org.apache.ambari.server.orm.entities.ViewEntity)>(r340)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getInstanceDefinitions(org.apache.ambari.server.orm.entities.ViewEntity)>(r340) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r212 = new java.util.ArrayList
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r212 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r212.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r212.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l6 = (long) $b19
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l6 = (long) $b19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = interfaceinvoke r25.<java.util.Collection: int size()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = interfaceinvoke r25.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l8 = (long) $i7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l8 = (long) $i7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l6, $l8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l6, $l8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r20.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r341 = interfaceinvoke r25.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r341 = interfaceinvoke r25.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke r341.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r343 = virtualinvoke $r212.<java.util.ArrayList: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r343 = virtualinvoke $r212.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = interfaceinvoke r343.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = interfaceinvoke r343.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z18 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z18 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = interfaceinvoke r343.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z18 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = newarray (java.lang.Object)[16]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = newarray (java.lang.Object)[16] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[0] = $r214
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[0] = $r214 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[13] = $r215
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[13] = $r215 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[14] = $r216
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[14] = $r216 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r217 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r217 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[15] = $r217
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213[15] = $r217 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r213)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r213) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : return
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = interfaceinvoke r343.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r344 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r218
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r344 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r218 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = virtualinvoke $r219.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = virtualinvoke $r219.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("v1", $r220)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("v1", $r220) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection getEntities()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection getEntities()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = interfaceinvoke r27.<java.util.Collection: int size()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = interfaceinvoke r27.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = (long) $i9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = (long) $i9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r222 = interfaceinvoke $r221.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r222 = interfaceinvoke $r221.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = (org.apache.ambari.server.orm.entities.ViewEntityEntity) $r222
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = (org.apache.ambari.server.orm.entities.ViewEntityEntity) $r222 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long getId()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = virtualinvoke $r223.<java.lang.Long: long longValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = virtualinvoke $r223.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(99L, $l11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(99L, $l11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = virtualinvoke r344.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String getViewInstanceName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String getViewInstanceName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r224, $r225)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r224, $r225) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z18 = interfaceinvoke r343.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z18 = interfaceinvoke r343.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = interfaceinvoke r343.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke r341.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r342 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r226
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r342 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r226 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r227 = virtualinvoke r342.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r227 = virtualinvoke r342.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r227.<java.lang.String: boolean equals(java.lang.Object)>("AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r227.<java.lang.String: boolean equals(java.lang.Object)>("AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z19 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z19 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r212.<java.util.ArrayList: boolean add(java.lang.Object)>(r342)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z19 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r212.<java.util.ArrayList: boolean add(java.lang.Object)>(r342) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z26 = interfaceinvoke r341.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r20.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0", "AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0", "AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r228, $r229)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r228, $r229) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r341 = interfaceinvoke r25.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r340) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z21) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r213 = newarray (java.lang.Object)[16]]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r213 = newarray (java.lang.Object)[16]] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = newarray (java.lang.Object)[16]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b19 = 3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r340 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r340 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = $l12 cmp l0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = $l12 cmp l0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b13 >= 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b13 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b13 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r340 = virtualinvoke r24.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z25 = virtualinvoke $r196.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = virtualinvoke r340.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke $r230.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r231)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke $r230.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r231) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z22 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z22 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z22 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r232 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke $r232.<org.apache.ambari.server.orm.dao.ViewDAO: java.util.List findAll()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke $r232.<org.apache.ambari.server.orm.dao.ViewDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r190 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r237 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r237.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r237.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r238)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r238) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = interfaceinvoke $r239.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = interfaceinvoke $r239.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r243 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r242)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r243 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r242) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = interfaceinvoke $r243.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r184)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = interfaceinvoke $r243.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r184) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r244.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r244.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = interfaceinvoke r17.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r246)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r246) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = interfaceinvoke $r247.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r181)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = interfaceinvoke $r247.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r181) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r248.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r248.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r237.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c1", r17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r237.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c1", r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r251 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r251 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = interfaceinvoke $r251.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = interfaceinvoke $r251.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r237)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r237) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r255 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r255 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r257 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r256
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r257 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r256 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r258 = virtualinvoke $r255.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity merge(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>($r257)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r258 = virtualinvoke $r255.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity merge(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>($r257) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r258)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r258) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r260 = interfaceinvoke $r259.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r260 = interfaceinvoke $r259.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r260.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r260.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r262 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r262 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r263 = virtualinvoke $r262.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByName(java.lang.String,java.lang.String)>("MY_VIEW{1.0.0}", "AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r263 = virtualinvoke $r262.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByName(java.lang.String,java.lang.String)>("MY_VIEW{1.0.0}", "AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r264 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r263)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r264 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r263) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r265 = interfaceinvoke $r264.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r265 = interfaceinvoke $r264.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r265.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r265.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r267 = virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r267 = virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r268 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r267)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r268 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r267) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r269 = interfaceinvoke $r268.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r21)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r269 = interfaceinvoke $r268.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r269.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r269.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r272 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r271)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r272 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r271) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r272.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r272.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r274)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r274) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r275.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r275.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r277 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r277 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r277) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r278.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r280)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r280) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r281.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r282)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r281.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r282) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r284 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = (byte[]) $r284
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = (byte[]) $r284 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i14 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r285)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i14 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r285) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r288)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r288) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = (byte[]) $r290
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = (byte[]) $r290 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r291)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r291) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r293 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r292)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r293 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r292) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r294)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r293.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r294) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = (byte[]) $r296
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = (byte[]) $r296 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i16 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i16 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r297, $i16, $i17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r297, $i16, $i17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r298 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r298 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = virtualinvoke $r298.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = virtualinvoke $r298.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r299)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r299) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r300.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r300.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r302 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r303 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r302)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r303 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r302) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = interfaceinvoke $r303.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = interfaceinvoke $r303.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r304.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r304.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r306)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r306) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = interfaceinvoke $r307.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = interfaceinvoke $r307.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r308.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r308.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z9 = virtualinvoke r4.<java.io.File: boolean exists()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z9 = virtualinvoke r4.<java.io.File: boolean exists()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r311 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r310)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r311 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r310) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = interfaceinvoke $r311.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = interfaceinvoke $r311.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r312.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r312.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r52 = new java.util.HashMap]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r52 = new java.util.HashMap] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = interfaceinvoke r332.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r333 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r320
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r333 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r320 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r322)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r322) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r321.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r41) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r333.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r321)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r333.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r321) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z4 = interfaceinvoke r332.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r329 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r323
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r329 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r323 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r324.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r324.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = new org.apache.ambari.server.orm.entities.ViewEntityEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = new org.apache.ambari.server.orm.entities.ViewEntityEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r326)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r326) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r327)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r327) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r329)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke $r325.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r329) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r324.<java.util.Collection: boolean add(java.lang.Object)>($r325)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r324.<java.util.Collection: boolean add(java.lang.Object)>($r325) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>($r324)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r329.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>($r324) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()
