org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r6 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r7 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchService access$100(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r6)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r6 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r32 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Cancelling the directory watcher", $r31)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Cancelling the directory watcher", $r31) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : return
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r7 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchService access$100(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r6) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r39 = interfaceinvoke $r7.<java.nio.file.WatchService: java.nio.file.WatchKey take()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r7 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchService access$100(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r6) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r39 = interfaceinvoke $r7.<java.nio.file.WatchService: java.nio.file.WatchKey take()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r8 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r39 = interfaceinvoke $r7.<java.nio.file.WatchService: java.nio.file.WatchKey take()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r8 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Watcher Key was signalled")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r8 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Watcher Key was signalled") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r9 = interfaceinvoke r39.<java.nio.file.WatchKey: java.util.List pollEvents()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("Watcher Key was signalled") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r9 = interfaceinvoke r39.<java.nio.file.WatchKey: java.util.List pollEvents()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r1 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r9 = interfaceinvoke r39.<java.nio.file.WatchKey: java.util.List pollEvents()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r1 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r1 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z4 == 0
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z0 = interfaceinvoke r39.<java.nio.file.WatchKey: boolean reset()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z0 = interfaceinvoke r39.<java.nio.file.WatchKey: boolean reset()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z0 != 0
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z0 = interfaceinvoke r39.<java.nio.file.WatchKey: boolean reset()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r10 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $r6 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $r6 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r6 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r10 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("The watch key could not be reset, Directory watcher will not run anymore")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r10 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("The watch key could not be reset, Directory watcher will not run anymore") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= (branch)]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("The watch key could not be reset, Directory watcher will not run anymore") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= return]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : return
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r2 = (java.nio.file.WatchEvent) $r11
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r2 = (java.nio.file.WatchEvent) $r11 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r12 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r2 = (java.nio.file.WatchEvent) $r11 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r12 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Watcher recieved poll event")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r12 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Watcher recieved poll event") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r3 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchEvent access$200(java.nio.file.WatchEvent)>(r2)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Watcher recieved poll event") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r3 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchEvent access$200(java.nio.file.WatchEvent)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r13 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: java.nio.file.Path val$path>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r3 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.nio.file.WatchEvent access$200(java.nio.file.WatchEvent)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r13 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: java.nio.file.Path val$path> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r14 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.lang.Object context()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r13 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: java.nio.file.Path val$path> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r14 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.lang.Object context()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r15 = (java.nio.file.Path) $r14
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r14 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.lang.Object context()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r15 = (java.nio.file.Path) $r14 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r4 = interfaceinvoke $r13.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>($r15)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r15 = (java.nio.file.Path) $r14 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r4 = interfaceinvoke $r13.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r16 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r4 = interfaceinvoke $r13.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r16 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17 = newarray (java.lang.Object)[2]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r16 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r18 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.nio.file.WatchEvent$Kind kind()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r18 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.nio.file.WatchEvent$Kind kind()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17[0] = $r18
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r18 = interfaceinvoke r3.<java.nio.file.WatchEvent: java.nio.file.WatchEvent$Kind kind()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17[0] = $r18 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17[1] = r4
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17[1] = r4 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Event %s: %s\n", $r17)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r17[1] = r4 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Event %s: %s\n", $r17) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r19)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Event %s: %s\n", $r17) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r20 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r20 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z1 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$300(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r20, r4)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r20 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z1 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$300(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r20, r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z1 != 0
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z1 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$300(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r20, r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r30 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r21 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r21 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z2 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$400(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r21, r4)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r21 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z2 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$400(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r21, r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z2 != 0
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z2 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: boolean access$400(org.apache.ambari.server.view.ViewDirectoryWatcher,java.nio.file.Path)>($r21, r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r29 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r22 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r34 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r35 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r34 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read the view archive, offending file: ")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read the view archive, offending file: ") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read the view archive, offending file: ") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r38, $r33)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r38, $r33) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r38, $r33) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r22 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>("Starting view extraction")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r22 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>("Starting view extraction") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r23 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>("Starting view extraction") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r23 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r24 = $r23.<org.apache.ambari.server.view.ViewDirectoryWatcher: org.apache.ambari.server.view.ViewRegistry viewRegistry>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r23 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r24 = $r23.<org.apache.ambari.server.view.ViewDirectoryWatcher: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : virtualinvoke $r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(java.nio.file.Path)>(r4)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r24 = $r23.<org.apache.ambari.server.view.ViewDirectoryWatcher: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : virtualinvoke $r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(java.nio.file.Path)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r25 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0>
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : virtualinvoke $r24.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(java.nio.file.Path)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r25 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r26 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.List access$500(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r25)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r25 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcher$2: org.apache.ambari.server.view.ViewDirectoryWatcher this$0> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r26 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.List access$500(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r25) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r40 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r26 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: java.util.List access$500(org.apache.ambari.server.view.ViewDirectoryWatcher)>($r25) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r40 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r40 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z3 == 0
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r27 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= (branch)]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r27 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r5 = (com.google.common.base.Function) $r27
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r27 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r5 = (com.google.common.base.Function) $r27 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke r5.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r4)
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : r5 = (com.google.common.base.Function) $r27 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke r5.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke r5.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r33 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r29 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("The uploaded file was 1> Empty 2> Not a regular file or 3> Not a valid Jar archive file")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r29 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("The uploaded file was 1> Empty 2> Not a regular file or 3> Not a valid Jar archive file") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("The uploaded file was 1> Empty 2> Not a regular file or 3> Not a valid Jar archive file") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r30 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>("Watcher detected that the file was either empty or corrupt")
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r30 = staticinvoke <org.apache.ambari.server.view.ViewDirectoryWatcher: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>("Watcher detected that the file was either empty or corrupt") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>("Watcher detected that the file was either empty or corrupt") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : goto [?= $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcher$2.run : $r31 := @caughtexception
