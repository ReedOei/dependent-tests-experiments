org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r112 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r112 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r109 = interfaceinvoke r112.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r18 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r18 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r18.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r18.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r118 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r118 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z1 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z1 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z1 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r29 = interfaceinvoke r118.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r125 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r125 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r126 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r126 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z2 = interfaceinvoke r126.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z2 = interfaceinvoke r126.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z2 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r19 = interfaceinvoke r126.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : return r125
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r19 = interfaceinvoke r126.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r127 = (org.apache.ambari.server.orm.db.Table) $r19
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r127 = (org.apache.ambari.server.orm.db.Table) $r19 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r20 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r20 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z3 = interfaceinvoke r125.<java.util.Map: boolean containsKey(java.lang.Object)>($r20)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z3 = interfaceinvoke r125.<java.util.Map: boolean containsKey(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z3 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r23 = new java.lang.IllegalStateException
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r21 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r21 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke r125.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r127)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke r125.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r127) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z2 = interfaceinvoke r126.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z2 = interfaceinvoke r126.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z2 = interfaceinvoke r126.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r23 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate table definition: ")
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate table definition: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r26 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r26 = r127.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : throw $r23
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r29 = interfaceinvoke r118.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r119 = (java.lang.String) $r29
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r119 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r30 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern TableName>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r30 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern TableName> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r31 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: com.google.common.base.Optional firstMatchingGroup(java.util.regex.Pattern,java.lang.String)>($r30, r119)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r31 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: com.google.common.base.Optional firstMatchingGroup(java.util.regex.Pattern,java.lang.String)>($r30, r119) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r32 = virtualinvoke $r31.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r32 = virtualinvoke $r31.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r33 = (java.lang.String) $r32
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r120 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r33)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r120 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r34 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r34 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r34.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r34.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r35 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r35 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r35.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r35.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r36 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r36 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r36.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r36.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i0 = virtualinvoke r119.<java.lang.String: int indexOf(int)>(40)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i0 = virtualinvoke r119.<java.lang.String: int indexOf(int)>(40) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i1 = $i0 + 1
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i2 = virtualinvoke r119.<java.lang.String: int lastIndexOf(int)>(41)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i2 = virtualinvoke r119.<java.lang.String: int lastIndexOf(int)>(41) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r4 = virtualinvoke r119.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r4 = virtualinvoke r119.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r37 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(44)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r37 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(44) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r38 = virtualinvoke $r37.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r4)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r38 = virtualinvoke $r37.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r4) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r5 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r5 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z4 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r52 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z5 = interfaceinvoke $r34.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z5 = interfaceinvoke $r34.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z5 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r47 = new java.lang.IllegalStateException
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r39 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("columns of table ")
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("columns of table ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r120)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r120) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: void checkDupes(java.lang.String,java.util.List)>($r42, $r34)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: void checkDupes(java.lang.String,java.util.List)>($r42, $r34) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r43 = new org.apache.ambari.server.orm.db.Table
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r43 = new org.apache.ambari.server.orm.db.Table >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r44 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r34)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r44 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r34) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r45 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r35)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r45 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r35) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r46 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r36)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r46 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r36) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r43.<org.apache.ambari.server.orm.db.Table: void <init>(java.lang.String,java.util.Set,com.google.common.base.Optional,java.util.Set,java.util.Set)>(r120, $r44, r122, $r45, $r46)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r43.<org.apache.ambari.server.orm.db.Table: void <init>(java.lang.String,java.util.Set,com.google.common.base.Optional,java.util.Set,java.util.Set)>(r120, $r44, r122, $r45, $r46) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r43)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z1 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z1 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z1 = interfaceinvoke r118.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r47 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r48 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r48 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No columns found in table ")
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No columns found in table ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r120)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r120) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r51)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : specialinvoke $r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : throw $r47
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r52 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r123 = (java.lang.String) $r52
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r123 = (java.lang.String) $r52 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r124 = virtualinvoke r123.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r124 = virtualinvoke r123.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: void assertNounnamedConstraint(java.lang.String,java.lang.String)>(r120, r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: void assertNounnamedConstraint(java.lang.String,java.lang.String)>(r120, r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r53 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PK>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r53 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PK> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r6 = virtualinvoke $r53.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r6 = virtualinvoke $r53.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r54 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PKClustered>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r54 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PKClustered> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r7 = virtualinvoke $r54.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r7 = virtualinvoke $r54.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r55 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedPK>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r55 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedPK> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r8 = virtualinvoke $r55.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r8 = virtualinvoke $r55.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r56 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PKColumn>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r56 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern PKColumn> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r9 = virtualinvoke $r56.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r9 = virtualinvoke $r56.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r57 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern FK>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r57 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern FK> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r10 = virtualinvoke $r57.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r10 = virtualinvoke $r57.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r58 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UQ>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r58 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UQ> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r11 = virtualinvoke $r58.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r11 = virtualinvoke $r58.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r59 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedFK>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r59 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedFK> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r12 = virtualinvoke $r59.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r12 = virtualinvoke $r59.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r60 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedUQ>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r60 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UnnamedUQ> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r13 = virtualinvoke $r60.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r13 = virtualinvoke $r60.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r61 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UQColumn>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r61 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern UQColumn> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r14 = virtualinvoke $r61.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r14 = virtualinvoke $r61.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r62 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern Col>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r62 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern Col> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r15 = virtualinvoke $r62.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r15 = virtualinvoke $r62.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z7 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z7 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z7 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r105 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z8 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z8 = virtualinvoke r6.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z8 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z8 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r100 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z8 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z9 = virtualinvoke r7.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z9 = virtualinvoke r7.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z9 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r95 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z10 = virtualinvoke r8.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z10 = virtualinvoke r8.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z10 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r92 = virtualinvoke r8.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z11 = virtualinvoke r10.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z11 = virtualinvoke r10.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z11 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z11 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r84 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z11 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z12 = virtualinvoke r12.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z12 = virtualinvoke r12.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z12 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r77 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z13 = virtualinvoke r11.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z13 = virtualinvoke r11.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z13 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r72 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z14 = virtualinvoke r13.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z14 = virtualinvoke r13.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z14 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z14 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r69 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z14 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z15 = virtualinvoke r15.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z15 = virtualinvoke r15.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z15 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z15 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r64 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z15 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r63 = <org.apache.ambari.server.orm.db.DDLTestUtils: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r63 = <org.apache.ambari.server.orm.db.DDLTestUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r63.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected definition: {}, context: {}", r124, r119)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r63.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unexpected definition: {}, context: {}", r124, r119) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r64 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r16 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r64)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r16 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r64) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z17 = virtualinvoke r9.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z17 = virtualinvoke r9.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z17 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z17 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r16)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z17 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z18 = virtualinvoke r14.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z18 = virtualinvoke r14.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z18 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z18 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r65 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r16)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z18 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r65 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r66 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>("<default>", $r65)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r66 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>("<default>", $r65) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r66)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r68 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>("<default>", $r67)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r68 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>("<default>", $r67) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r68)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r69 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r70 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r69)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r70 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r71 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>("<default>", $r70)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r71 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>("<default>", $r70) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r71)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r71) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r72 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r73 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r72)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r73 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r72) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r74 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r74 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r75 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r74)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r75 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r76 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>($r73, $r75)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r76 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint uq(java.lang.String,java.util.Collection)>($r73, $r75) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r76)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r77 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r78 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r77)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r78 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r79 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r79 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r80 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r79)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r80 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r79) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r81 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r81 = virtualinvoke r12.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r82 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r81)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r82 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r81) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r83 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.FKConstraint fk(java.lang.String,java.util.Collection,java.lang.String,java.util.Collection)>("<default>", $r78, $r80, $r82)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r83 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.FKConstraint fk(java.lang.String,java.util.Collection,java.lang.String,java.util.Collection)>("<default>", $r78, $r80, $r82) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r83)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r84 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r85 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r85 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r86 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r85)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r86 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r85) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r87 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r87 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r88 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r87)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r88 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r87) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r89 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(4)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r89 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(4) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r90 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r89)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r90 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r89) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r91 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.FKConstraint fk(java.lang.String,java.util.Collection,java.lang.String,java.util.Collection)>($r84, $r86, $r88, $r90)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r91 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.FKConstraint fk(java.lang.String,java.util.Collection,java.lang.String,java.util.Collection)>($r84, $r86, $r88, $r90) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r91)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r92 = virtualinvoke r8.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r93 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r92)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r93 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r92) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r94 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>("<default>", $r93)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r94 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>("<default>", $r93) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r94)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r95 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r96 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r95)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r96 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r95) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r97 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r97 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r98 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r97)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r98 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r97) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r99 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r96, $r98)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r99 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r96, $r98) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r99)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r100 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r101 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r100)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r101 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r100) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r102 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r102 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r103 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r102)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r103 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r102) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r104 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r101, $r103)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r104 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r101, $r103) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r104)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r104) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r105 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r106 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r106 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r107 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r106)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r107 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.Collection toColumns(java.lang.String)>($r106) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r108 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r105, $r107)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r108 = staticinvoke <org.apache.ambari.server.orm.db.Constraint: org.apache.ambari.server.orm.db.SimpleConstraint pk(java.lang.String,java.util.Collection)>($r105, $r107) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r108)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r122 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r108) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r109 = interfaceinvoke r112.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r113 = (java.lang.String) $r109
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r113 = (java.lang.String) $r109 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z24 = virtualinvoke r113.<java.lang.String: boolean matches(java.lang.String)>(".*create\\s+table.*")
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z24 = virtualinvoke r113.<java.lang.String: boolean matches(java.lang.String)>(".*create\\s+table.*") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z24 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z24 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i3 = virtualinvoke r113.<java.lang.String: int indexOf(int)>(40)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z24 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i3 = virtualinvoke r113.<java.lang.String: int indexOf(int)>(40) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i4 = $i3 + 1
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i4 = $i3 + 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i5 = virtualinvoke r113.<java.lang.String: int lastIndexOf(int)>(41)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $i5 = virtualinvoke r113.<java.lang.String: int lastIndexOf(int)>(41) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r114 = virtualinvoke r113.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r114 = virtualinvoke r113.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r110 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern InnerList>
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r110 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern InnerList> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r115 = virtualinvoke $r110.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r114)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r115 = virtualinvoke $r110.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r114) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z25 = virtualinvoke r115.<java.util.regex.Matcher: boolean find()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z25 = virtualinvoke r115.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z25 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z25 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r116 = virtualinvoke r115.<java.util.regex.Matcher: java.lang.String group()>()
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : if $z25 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r113)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r113) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z0 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r116 = virtualinvoke r115.<java.util.regex.Matcher: java.lang.String group()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r111 = virtualinvoke r116.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\,", "|")
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $r111 = virtualinvoke r116.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\,", "|") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r113 = virtualinvoke r113.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r116, $r111)
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : r113 = virtualinvoke r113.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r116, $r111) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z25 = virtualinvoke r115.<java.util.regex.Matcher: boolean find()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : goto [?= $z25 = virtualinvoke r115.<java.util.regex.Matcher: boolean find()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.parseTableDefs : $z25 = virtualinvoke r115.<java.util.regex.Matcher: boolean find()>()
