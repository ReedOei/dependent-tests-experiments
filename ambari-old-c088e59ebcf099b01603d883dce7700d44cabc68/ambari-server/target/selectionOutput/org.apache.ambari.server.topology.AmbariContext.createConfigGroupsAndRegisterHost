org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r16 = (org.apache.ambari.server.topology.HostGroupInfo) $r15
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r16 = (org.apache.ambari.server.topology.HostGroupInfo) $r15 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = virtualinvoke $r16.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = virtualinvoke $r16.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r17 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r62 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r62 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r18 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r18 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r68 = interfaceinvoke $r18.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r68 = interfaceinvoke $r18.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r19 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r19 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r69 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r69 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : return
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r70 = (java.util.Map$Entry) $r20
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r70 = (java.util.Map$Entry) $r20 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r71 = (java.lang.String) $r21
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r71 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r72 = (java.util.Map) $r22
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r72 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r68, r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r68, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = (org.apache.ambari.server.topology.HostGroupInfo) $r24
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = (org.apache.ambari.server.topology.HostGroupInfo) $r24 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = virtualinvoke $r25.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = virtualinvoke $r25.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = virtualinvoke $r25.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r58 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r58 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r56.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r60, $r54)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r56.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r60, $r54) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r61.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r54)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r61.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r54) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r61
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r26.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r26.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r74 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r26.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r74 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r27 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r74 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r27 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r76 = interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r74)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r76 = interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r74) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = new org.apache.ambari.server.topology.AmbariContext$8
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = new org.apache.ambari.server.topology.AmbariContext$8 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r29.<org.apache.ambari.server.topology.AmbariContext$8: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r76)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r29.<org.apache.ambari.server.topology.AmbariContext$8: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r76) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r8 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r7, $r29)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r8 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r7, $r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = new org.apache.ambari.server.controller.ConfigGroupRequest
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = new org.apache.ambari.server.controller.ConfigGroupRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r8)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r8) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r30.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r74, r73, r71, r71, "Host Group Configuration", $r31, r72)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r30.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r74, r73, r71, r71, "Host Group Configuration", $r31, r72) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r32 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r32 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r33 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r33 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = interfaceinvoke $r32.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r33)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = interfaceinvoke $r32.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r33) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r10 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r34
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r10 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r34 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r30)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r10 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r34 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r45 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r44 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r44 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r48)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r49 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r49 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r53, $r43)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r49.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r53, $r43) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r49
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r10.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r35)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r10.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r35) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r10.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r35) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r43 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r63 = (java.util.Map$Entry) $r36
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r63 = (java.util.Map$Entry) $r36 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r37 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r37 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r64 = (java.lang.String) $r37
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r64 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r65 = virtualinvoke r4.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r64)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r65 = virtualinvoke r4.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r64) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r39 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r39 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = (java.util.Map) $r39
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = (java.util.Map) $r39 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r66 = interfaceinvoke $r38.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r64, r2, $r40, null)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r66 = interfaceinvoke $r38.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r64, r2, $r40, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r41 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r65)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r41 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r65) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = (java.util.Map) $r41
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = (java.util.Map) $r41 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r67 != null
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r67 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r67 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r66)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r66) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r42.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r42.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = $r42
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = $r42 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r65, $r42)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r65, $r42) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r66)
