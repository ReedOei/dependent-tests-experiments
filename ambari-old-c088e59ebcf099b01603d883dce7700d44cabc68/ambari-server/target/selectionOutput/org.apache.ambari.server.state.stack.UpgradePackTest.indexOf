org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : i1 = 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : return -1
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : r4 = (java.util.Map$Entry) $r6
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : r4 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r8 = (java.lang.String) $r7
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : return i1
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackTest.indexOf : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
