org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r1 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database started *******************************")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database started *******************************") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : if z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database started *******************************") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("An error occurred during database consistency check.", $r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("An error occurred during database consistency check.", $r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : throw $r4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : if z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixHostComponentStatesCountEqualsHostComponentsDesiredStates()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : if z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkSchemaName()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : if z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkSchemaName()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkMySQLEngine()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkSchemaName()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkMySQLEngine()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsNotMappedToService()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkMySQLEngine()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsNotMappedToService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsSelectedMoreThanOnce()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsNotMappedToService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsSelectedMoreThanOnce()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForHostsWithoutState()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForConfigsSelectedMoreThanOnce()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForHostsWithoutState()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForHostsWithoutState()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkHostComponentStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForLargeTables()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkServiceConfigs()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForLargeTables()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkForLargeTables()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database completed *******************************")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database completed *******************************") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r3 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult checkResult>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("******************************* Check database completed *******************************") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r3 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult checkResult> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : return $r3
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r3 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.checks.DatabaseConsistencyCheckResult checkResult> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixHostComponentStatesCountEqualsHostComponentsDesiredStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixClusterConfigsNotMappedToAnyService()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixHostComponentStatesCountEqualsHostComponentsDesiredStates()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixClusterConfigsNotMappedToAnyService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixConfigsSelectedMoreThanOnce()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixClusterConfigsNotMappedToAnyService()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixConfigsSelectedMoreThanOnce()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkSchemaName()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void fixConfigsSelectedMoreThanOnce()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.runAllDBChecks : $r4 := @caughtexception
