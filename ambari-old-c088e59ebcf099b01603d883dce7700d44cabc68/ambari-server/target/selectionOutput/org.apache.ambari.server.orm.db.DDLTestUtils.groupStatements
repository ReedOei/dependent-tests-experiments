org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r4 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : return $r4
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r3 = (java.lang.String) $r5
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r6 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CommentLine>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r6 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CommentLine> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z1 != 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r8 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern EmptyLine>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r8 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern EmptyLine> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z2 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z2 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z2 != 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r10 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CommitLine>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r10 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CommitLine> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z3 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z3 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z3 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r12 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CreateTable>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r12 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CreateTable> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z4 = virtualinvoke $r13.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z4 = virtualinvoke $r13.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z4 != 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r30 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern AlterTable>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z16 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z16 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z16 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z16 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r22 = new java.lang.IllegalStateException
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z16 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r14 = new java.util.ArrayList
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r14)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r15 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r15 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r16 = (java.util.ArrayList) $r15
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r16 = (java.util.ArrayList) $r15 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r17 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r17 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z6 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(";")
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z6 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(";") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z6 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z6 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r18 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(32)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z6 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r18 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(32) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r19 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r19 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r20 = (java.lang.Iterable) $r19
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r20 = (java.lang.Iterable) $r19 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r21 = virtualinvoke $r18.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r20)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r21 = virtualinvoke $r18.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r20) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r22 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unfinished statement: ")
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unfinished statement: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r25 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r25 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnew statement: ")
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnew statement: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : throw $r22
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r30 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern AlterTable> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r31 = virtualinvoke $r30.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r31 = virtualinvoke $r30.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z8 = virtualinvoke $r31.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z8 = virtualinvoke $r31.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z8 != 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z8 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r32 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CreateIndex>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z8 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z16 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r32 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern CreateIndex> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r33 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r33 = virtualinvoke $r32.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z9 = virtualinvoke $r33.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z9 = virtualinvoke $r33.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z9 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z16 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z10 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z10 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z10 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r37 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern EndStatement>
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z11 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z11 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z11 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z11 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r34 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z11 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r34 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r35 = (java.util.ArrayList) $r34
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r35 = (java.util.ArrayList) $r34 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r36 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r36 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r36)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r35.<java.util.ArrayList: boolean add(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r37 = <org.apache.ambari.server.orm.db.DDLTestUtils: java.util.regex.Pattern EndStatement> >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r38 = virtualinvoke $r37.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r38 = virtualinvoke $r37.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z13 = virtualinvoke $r38.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z13 = virtualinvoke $r38.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z13 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z13 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r39 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : if $z13 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $z11 = virtualinvoke r46.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r39 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r40 = (java.util.ArrayList) $r39
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r40 = (java.util.ArrayList) $r39 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r41 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r41 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripComment(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r41)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r42 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(32)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r42 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(32) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r43 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r43 = virtualinvoke r46.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r44 = (java.lang.Iterable) $r43
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r44 = (java.lang.Iterable) $r43 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r45 = virtualinvoke $r42.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r44)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : $r45 = virtualinvoke $r42.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r44) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r45)
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : r46 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.groupStatements : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
