org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/instance_name") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r2 = (java.lang.String) $r11
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r2 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r2 == null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z2 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r12 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View instance name must be provided")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View instance name must be provided") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : throw $r12
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z2 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z2 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r13 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/version")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r13 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/version") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r3 = (java.lang.String) $r13
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r3 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r3 == null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z3 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r14 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r14 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View version must be provided")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View version must be provided") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : throw $r14
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z3 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z3 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r14 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/view_name")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/view_name") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r4 = (java.lang.String) $r15
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r4 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r4 == null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z4 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r16 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r16 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View name must be provided")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View name must be provided") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : throw $r16
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z4 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z4 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r16 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r5 = staticinvoke <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry getInstance()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r5 = staticinvoke <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry getInstance()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r6 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>(r4, r3)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r6 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>(r4, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r7 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r4, r3)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r7 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r4, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r6 != null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r52 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r6 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z0 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getViewInstanceEntity(java.lang.String,java.lang.String)>(r7, r2)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r60 != null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r60 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r51 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r60 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z5 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/label")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z5 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/label") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z5 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r49 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/label")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z6 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/description")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z6 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/description") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z6 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r47 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/description")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/visible")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/visible") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r8 = (java.lang.String) $r17
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r8 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r46 = r60
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r46 = r60 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r8 != null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z13 = 1
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z13 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z13 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setVisible(boolean)>($z13)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setVisible(boolean)>($z13) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z7 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/icon_path")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z7 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/icon_path") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z7 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r44 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/icon_path")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z8 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/icon64_path")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z8 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/icon64_path") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z8 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r42 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/icon64_path")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z9 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_handle")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z9 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_handle") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z9 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r40 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/cluster_handle")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z14 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r38 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/cluster_type")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r19 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : z1 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkAdmin()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : z1 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkAdmin()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r64 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r64 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z15 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r23 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z10 = interfaceinvoke $r19.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z10 = interfaceinvoke $r19.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z10 != 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r21 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : return r60
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r58 := @caughtexception
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r59 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r59.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Caught exception trying to set view properties.", $r58)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r59.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Caught exception trying to set view properties.", $r58) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : throw $r59
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r21 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r22 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r21 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r58 := @caughtexception
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r22 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: void setViewInstanceProperties(org.apache.ambari.server.orm.entities.ViewInstanceEntity,java.util.Map,org.apache.ambari.server.view.configuration.ViewConfig,java.lang.ClassLoader)>(r60, $r19, $r21, $r22)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r22 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r58 := @caughtexception
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: void setViewInstanceProperties(org.apache.ambari.server.orm.entities.ViewInstanceEntity,java.util.Map,org.apache.ambari.server.view.configuration.ViewConfig,java.lang.ClassLoader)>(r60, $r19, $r21, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= return r60]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: void setViewInstanceProperties(org.apache.ambari.server.orm.entities.ViewInstanceEntity,java.util.Map,org.apache.ambari.server.view.configuration.ViewConfig,java.lang.ClassLoader)>(r60, $r19, $r21, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r58 := @caughtexception
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= return r60] >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : return r60
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r23 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r9 = (java.util.Map$Entry) $r23
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r9 = (java.util.Map$Entry) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r24 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r24 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r10 = (java.lang.String) $r24
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r10 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z11 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ViewInstanceInfo/properties/")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z11 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ViewInstanceInfo/properties/") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z11 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z1 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z12 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ViewInstanceInfo/instance_data/")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z12 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ViewInstanceInfo/instance_data/") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z12 == 0
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r25 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r25 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r27 = (java.lang.String) $r25
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r27 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r26 = "ViewInstanceInfo/instance_data/"
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r26 = "ViewInstanceInfo/instance_data/" >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $i0 = virtualinvoke $r26.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $i0 = virtualinvoke $r26.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String substring(int)>($i0)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String substring(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r30 = (java.lang.String) $r29
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r30 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>($r28, $r30)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>($r28, $r30) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r31 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r31 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r33 = (java.lang.String) $r31
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r33 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r32 = "ViewInstanceInfo/properties/"
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r32 = "ViewInstanceInfo/properties/" >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $i1 = virtualinvoke $r32.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $i1 = virtualinvoke $r32.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r34 = virtualinvoke $r33.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r35 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r35 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r36 = (java.lang.String) $r35
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r36 = (java.lang.String) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= (branch)]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z15 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r38 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/cluster_type") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r62 = (java.lang.String) $r38
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r62 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r39 = staticinvoke <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType valueOf(java.lang.String)>(r62)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r39 = staticinvoke <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType valueOf(java.lang.String)>(r62) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterType(org.apache.ambari.view.ClusterType)>($r39)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterType(org.apache.ambari.view.ClusterType)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r19 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r40 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/cluster_handle") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r61 = (java.lang.String) $r40
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r61 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r61 == null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r61 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r61)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r61 == null >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterHandle(java.lang.Long)>(null)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterHandle(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r61) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterHandle(java.lang.Long)>($r41)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setClusterHandle(java.lang.Long)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type")]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type")] >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z14 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_type")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r42 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/icon64_path") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r43 = (java.lang.String) $r42
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r43 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setIcon64(java.lang.String)>($r43)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setIcon64(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z9 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/cluster_handle")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r44 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/icon_path") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r45 = (java.lang.String) $r44
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r45 = (java.lang.String) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setIcon(java.lang.String)>($r45)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setIcon(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z8 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/icon64_path")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z13 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= virtualinvoke $r46.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setVisible(boolean)>($z13)]
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : goto [?= virtualinvoke $r46.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setVisible(boolean)>($z13)] >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setVisible(boolean)>($z13)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r47 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/description") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r48 = (java.lang.String) $r47
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r48 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setDescription(java.lang.String)>($r48)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setDescription(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/visible")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r49 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("ViewInstanceInfo/label") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r50 = (java.lang.String) $r49
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r50 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setLabel(java.lang.String)>($r50)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke r60.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setLabel(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z6 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/description")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r51 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = $r51
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = $r51 >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setName(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setViewName(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setViewName(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r6)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $z5 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("ViewInstanceInfo/label")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : r60 = virtualinvoke r5.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getViewInstanceEntity(java.lang.String,java.lang.String)>(r7, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : if r60 != null
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r52 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r53 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r53 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View name ")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View name ") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.")
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.") >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57)
org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ViewInstanceResourceProvider.toEntity : throw $r52
