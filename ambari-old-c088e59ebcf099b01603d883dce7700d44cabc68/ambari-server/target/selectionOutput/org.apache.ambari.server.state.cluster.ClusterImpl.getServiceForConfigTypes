org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r6 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Looking for service for config types {}", r1)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Looking for service for config types {}", r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r22 = null
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r22 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r7 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r7 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Service {} returning", r22)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Service {} returning", r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : return r22
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r3 = (java.lang.String) $r8
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: com.google.common.collect.Multimap serviceConfigTypes>
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: com.google.common.collect.Multimap serviceConfigTypes> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r10 = interfaceinvoke $r9.<com.google.common.collect.Multimap: java.util.Collection entries()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r10 = interfaceinvoke $r9.<com.google.common.collect.Multimap: java.util.Collection entries()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r4 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r5 = (java.util.Map$Entry) $r11
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r5 = (java.util.Map$Entry) $r11 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r13 = (java.lang.String) $r12
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r13, r3)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r13, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z2 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if r22 == null
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if r22 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if r22 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r22 = (java.lang.String) $r14
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : r22 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $r15 == null
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $r15 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $r15 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r16 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r17 = (java.lang.String) $r16
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r22, $r17)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r22, $r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z3 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r18 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r18 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[0] = r3
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[0] = r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[1] = r22
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[1] = r22 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r20 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[2] = $r20
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r19[2] = $r20 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Config type %s belongs to %s service, but also qualified for %s", $r19)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Config type %s belongs to %s service, but also qualified for %s", $r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getServiceForConfigTypes : throw $r18
