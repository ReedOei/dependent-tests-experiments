org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r3 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r21 = interfaceinvoke $r20.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r21 = interfaceinvoke $r20.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r21.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r21.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : throw $r19
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r22 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r22 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r22 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : return z2
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = (org.apache.ambari.server.state.Service) $r9
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = (org.apache.ambari.server.state.Service) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = (org.apache.ambari.server.state.Service) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z2 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=")
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r18)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 := @caughtexception
