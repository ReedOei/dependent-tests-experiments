org.apache.ambari.server.utils.StageUtils.getATestStage : $r14 = <org.apache.ambari.server.utils.StageUtils: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r3 = interfaceinvoke $r14.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, "context", r1, r2)
org.apache.ambari.server.utils.StageUtils.getATestStage : r3 = interfaceinvoke $r14.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, "context", r1, r2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r16 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role NAMENODE>
org.apache.ambari.server.utils.StageUtils.getATestStage : $r16 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role NAMENODE> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r17 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.utils.StageUtils.getATestStage : $r17 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r15 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent
org.apache.ambari.server.utils.StageUtils.getATestStage : $r15 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r15.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent: void <init>(java.lang.String,java.lang.String,long,java.lang.String)>("NAMENODE", r0, l2, "HDP-1.2.0")
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r15.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent: void <init>(java.lang.String,java.lang.String,long,java.lang.String)>("NAMENODE", r0, l2, "HDP-1.2.0") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,java.lang.String,java.lang.String,boolean,boolean)>(r0, $r16, $r17, $r15, "cluster1", "HDFS", 0, 0)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,java.lang.String,java.lang.String,boolean,boolean)>(r0, $r16, $r17, $r15, "cluster1", "HDFS", 0, 0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r18 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r0, "NAMENODE")
org.apache.ambari.server.utils.StageUtils.getATestStage : $r18 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r0, "NAMENODE") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r4 = virtualinvoke $r18.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : r4 = virtualinvoke $r18.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $l3 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: long getRequestId()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : $l3 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: long getRequestId()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $l4 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: long getStageId()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : $l4 = virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: long getStageId()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l3, $l4)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l3, $l4) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r19 = new java.util.ArrayList
org.apache.ambari.server.utils.StageUtils.getATestStage : $r19 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r19.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r19.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("host2")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("host2") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r20 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r20 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r20.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r20.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "2560000000")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "2560000000") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r22 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r22 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r22.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r22.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", $r20)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", $r20) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>($r22)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>($r22) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r24 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r24 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r24.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r24.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r25 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r25 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r25.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r25.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r26 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r26 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r26.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r26.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "true")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "true") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", $r26)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", $r26) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfsSite", $r25)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfsSite", $r25) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>($r24)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>($r24) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r30 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r30 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r30.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r30.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jdklocation", "/x/y/z")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jdklocation", "/x/y/z") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_version", "1.2.0")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_version", "1.2.0") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_name", "HDP")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_name", "HDP") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>($r30)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>($r30) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r34 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r34 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r34.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r34.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("format", "false")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("format", "false") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r34)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r34) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r36 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r36 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r36.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r36.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", "600")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", "600") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r36)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r4.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r36) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : return r3
