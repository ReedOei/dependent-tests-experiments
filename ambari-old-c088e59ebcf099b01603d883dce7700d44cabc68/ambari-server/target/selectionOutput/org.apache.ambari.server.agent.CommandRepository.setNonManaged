org.apache.ambari.server.agent.CommandRepository.setNonManaged : $r3 = r0.<org.apache.ambari.server.agent.CommandRepository: java.util.List m_repositories> >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.CommandRepository.setNonManaged : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.CommandRepository.setNonManaged : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : if $z0 == 0
org.apache.ambari.server.agent.CommandRepository.setNonManaged : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.CommandRepository.setNonManaged : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : return
org.apache.ambari.server.agent.CommandRepository.setNonManaged : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : r2 = (org.apache.ambari.server.agent.CommandRepository$Repository) $r4
org.apache.ambari.server.agent.CommandRepository.setNonManaged : r2 = (org.apache.ambari.server.agent.CommandRepository$Repository) $r4 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$302(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r2, null)
org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$302(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r2, null) >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$402(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r2, null)
org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$402(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r2, null) >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: boolean access$502(org.apache.ambari.server.agent.CommandRepository$Repository,boolean)>(r2, 0)
org.apache.ambari.server.agent.CommandRepository.setNonManaged : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: boolean access$502(org.apache.ambari.server.agent.CommandRepository$Repository,boolean)>(r2, 0) >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.CommandRepository.setNonManaged : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setNonManaged : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
