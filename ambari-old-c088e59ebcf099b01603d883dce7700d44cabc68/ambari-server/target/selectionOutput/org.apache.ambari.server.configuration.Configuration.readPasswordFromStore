org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r14 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r3 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r3 == null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r15 = null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r3 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r15 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r4 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r4 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r15 = virtualinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r4 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r12 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r13 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>("Error reading from credential store.")
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>("Error reading from credential store.") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : virtualinvoke $r12.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : virtualinvoke $r12.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r15 == null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r15 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r11 = new java.lang.String
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r15 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $z0 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialProvider: boolean isAliasString(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $z0 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialProvider: boolean isAliasString(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r7 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>("Raw password provided, not an alias. It cannot be read from credential store.")
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>("Raw password provided, not an alias. It cannot be read from credential store.") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r7 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read password for alias = ")
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read password for alias = ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r10)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r14]
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r14] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r11 = new java.lang.String >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r11.<java.lang.String: void <init>(char[])>(r15)
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke $r11.<java.lang.String: void <init>(char[])>(r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r14 = $r11
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r14 = $r11 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r14]
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= return r14] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r14
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r15 = virtualinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= (branch)]
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r15 = virtualinvoke $r4.<org.apache.ambari.server.security.encryption.CredentialProvider: char[] getPasswordForAlias(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r12 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if r15 == null
