org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/stageutils/KerberosKeytabController;") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r2 = (org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController) $r9
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r2 = (org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController) $r9 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r10 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController: java.util.Set getFilteredKeytabs(java.util.Map,java.util.Set,java.util.Collection)>(null, null, null)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r10 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.stageutils.KerberosKeytabController: java.util.Set getFilteredKeytabs(java.util.Map,java.util.Set,java.util.Collection)>(null, null, null) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r12 = newarray (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab)[1]
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r12 = newarray (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab)[1] >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r13 = new org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r13 = new org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r14 = newarray (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal)[1]
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r14 = newarray (org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal)[1] >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r15 = new org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r15 = new org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r15.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: void <init>(java.lang.Long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, "c6403.ambari.apache.org", "dn/_HOST@_REALM", 0, "/tmp", "HDFS", "DATANODE", "/etc/security/keytabs/dn.service.keytab")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r15.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal: void <init>(java.lang.Long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, "c6403.ambari.apache.org", "dn/_HOST@_REALM", 0, "/tmp", "HDFS", "DATANODE", "/etc/security/keytabs/dn.service.keytab") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r14[0] = $r15
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r14[0] = $r15 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r17 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r14)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r17 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r14) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,boolean,boolean)>("/etc/security/keytabs/dn.service.keytab", "hdfs", "r", "hadoop", "", $r17, 0, 0)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r13.<org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosKeytab: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,boolean,boolean)>("/etc/security/keytabs/dn.service.keytab", "hdfs", "r", "hadoop", "", $r17, 0, 0) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r12[0] = $r13
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r18 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r12)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r18 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r19 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r19 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r21[0] = r2
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r21[0] = r2 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r22 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r22 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r3 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("kerberosKeytabController")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r3 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("kerberosKeytabController") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r23 = r0.<org.apache.ambari.server.agent.TestHeartbeatHandler: org.junit.rules.TemporaryFolder temporaryFolder>
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r23 = r0.<org.apache.ambari.server.agent.TestHeartbeatHandler: org.junit.rules.TemporaryFolder temporaryFolder> >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r4 = virtualinvoke $r23.<org.junit.rules.TemporaryFolder: java.io.File newFolder()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : r4 = virtualinvoke $r23.<org.junit.rules.TemporaryFolder: java.io.File newFolder()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r24 = new java.io.File
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r24 = new java.io.File >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, "c6403.ambari.apache.org")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, "c6403.ambari.apache.org") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $z0 = virtualinvoke $r24.<java.io.File: boolean mkdirs()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $z0 = virtualinvoke $r24.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : if $z0 == 0
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r31 = new java.io.File
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r25 = new java.lang.Exception
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r25 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r28 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r28 = virtualinvoke $r24.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String)>($r30)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r25.<java.lang.Exception: void <init>(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : throw $r25
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r31 = new java.io.File >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r32 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>("/etc/security/keytabs/dn.service.keytab")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r32 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>("/etc/security/keytabs/dn.service.keytab") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, $r32)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, $r32) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r33 = new java.io.FileWriter
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r33 = new java.io.FileWriter >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r33.<java.io.FileWriter: void <init>(java.io.File)>($r31)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r33.<java.io.FileWriter: void <init>(java.io.File)>($r31) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r34 = new java.io.BufferedWriter
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : $r34 = new java.io.BufferedWriter >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r34.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r33)
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : specialinvoke $r34.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r33) >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke $r34.<java.io.BufferedWriter: void write(java.lang.String)>("hello")
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke $r34.<java.io.BufferedWriter: void write(java.lang.String)>("hello") >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke $r34.<java.io.BufferedWriter: void close()>()
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : virtualinvoke $r34.<java.io.BufferedWriter: void close()>() >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : goto [?= return r4]
org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : goto [?= return r4] >>>>>>>> org.apache.ambari.server.agent.TestHeartbeatHandler.createTestKeytabData : return r4
