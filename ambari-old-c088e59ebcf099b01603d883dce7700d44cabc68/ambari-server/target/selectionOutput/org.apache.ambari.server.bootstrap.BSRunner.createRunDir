org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r1 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File bootDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z0 != 0
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z0 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r11 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File bootDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z0 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r2 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r2 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z1 == 0
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z1 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r10 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z1 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r3 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r3 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z2 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z2 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z2 != 0
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z2 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r4 = new java.io.IOException
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z2 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : return
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r4 = new java.io.IOException >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ")
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ") >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r7 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r7 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9)
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : throw $r4
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r10 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r10)
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r10) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r3 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r11 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File bootDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z3 = virtualinvoke $r11.<java.io.File: boolean mkdirs()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $z3 = virtualinvoke $r11.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z3 != 0
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z3 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r12 = new java.io.IOException
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : if $z3 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r2 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File requestIdDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r12 = new java.io.IOException >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ")
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ") >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r15 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File bootDir>
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r15 = r0.<org.apache.ambari.server.bootstrap.BSRunner: java.io.File bootDir> >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.bootstrap.BSRunner.createRunDir : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createRunDir : throw $r12
