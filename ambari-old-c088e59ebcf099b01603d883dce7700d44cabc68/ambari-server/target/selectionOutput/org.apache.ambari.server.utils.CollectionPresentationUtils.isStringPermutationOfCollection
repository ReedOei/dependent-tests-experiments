org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $i2 = virtualinvoke r10.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $i3 = $i2 - i1
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $i3 = $i2 - i1 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r11 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r11 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r5 = new java.util.ArrayList
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r7 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>($r6)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r7 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z0 == 0
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : return $z1
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r4 = (java.lang.String) $r9
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : r4 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z2 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z2 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z2 == 0
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r4)
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
