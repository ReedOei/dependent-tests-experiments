org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\([^)]*\\)") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r8 = new java.util.HashSet
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z0 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : return $r8
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r5 = (java.lang.String) $r9
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r6 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : r6 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : i1 = 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z1 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $i0 = virtualinvoke r6.<java.util.regex.Matcher: int start()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(i1)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(i1) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r12 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r12 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $i0 = virtualinvoke r6.<java.util.regex.Matcher: int start()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(i1, $i0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(i1, $i0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r16 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r15)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r16 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r18 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $r18 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : i1 = virtualinvoke r6.<java.util.regex.Matcher: int end()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : i1 = virtualinvoke r6.<java.util.regex.Matcher: int end()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : goto [?= $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : goto [?= $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.createPatterns : $z1 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()
