org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : r23 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: java.lang.Class getServerActionClass(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r20 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r15 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r4 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r4 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r5[0] = r1
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r5[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ready to init server action %s", $r5)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ready to init server action %s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : r3 = virtualinvoke r23.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/ServerAction;")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : r3 = virtualinvoke r23.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/ServerAction;") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r3 != null
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r7 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: com.google.inject.Injector access$700()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r7 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: com.google.inject.Injector access$700()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(r3)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r9 = (org.apache.ambari.server.serveraction.ServerAction) $r8
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r9 = (org.apache.ambari.server.serveraction.ServerAction) $r8 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : return $r9
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to execute server action class, invalid type: ")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to execute server action class, invalid type: ") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r14)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : throw $r10
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r15 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load server action class: ")
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load server action class: ") >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : throw $r15
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r20 = staticinvoke <org.apache.ambari.server.serveraction.ServerActionExecutor: org.slf4j.Logger access$400()>() >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r21[0] = r1
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r21[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not find %s in Ambari, try to load it from external directories", $r21)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Did not find %s in Ambari, try to load it from external directories", $r21) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r22)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : r23 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: java.lang.Class getServiceLevelServerActionClass(java.lang.String,java.util.Map)>(r1, r2)
org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : r23 = specialinvoke r0.<org.apache.ambari.server.serveraction.ServerActionExecutor$Worker: java.lang.Class getServiceLevelServerActionClass(java.lang.String,java.util.Map)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.ServerActionExecutor$Worker.createServerAction : if r23 != null
