org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r3 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r3
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r3 >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Collection getAllConfigs()>()
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Collection getAllConfigs()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Cluster;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r12 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r12 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/AlertDefinitionDAO;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;")
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/ConfigHelper;") >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15)
org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.alerts.AlertDefinitionHashTest$MockModule.configure : return
