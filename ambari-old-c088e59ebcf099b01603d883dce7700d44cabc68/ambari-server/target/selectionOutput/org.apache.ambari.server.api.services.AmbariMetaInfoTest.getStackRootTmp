org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r2 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ambari-metaInfo")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ambari-metaInfo") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r6)
org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.getStackRootTmp : return $r2
