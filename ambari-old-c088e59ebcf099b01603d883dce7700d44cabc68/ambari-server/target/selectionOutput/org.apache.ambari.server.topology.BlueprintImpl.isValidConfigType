org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r3 = "cluster-env" >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z0 != 0
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r4 = "global"
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : return 1
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r4 = "global" >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z1 == 0
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : return 1
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r5 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r5 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : r2 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r1)
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : r2 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r6 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintImpl: java.util.Collection getServices()>()
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $r6 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintImpl: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z2 = interfaceinvoke $r6.<java.util.Collection: boolean contains(java.lang.Object)>(r2)
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : $z2 = interfaceinvoke $r6.<java.util.Collection: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z2 == 0
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : return 1
org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.isValidConfigType : return 0
