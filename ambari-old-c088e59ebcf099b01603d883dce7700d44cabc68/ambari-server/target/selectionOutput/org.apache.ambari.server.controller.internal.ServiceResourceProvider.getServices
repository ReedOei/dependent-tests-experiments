org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r7 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r8 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r8 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments, cluster name cannot be null")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments, cluster name cannot be null") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r8
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z0 = virtualinvoke $r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z0 = virtualinvoke $r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r8 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r2 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r2 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r27 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r27.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r26)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r27.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", $r26) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r27
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $r11 = new java.util.HashSet]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $r11 = new java.util.HashSet] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r11 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r12 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r24 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z5 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z5 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r31 = null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r31 = null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r13 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r13 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r17 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r13 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r5 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r5 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z6 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : return $r11
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r6 = (org.apache.ambari.server.state.Service) $r14
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r6 = (org.apache.ambari.server.state.Service) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r16 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r15 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r15 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r16 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r31 == $r16
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r31 == $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r31 == $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r15 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r17 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z2 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z2 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z2 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r31 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r31 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z3 = virtualinvoke r31.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z3 = virtualinvoke r31.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r19 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z5 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z5 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r19 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r19
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r24 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r30 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r24)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r30 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r25 = interfaceinvoke r30.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r25 = interfaceinvoke r30.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : return $r11
