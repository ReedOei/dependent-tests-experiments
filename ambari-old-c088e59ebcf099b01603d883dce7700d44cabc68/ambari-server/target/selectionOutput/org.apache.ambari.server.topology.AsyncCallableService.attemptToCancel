org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r3 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, cancelling", $r2)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, cancelling", $r2) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z0 = interfaceinvoke r1.<java.util.concurrent.Future: boolean isDone()>()
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z0 = interfaceinvoke r1.<java.util.concurrent.Future: boolean isDone()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z0 != 0
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z1 = interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>(1)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r5 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r5 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r4 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r4 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} already done", $r4)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} already done", $r4) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : return
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $z1 = interfaceinvoke r1.<java.util.concurrent.Future: boolean cancel(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z1 == 0
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r5 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} cancelled", $r6)
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} cancelled", $r6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : goto [?= return]
org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.attemptToCancel : return
