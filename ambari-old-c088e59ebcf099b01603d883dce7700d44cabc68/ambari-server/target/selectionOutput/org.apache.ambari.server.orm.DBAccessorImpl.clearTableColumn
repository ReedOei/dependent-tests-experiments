org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableExists(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : if $z0 == 0
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r5 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r5 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} table doesn\'t exists, skipping", r1)
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} table doesn\'t exists, skipping", r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : return
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r7 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r7 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6[0] = $r7
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6[0] = $r7 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r8 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r8 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6[1] = $r8
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r6[1] = $r8 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UPDATE %s SET %s = ?", $r6)
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UPDATE %s SET %s = ?", $r6) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r9 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r9 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r9[0] = r3
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : $r9[0] = r3 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executePreparedUpdate(java.lang.String,java.lang.Object[])>(r4, $r9)
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executePreparedUpdate(java.lang.String,java.lang.Object[])>(r4, $r9) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTableColumn : return
