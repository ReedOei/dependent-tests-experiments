org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r1 = new java.lang.UnsupportedOperationException
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r1 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r3 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r3 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an internal type.")
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an internal type.") >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6)
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : throw $r1
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r7 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r8 = $r7[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r8
