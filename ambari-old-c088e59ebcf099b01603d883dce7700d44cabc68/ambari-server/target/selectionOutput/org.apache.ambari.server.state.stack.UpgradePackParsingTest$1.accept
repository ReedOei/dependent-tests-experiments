org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("upgrades")
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("upgrades") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : return 0
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".xml")
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : return 0
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z2 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("config-upgrade.xml")
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : $z2 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("config-upgrade.xml") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z2 != 0
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : return 1
org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePackParsingTest$1.accept : return 0
