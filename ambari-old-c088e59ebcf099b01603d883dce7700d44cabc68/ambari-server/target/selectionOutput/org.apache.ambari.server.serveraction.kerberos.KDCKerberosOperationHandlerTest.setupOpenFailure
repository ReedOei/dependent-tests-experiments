org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "Lorg/apache/ambari/server/utils/ShellCommandUtil$Result;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : r2 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $z0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $i0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $i0 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r14 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r14 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("STDOUT data")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("STDOUT data") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r18 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("STDERR data")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("STDERR data") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r22 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r22 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest: java.lang.String[] arrayContains(java.lang.String)>("kinit") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r24 = (java.util.Map) $r23
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r24 = (java.util.Map) $r23 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;")
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "Lorg/apache/ambari/server/serveraction/kerberos/KDCKerberosOperationHandler$InteractivePasswordHandler;") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r26 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r25
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r26 = (org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler) $r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r27 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r22, $r24, $r26)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r27 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r22, $r24, $r26) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r28 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r29 = interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : $r29 = interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCKerberosOperationHandlerTest.setupOpenFailure : return
