org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r4 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r5 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r5 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $r4 != $r5
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $r4 != $r5 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $r4 != $r5 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $r4 != $r5 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r21 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r21 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r20[0] = $r21
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not parse version definition for %s.  Upgrade will not proceed.", $r20)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not parse version definition for %s.  Upgrade will not proceed.", $r20) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r22 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r22 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r29)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r29) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : throw $r22
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r26 = virtualinvoke r25.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r1)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r26 = virtualinvoke r25.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r1) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r24 = virtualinvoke r26.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r26 = virtualinvoke r25.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.ClusterVersionSummary getClusterSummary(org.apache.ambari.server.state.Cluster)>(r1) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r24 = virtualinvoke r26.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z0 = interfaceinvoke r24.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r24 = virtualinvoke r26.<org.apache.ambari.server.state.repository.ClusterVersionSummary: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z0 = interfaceinvoke r24.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z0 == 0
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z0 = interfaceinvoke r24.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z1 == 0
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = null
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : return r24
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = null >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r6 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = null >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke r30.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r17 = <org.apache.ambari.server.state.UpgradeContext: org.slf4j.Logger LOG>
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r17 = <org.apache.ambari.server.state.UpgradeContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r18 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r18 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping orchestration for service {}, as it was defined to upgrade, but is not installed in cluster {}", r31, $r18)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping orchestration for service {}, as it was defined to upgrade, but is not installed in cluster {}", r31, $r18) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r6 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = (java.lang.String) $r6
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r6 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r32 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r31)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r31 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r32 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r31) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r7 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_sourceRepositoryMap>
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r32 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r31) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r7 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_sourceRepositoryMap> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r8 = interfaceinvoke r32.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r7 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_sourceRepositoryMap> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r8 = interfaceinvoke r32.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, $r8)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r8 = interfaceinvoke r32.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, $r8) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r10 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_targetRepositoryMap>
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, $r8) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r10 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_targetRepositoryMap> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r2)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r10 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.Map m_targetRepositoryMap> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r2) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r2) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r16 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r13 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r13 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12[0] = $r13
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r13 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("When using a VDF of type %s, the available services must be defined in the VDF", $r12)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("When using a VDF of type %s, the available services must be defined in the VDF", $r12) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r14 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("When using a VDF of type %s, the available services must be defined in the VDF", $r12) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r14 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r14.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r27)
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r14 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r14.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : throw $r14
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : specialinvoke $r14.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : throw $r14 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r19 := @caughtexception
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r24 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r24 = interfaceinvoke $r15.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()]
org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : goto [?= r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.getServicesForUpgrade : r30 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>()
