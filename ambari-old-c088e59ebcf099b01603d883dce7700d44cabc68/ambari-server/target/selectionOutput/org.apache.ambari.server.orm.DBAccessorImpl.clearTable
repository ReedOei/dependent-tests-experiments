org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableExists(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : if $z0 == 0
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r3 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r3 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} table doesn\'t exists, skipping", r1)
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} table doesn\'t exists, skipping", r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : return
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELETE FROM ")
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELETE FROM ") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r6 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r6 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.clearTable : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.clearTable : return
