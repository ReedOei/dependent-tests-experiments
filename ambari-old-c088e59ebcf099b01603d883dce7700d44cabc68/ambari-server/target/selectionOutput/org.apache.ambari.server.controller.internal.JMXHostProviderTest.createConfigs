org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r27 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r27.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, "c1", "HDP-2.0.6", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r27.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, "c1", "HDP-2.0.6", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r28 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r28 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r28.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>($r27)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r28.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r29 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r29 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r102 = interfaceinvoke $r29.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r102 = interfaceinvoke $r29.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r30 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r30 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r30.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r30.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r102.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r30)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r102.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "NAMENODE", $r31)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "NAMENODE", $r31) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r32 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r32 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", $r32)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", $r32) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", $r33)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", $r33) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r34 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r34 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "RESOURCEMANAGER", $r34)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "RESOURCEMANAGER", $r34) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r35 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r35 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", $r35)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", $r35) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r36 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r36 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", "HISTORYSERVER", $r36)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", "HISTORYSERVER", $r36) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r37 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r37 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "NODEMANAGER", $r37)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "NODEMANAGER", $r37) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r38 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r38 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_MASTER", $r38)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_MASTER", $r38) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r39 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r39 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_REGIONSERVER", $r39)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_REGIONSERVER", $r39) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r40 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r40 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r41 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r41 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r41.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r41.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r44 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r44 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r45.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r41)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r45.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r46 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r46 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r47 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r47 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r47.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r47.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r50 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r50 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r51 = interfaceinvoke $r50.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r51 = interfaceinvoke $r50.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r51.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r47)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r51.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r52 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r52 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r52.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r52.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h1", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r53 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r53 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r53.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r53.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>("h2", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", null, "NAMENODE", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", null, "NAMENODE", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "DATANODE", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "JOURNALNODE", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HDFS", "HDFS_CLIENT", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "RESOURCEMANAGER", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "RESOURCEMANAGER", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", "HISTORYSERVER", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "MAPREDUCE2", "HISTORYSERVER", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "NODEMANAGER", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "YARN", "NODEMANAGER", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_MASTER", "h1", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_MASTER", "h1", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_REGIONSERVER", "h2", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>("c1", "HBASE", "HBASE_REGIONSERVER", "h2", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r54 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r54 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r54.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r54.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.journalnode.https-address", "localhost:8481")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.journalnode.https-address", "localhost:8481") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.https.address", "50475")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.https.address", "50475") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r61 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r61 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r61.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r61.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.address", "8088")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.address", "8088") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.address", "8042")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.address", "8042") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.https.address", "8090")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.https.address", "8090") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.https.address", "8044")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.https.address", "8044") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r67 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r67 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r67.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r67.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.webapp.https.address", "19889")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.webapp.https.address", "19889") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r67.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r70 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r70 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r70.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r70.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.ssl.enabled", "true")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r70.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.ssl.enabled", "true") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r72 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r72 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r72.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "versionN", $r54, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r72.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hdfs-site", "versionN", $r54, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r73 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r73 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $l0 = interfaceinvoke r102.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $l0 = interfaceinvoke r102.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r74, "c1", null, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r74, "c1", null, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r75 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r72)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r75 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r75)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r76 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r76 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r77 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r77 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r76.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r77, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r76.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r77, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r79 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r79 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r105 = interfaceinvoke $r79.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r105 = interfaceinvoke $r79.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r80 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r80 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r81 = interfaceinvoke $r80.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r81 = interfaceinvoke $r80.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r81)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r81) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r82 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r82 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r82.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "yarn-site", "versionN", $r61, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r82.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "yarn-site", "versionN", $r61, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r83 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r82)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r83 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r83)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r84 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r84 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r85 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r85 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r84.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r85, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r84.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r85, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r87 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r87 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r87.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "mapred-site", "versionN", $r67, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r87.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "mapred-site", "versionN", $r67, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r88 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r88 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r88)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r89 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r89 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r90 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r90 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r89.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r90, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r89.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r90, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r92 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r92 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r92.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hbase-site", "versionN", $r70, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r92.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>("c1", "hbase-site", "versionN", $r70, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r93 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r92)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r93 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r93)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke $r73.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r93) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r94 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r94 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r95 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r95 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r94.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r95, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r94.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r95, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r97 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r97 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r98 = interfaceinvoke $r97.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r98 = interfaceinvoke $r97.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r98)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r98) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r99 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r99 = interfaceinvoke r105.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r100 = interfaceinvoke $r99.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r100 = interfaceinvoke $r99.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r101 = interfaceinvoke $r100.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.http.address")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r101 = interfaceinvoke $r100.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.http.address") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("localhost:${ambari.dfs.datanode.http.port}", $r101)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("localhost:${ambari.dfs.datanode.http.port}", $r101) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : return
