org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : r5 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r2 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r2 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : return r5
