org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $r1 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $r2 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $r2 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i1 = interfaceinvoke $r2.<java.util.Map: int size()>()
org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i1 = interfaceinvoke $r2.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i2 = $i0 + $i1
org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : $i2 = $i0 + $i1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getPendingHostRequestCount : return $i2
