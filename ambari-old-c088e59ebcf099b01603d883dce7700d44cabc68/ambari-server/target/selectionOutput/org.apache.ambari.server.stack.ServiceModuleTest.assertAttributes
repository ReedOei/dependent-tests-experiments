org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l1 = (long) $i0
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("supports")
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("supports") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r3 = (java.util.Map) $r10
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r3 = (java.util.Map) $r10 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r11 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] values()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r11 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] values()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $i2 = lengthof $r11
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $i2 = lengthof $r11 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l3 = (long) $i2
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $i4 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $i4 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l5 = (long) $i4
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $l5 = (long) $i4 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l5)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l5) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if $z0 == 0
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : return
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r5 = (java.util.Map$Entry) $r13
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r5 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r6 = (java.lang.String) $r14
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r6 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r7 = (java.lang.String) $r15
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r7 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r16 = virtualinvoke r6.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r16 = virtualinvoke r6.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r8 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports valueOf(java.lang.String)>($r16)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r8 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports valueOf(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r17 = virtualinvoke r8.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getXmlAttributeName()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r17 = virtualinvoke r8.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getXmlAttributeName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r9 = (java.lang.String) $r18
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : r9 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if r9 == null
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if r9 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, r7)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : if r9 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r19 = virtualinvoke r8.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getDefaultValue()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $r19 = virtualinvoke r8.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getDefaultValue()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, r7)
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r19, r7) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, r7) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : goto [?= (branch)]
org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.assertAttributes : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
