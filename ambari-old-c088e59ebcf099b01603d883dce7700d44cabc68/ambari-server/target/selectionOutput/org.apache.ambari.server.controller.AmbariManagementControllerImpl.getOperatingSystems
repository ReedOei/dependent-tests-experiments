org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = $r7
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = $r7 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getOsType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r37 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.Long getRepositoryVersionId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r37 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.Long getRepositoryVersionId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getVersionDefinitionId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getVersionDefinitionId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r37
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r37 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r37 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r27 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r13 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r4 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r4 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r4 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r47 = virtualinvoke $r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r2, r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r47 = virtualinvoke $r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r48 = interfaceinvoke r47.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r48 = interfaceinvoke r47.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r9 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r36
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r9 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r49 = (org.apache.ambari.server.state.OperatingSystemInfo) $r9
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r49 = (org.apache.ambari.server.state.OperatingSystemInfo) $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r10 = virtualinvoke r49.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r10 = virtualinvoke r49.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z0 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r46 = virtualinvoke $r11.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.OperatingSystemInfo getOperatingSystem(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r46 = virtualinvoke $r11.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.OperatingSystemInfo getOperatingSystem(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r12 = virtualinvoke r46.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r12 = virtualinvoke r46.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r12)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r36
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r13 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r42 = virtualinvoke $r13.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinition(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r42 = virtualinvoke $r13.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinition(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r42
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r42 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r24 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r42 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r14 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r14 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r15 = r42.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r15 = r42.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r16 = $r15.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r16 = $r15.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r14.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r16)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r14.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r17 = r42.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r17 = r42.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r18 = virtualinvoke $r17.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r18 = virtualinvoke $r17.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r44 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r44 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r19 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r36
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r19 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r45 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r19
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r45 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r19 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r20 = new org.apache.ambari.server.controller.OperatingSystemResponse
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r20 = new org.apache.ambari.server.controller.OperatingSystemResponse >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r21 = virtualinvoke r45.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r21 = virtualinvoke r45.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r22 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r22 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r22)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r23 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r23 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r23)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r20.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r24 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25[0] = r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25[0] = r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Version identified by %s does not exist", $r25)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Version identified by %s does not exist", $r25) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r24.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r24.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : throw $r24
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r27 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r28 = virtualinvoke $r27.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r37)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r28 = virtualinvoke $r27.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r38 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r28
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r38 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r28 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r38 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r38 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r29 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r38 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r36
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r29 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r39 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r39 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r30 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r36]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r30 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r40 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r30
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r40 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r30 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r31 = new org.apache.ambari.server.controller.OperatingSystemResponse
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r31 = new org.apache.ambari.server.controller.OperatingSystemResponse >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r32 = virtualinvoke r40.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r32 = virtualinvoke r40.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r32)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r35 = virtualinvoke r37.<java.lang.Long: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setRepositoryVersionId(java.lang.Long)>(r37)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setRepositoryVersionId(java.lang.Long)>(r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r33 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r33 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r33)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r34 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r34 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r34)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z5 = virtualinvoke r40.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z5 = virtualinvoke r40.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setAmbariManagedRepos(boolean)>($z5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setAmbariManagedRepos(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r31)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r35 = virtualinvoke r37.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>($r35)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke $r31.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $r33 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $r33 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r33 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z7 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z7 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z7 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r37 == null
