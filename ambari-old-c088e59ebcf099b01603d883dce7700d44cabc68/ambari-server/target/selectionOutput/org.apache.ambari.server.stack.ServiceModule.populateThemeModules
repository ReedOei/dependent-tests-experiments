org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r7 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r8 = virtualinvoke $r7.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getThemesDir()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r8 = virtualinvoke $r7.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getThemesDir()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r8 != null
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r8 != null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r43 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r8 != null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r10 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory serviceDirectory>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r10 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.stack.ServiceDirectory serviceDirectory> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r11 = virtualinvoke $r10.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r11 = virtualinvoke $r10.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r13 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r13 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r15 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r15 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getThemesDir()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getThemesDir()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r18 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r18 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r19 == null
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r19 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r20 = new java.util.ArrayList
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $r19 == null >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : return
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r20 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r21 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r21 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $i0 = interfaceinvoke $r22.<java.util.List: int size()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $i0 = interfaceinvoke $r22.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r23 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r23 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.ServiceInfo: java.util.List getThemes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r3 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r3 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z0 == 0
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r26 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r25 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r25 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : virtualinvoke $r25.<org.apache.ambari.server.state.ServiceInfo: void setThemes(java.util.List)>($r20)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : virtualinvoke $r25.<org.apache.ambari.server.state.ServiceInfo: void setThemes(java.util.List)>($r20) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : return
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r26 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r4 = (org.apache.ambari.server.state.ThemeInfo) $r26
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : r4 = (org.apache.ambari.server.state.ThemeInfo) $r26 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r27 = new java.io.File
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r27 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r30 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r30 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r32 = virtualinvoke r4.<org.apache.ambari.server.state.ThemeInfo: java.lang.String getFileName()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r32 = virtualinvoke r4.<org.apache.ambari.server.state.ThemeInfo: java.lang.String getFileName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r34)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r35 = new org.apache.ambari.server.stack.ThemeModule
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r35 = new org.apache.ambari.server.stack.ThemeModule >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: void <init>(java.io.File,org.apache.ambari.server.state.ThemeInfo)>($r27, r4)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : specialinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: void <init>(java.io.File,org.apache.ambari.server.state.ThemeInfo)>($r27, r4) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $z1 = virtualinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: boolean isValid()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $z1 = virtualinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z1 == 0
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r40 = r0.<org.apache.ambari.server.stack.ServiceModule: java.util.Map themeModules>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r36 = <org.apache.ambari.server.stack.ServiceModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r36 = <org.apache.ambari.server.stack.ServiceModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r37 = virtualinvoke r4.<org.apache.ambari.server.state.ThemeInfo: java.lang.String getFileName()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r37 = virtualinvoke r4.<org.apache.ambari.server.state.ThemeInfo: java.lang.String getFileName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r38 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo>
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r38 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Invalid theme {} for service {}", $r37, $r39)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r36.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Invalid theme {} for service {}", $r37, $r39) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r40 = r0.<org.apache.ambari.server.stack.ServiceModule: java.util.Map themeModules> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r41 = virtualinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: java.lang.String getId()>()
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r41 = virtualinvoke $r35.<org.apache.ambari.server.stack.ThemeModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r35)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r35) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : goto [?= (branch)]
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r43 = r0.<org.apache.ambari.server.stack.ServiceModule: org.apache.ambari.server.state.ServiceInfo serviceInfo> >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : virtualinvoke $r43.<org.apache.ambari.server.state.ServiceInfo: void setThemesDir(java.lang.String)>("themes")
org.apache.ambari.server.stack.ServiceModule.populateThemeModules : virtualinvoke $r43.<org.apache.ambari.server.state.ServiceInfo: void setThemesDir(java.lang.String)>("themes") >>>>>>>> org.apache.ambari.server.stack.ServiceModule.populateThemeModules : $r9 = new java.lang.StringBuilder
