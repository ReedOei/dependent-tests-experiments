org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : $r1 = r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : z0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : z0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : if z0 != 0
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : virtualinvoke r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: com.google.common.util.concurrent.Service stopAsync()>()
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : return
org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : virtualinvoke r0.<org.apache.ambari.server.state.services.CachedAlertFlushService: com.google.common.util.concurrent.Service stopAsync()>() >>>>>>>> org.apache.ambari.server.state.services.CachedAlertFlushService.startUp : return
