org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r13 = null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("https") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z0 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r14 = "https_port_property_name"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r14 = "port_property_name"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r14 = "port_property_name" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r15 = null
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r15 = null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z1 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("port_config_type")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z1 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("port_config_type") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z1 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z4 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r15, r13, r1, r2)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r15, r13, r1, r2) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if r16 != null
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if r16 != null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("default_port")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if r16 != null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : return r16
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("default_port") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z2 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z3 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("default_port")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : return r16
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z3 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("default_port") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z3 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r10 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("default_port")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8[0] = r3
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8[0] = r3 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8[1] = "default_port"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r8[1] = "default_port" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not determine REST port for component %s. Default REST port property %s is not defined at metrics.json file for service, and there is no any other available ways to determine port information.", $r8)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not determine REST port for component %s. Default REST port property %s is not defined at metrics.json file for service, and there is no any other available ways to determine port information.", $r8) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r9 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r9 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r7)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : throw $r9
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r10 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("default_port") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = (java.lang.String) $r10
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : goto [?= return r16]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : goto [?= return r16] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : return r16
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $z4 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z4 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("port_config_type")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r15, r13, r1, r2)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("port_config_type") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r13 = (java.lang.String) $r11
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r13 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r15 = (java.lang.String) $r12
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r15 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r16 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r15, r13, r1, r2)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : $r14 = "https_port_property_name" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : goto [?= r15 = null]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : goto [?= r15 = null] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolvePort : r15 = null
