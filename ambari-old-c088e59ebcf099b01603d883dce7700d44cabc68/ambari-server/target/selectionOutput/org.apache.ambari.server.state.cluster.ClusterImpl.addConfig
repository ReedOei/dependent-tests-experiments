org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $r3 == null
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $r3 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $r3 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r4 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Config type cannot be empty")
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Config type cannot be empty") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : throw $r4
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r4 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r6 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r6 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r23 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r24 = interfaceinvoke $r23.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r24 = interfaceinvoke $r23.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : throw $r22
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $z1 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r9)
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $z1 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z1 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $z1 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r12 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r11)
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r12 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r13 = (java.util.concurrent.ConcurrentMap) $r12
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r12 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r13 = (java.util.concurrent.ConcurrentMap) $r12 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r13 = (java.util.concurrent.ConcurrentMap) $r12 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1)
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r16 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r16 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : goto [?= return]
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : goto [?= return] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : return
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r20 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r19 = interfaceinvoke r1.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r20 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : specialinvoke $r20.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r20 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : specialinvoke $r20.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r18.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20)
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : specialinvoke $r20.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r18.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentMap allConfigs>
org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : interfaceinvoke $r18.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addConfig : $r22 := @caughtexception
