org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r6 = r0.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r5 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_ADMIN_GROUP_MAPPING_RULES>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r5 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_ADMIN_GROUP_MAPPING_RULES> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r2 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r5)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r2 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r5) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r2)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z0 != 0
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r7 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r7 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $i0 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Nothing to do. LDAP admin group mappings: {}, Memberships to handle: {}", r2, $r8)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Nothing to do. LDAP admin group mappings: {}, Memberships to handle: {}", r2, $r8) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : return
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z1 == 0
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r7 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r9 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r9 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $i1 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $i1 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Processing admin group mapping rules [{}]. Membership entry count: [{}]", r2, $r10)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Processing admin group mapping rules [{}]. Membership entry count: [{}]", r2, $r10) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r11 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r11 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r11)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r11) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r4 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r4 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r23 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r23 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z2 == 0
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r16 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r25 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r25 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z3 == 0
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r12 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : return
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r12 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r26 = (org.apache.ambari.server.orm.entities.UserEntity) $r12
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r26 = (org.apache.ambari.server.orm.entities.UserEntity) $r12 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r13 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r13 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r14 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r14 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Granting ambari admin roles to the user: {}", $r14)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Granting ambari admin roles to the user: {}", $r14) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r15 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer getUserId()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r15 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.Integer getUserId()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : virtualinvoke r0.<org.apache.ambari.server.security.authorization.Users: void grantAdminPrivilege(java.lang.Integer)>($r15)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : virtualinvoke r0.<org.apache.ambari.server.security.authorization.Users: void grantAdminPrivilege(java.lang.Integer)>($r15) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : goto [?= $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : goto [?= $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z3 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r16 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r24 = (org.apache.ambari.server.orm.entities.MemberEntity) $r16
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : r24 = (org.apache.ambari.server.orm.entities.MemberEntity) $r16 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r17 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.GroupEntity getGroup()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r17 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.GroupEntity getGroup()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.GroupEntity: java.lang.String getGroupName()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.GroupEntity: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r18)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z4 == 0
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r19 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : goto [?= $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : goto [?= $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r19 = <org.apache.ambari.server.security.authorization.Users: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r20 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.UserEntity getUser()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r20 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.UserEntity getUser()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.entities.UserEntity: java.lang.String getUserName()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Ambari admin user prospect: [{}] ", $r21)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Ambari admin user prospect: [{}] ", $r21) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r22 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.UserEntity getUser()>()
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : $r22 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.MemberEntity: org.apache.ambari.server.orm.entities.UserEntity getUser()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.security.authorization.Users.processLdapAdminGroupMappingRules : goto [?= $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
