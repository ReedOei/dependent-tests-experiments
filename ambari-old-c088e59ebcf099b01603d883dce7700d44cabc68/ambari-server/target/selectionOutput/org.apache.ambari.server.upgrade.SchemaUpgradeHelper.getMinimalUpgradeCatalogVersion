org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r3 = r0.<org.apache.ambari.server.upgrade.SchemaUpgradeHelper: java.util.Set allUpgradeCatalogs>
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r3 = r0.<org.apache.ambari.server.upgrade.SchemaUpgradeHelper: java.util.Set allUpgradeCatalogs> >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r4 = new org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r4 = new org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : specialinvoke $r4.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator: void <init>()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : specialinvoke $r4.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r4)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r4) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : if $z0 == 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : return null
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r7 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r6
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r7 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r6 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getMinimalUpgradeCatalogVersion : return $r8
