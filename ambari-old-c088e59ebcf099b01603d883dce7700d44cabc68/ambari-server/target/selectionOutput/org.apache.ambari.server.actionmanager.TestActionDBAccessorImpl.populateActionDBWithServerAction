org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r6 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : r3 = interfaceinvoke $r6.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>(l0, "/a/b", "cluster1", 1L, "action db accessor test", "commandParamsStage", "hostParamsStage")
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : r3 = interfaceinvoke $r6.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)>(l0, "/a/b", "cluster1", 1L, "action db accessor test", "commandParamsStage", "hostParamsStage") >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r7 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: java.lang.String serverActionName>
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r7 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: java.lang.String serverActionName> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r8 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION>
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r8 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r9 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand ACTIONEXECUTE>
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r9 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand ACTIONEXECUTE> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r10 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: java.lang.String clusterName>
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r10 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(300)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(300) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r7, null, $r8, $r9, $r10, null, null, "command details", null, $r11, 0, 0)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke r3.<org.apache.ambari.server.actionmanager.Stage: void addServerActionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,java.lang.String,org.apache.ambari.server.state.svccomphost.ServiceComponentHostServerActionEvent,java.util.Map,java.lang.String,java.util.Map,java.lang.Integer,boolean,boolean)>($r7, null, $r8, $r9, $r10, null, null, "command details", null, $r11, 0, 0) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r12 = new java.util.ArrayList
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r13 = new org.apache.ambari.server.actionmanager.Request
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r13 = new org.apache.ambari.server.actionmanager.Request >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r14 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : $r14 = r0.<org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : specialinvoke $r13.<org.apache.ambari.server.actionmanager.Request: void <init>(java.util.Collection,java.lang.String,org.apache.ambari.server.state.Clusters)>($r12, "", $r14)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : specialinvoke $r13.<org.apache.ambari.server.actionmanager.Request: void <init>(java.util.Collection,java.lang.String,org.apache.ambari.server.state.Clusters)>($r12, "", $r14) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke $r13.<org.apache.ambari.server.actionmanager.Request: void setClusterHostInfo(java.lang.String)>("")
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : virtualinvoke $r13.<org.apache.ambari.server.actionmanager.Request: void setClusterHostInfo(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : interfaceinvoke r1.<org.apache.ambari.server.actionmanager.ActionDBAccessor: void persistActions(org.apache.ambari.server.actionmanager.Request)>($r13)
org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : interfaceinvoke r1.<org.apache.ambari.server.actionmanager.ActionDBAccessor: void persistActions(org.apache.ambari.server.actionmanager.Request)>($r13) >>>>>>>> org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl.populateActionDBWithServerAction : return
