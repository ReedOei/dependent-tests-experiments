org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r4 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z0 != 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r13 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : z3 = 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : z3 = 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r5 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r5 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.Stack: boolean isMasterComponent(java.lang.String)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = virtualinvoke $r5.<org.apache.ambari.server.controller.internal.Stack: boolean isMasterComponent(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r0.<org.apache.ambari.server.topology.HostGroupImpl: boolean containsMasterComponent> = 1
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z3 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z3 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r6 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z3 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z3
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r6 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r3 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r3 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r3 == null
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r3 == null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r3 == null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z3
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r15 = (java.util.Set) $r8
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r15 = (java.util.Set) $r8 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r15 != null
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r15 != null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = new java.util.HashSet
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r15 != null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r15.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r15.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z3
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r15 = $r9
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r15 = $r9 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r10 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r10 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r9)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r9) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r15.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r0.<org.apache.ambari.server.topology.HostGroupImpl: boolean containsMasterComponent> = 1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z3 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r13 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r12 = new org.apache.ambari.server.topology.Component
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r12 = new org.apache.ambari.server.topology.Component >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r12.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r12.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : z3 = 1
org.apache.ambari.server.topology.HostGroupImpl.addComponent : z3 = 1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r5 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>]
org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r5 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>] >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r5 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
