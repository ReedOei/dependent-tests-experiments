org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r2 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : z6 = 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : z6 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String type>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String type> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r5)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r17 = null
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r17 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if null == r3
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if null == r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r17 = interfaceinvoke r3.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if null == r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r18 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r18 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType EXISTS>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r19 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType EXISTS> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r18 != $r19
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r18 != $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return z6
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r18 != $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r7 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r7 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r6 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType NOT_EXISTS>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r6 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType NOT_EXISTS> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r7 != $r6
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r7 != $r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $r7 != $r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z4 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: boolean returnValueIfConfigMissing>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String property>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String property> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r9 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r9 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r4 = (java.lang.String) $r9
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r4 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r11 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$ConfigurationCondition$ComparisonType>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r11 = <org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$ConfigurationCondition$ComparisonType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r10 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r10 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $i0 = virtualinvoke $r10.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: int ordinal()>()
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $i0 = virtualinvoke $r10.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $i1 = $r11[$i0]
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $i1 = $r11[$i0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1:
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r12 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean contains(java.lang.String,java.lang.String)>(r4, $r13)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean contains(java.lang.String,java.lang.String)>(r4, $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z9 = 1
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z9 = 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z9 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z9
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z9 = 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z9]
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z9] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z9
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean contains(java.lang.String,java.lang.String)>(r4, $r14)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean contains(java.lang.String,java.lang.String)>(r4, $r14) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z2
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r4, $r15)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r4, $r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z3 != 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z8 = 1
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z8 = 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z8 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z8
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z8 = 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z8]
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z8] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z8
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r12 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String value> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r4, $r12)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r4, $r12) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z4 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: boolean returnValueIfConfigMissing> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z4
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z7 = 1
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z7 = 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z7 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z7
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z7 = 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z7]
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : goto [?= return $z7] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : return $z7
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : r17 = interfaceinvoke r3.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r16 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String property>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r16 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: java.lang.String property> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z5 = interfaceinvoke r17.<java.util.Map: boolean containsKey(java.lang.Object)>($r16)
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $z5 = interfaceinvoke r17.<java.util.Map: boolean containsKey(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z5 == 0
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : z6 = 1
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r18 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType>
org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : z6 = 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition.isSatisfied : $r18 = r0.<org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition: org.apache.ambari.server.state.stack.upgrade.ConfigurationCondition$ComparisonType comparisonType>
