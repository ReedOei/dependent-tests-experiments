org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r2 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.state.scheduler.Batch batch> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if $r2 == null
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if $r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r3 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.state.scheduler.Batch batch>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if $r2 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : return
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r3 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.state.scheduler.Batch batch> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : r1 = virtualinvoke $r3.<org.apache.ambari.server.state.scheduler.Batch: org.apache.ambari.server.state.scheduler.BatchSettings getBatchSettings()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : r1 = virtualinvoke $r3.<org.apache.ambari.server.state.scheduler.Batch: org.apache.ambari.server.state.scheduler.BatchSettings getBatchSettings()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if r1 == null
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if r1 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r4 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.orm.entities.RequestScheduleEntity requestScheduleEntity>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : if r1 == null >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : return
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r4 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.orm.entities.RequestScheduleEntity requestScheduleEntity> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.scheduler.BatchSettings: java.lang.Integer getBatchSeparationInSeconds()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r5 = virtualinvoke r1.<org.apache.ambari.server.state.scheduler.BatchSettings: java.lang.Integer getBatchSeparationInSeconds()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RequestScheduleEntity: void setBatchSeparationInSeconds(java.lang.Integer)>($r5)
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : virtualinvoke $r4.<org.apache.ambari.server.orm.entities.RequestScheduleEntity: void setBatchSeparationInSeconds(java.lang.Integer)>($r5) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r6 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.orm.entities.RequestScheduleEntity requestScheduleEntity>
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r6 = r0.<org.apache.ambari.server.state.scheduler.RequestExecutionImpl: org.apache.ambari.server.orm.entities.RequestScheduleEntity requestScheduleEntity> >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.scheduler.BatchSettings: java.lang.Integer getTaskFailureToleranceLimit()>()
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : $r7 = virtualinvoke r1.<org.apache.ambari.server.state.scheduler.BatchSettings: java.lang.Integer getTaskFailureToleranceLimit()>() >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : virtualinvoke $r6.<org.apache.ambari.server.orm.entities.RequestScheduleEntity: void setBatchTolerationLimit(java.lang.Integer)>($r7)
org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : virtualinvoke $r6.<org.apache.ambari.server.orm.entities.RequestScheduleEntity: void setBatchTolerationLimit(java.lang.Integer)>($r7) >>>>>>>> org.apache.ambari.server.state.scheduler.RequestExecutionImpl.updateBatchSettings : return
