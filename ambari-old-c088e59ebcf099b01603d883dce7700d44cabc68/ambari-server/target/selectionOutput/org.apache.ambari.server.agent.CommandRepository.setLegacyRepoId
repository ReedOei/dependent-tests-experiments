org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r4 = r0.<org.apache.ambari.server.agent.CommandRepository: java.util.List m_repositories> >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : if $z0 == 0
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : return
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : r3 = (org.apache.ambari.server.agent.CommandRepository$Repository) $r5
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : r3 = (org.apache.ambari.server.agent.CommandRepository$Repository) $r5 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6 = newarray (java.lang.Object)[2]
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r7 = virtualinvoke r3.<org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String getRepoName()>()
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r7 = virtualinvoke r3.<org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String getRepoName()>() >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6[0] = $r7
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6[0] = $r7 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6[1] = r1
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r6[1] = r1 >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-%s", $r6)
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-%s", $r6) >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$202(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r3, $r8)
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : staticinvoke <org.apache.ambari.server.agent.CommandRepository$Repository: java.lang.String access$202(org.apache.ambari.server.agent.CommandRepository$Repository,java.lang.String)>(r3, $r8) >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.CommandRepository.setLegacyRepoId : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
