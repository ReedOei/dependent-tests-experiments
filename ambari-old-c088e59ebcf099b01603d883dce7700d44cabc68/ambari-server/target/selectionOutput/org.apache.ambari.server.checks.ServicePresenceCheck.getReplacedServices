org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r9 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "replaced-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r3 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "replaced-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11[0] = "replaced-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11[0] = "replaced-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11[1] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r11[1] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Both %s and %s list must be specified in the upgrade XML file.", $r11)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Both %s and %s list must be specified in the upgrade XML file.", $r11) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r12)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : throw $r10
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r13 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r13 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i0 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i0 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $i0 == $i1
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r23 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i2 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i2 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if i3 >= $i2
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if i3 >= $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if i3 >= $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : return $r9
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r16 = (java.lang.String) $r15
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r7 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r7 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r17 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r18 = (java.lang.String) $r17
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : r8 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z0 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z0 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r19 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r19 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20[0] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20[0] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20[1] = "replaced-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r20[1] = "replaced-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Make sure both %s and %s list only contain comma separated list of services.", $r20)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Make sure both %s and %s list only contain comma separated list of services.", $r20) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r19.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r19.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : throw $r19
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $z1 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r19 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = i3 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : goto [?= $i2 = interfaceinvoke r5.<java.util.List: int size()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : goto [?= $i2 = interfaceinvoke r5.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $i2 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r23 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24[0] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24[0] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24[1] = "replaced-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r24[1] = "replaced-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s must have the same number of services as the %s list.", $r24)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s must have the same number of services as the %s list.", $r24) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r23.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : specialinvoke $r23.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : throw $r23
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : return $r9
org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getReplacedServices : if r3 == null
