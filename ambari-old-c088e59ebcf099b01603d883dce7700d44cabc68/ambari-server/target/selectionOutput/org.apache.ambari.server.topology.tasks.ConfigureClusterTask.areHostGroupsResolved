org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = 1 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r7 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r2 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r2 = interfaceinvoke $r7.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z1 == 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : return z3
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r4 = (java.lang.String) $r8
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r5 = (org.apache.ambari.server.topology.HostGroupInfo) $r9
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r5 = (org.apache.ambari.server.topology.HostGroupInfo) $r9 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r5 != null
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r5 != null >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r5 != null >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r10 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r10 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : i0 = interfaceinvoke $r10.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : i0 = interfaceinvoke $r10.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : i1 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : i1 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if i0 < i1
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if i0 < i1 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z4 = 1
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if i0 < i1 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z4 = 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z4 = 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z0 = $z4
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z0 = $z4 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = z3 & $z4
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = z3 & $z4 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r11 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Map previousHostCounts>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r11 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Map previousHostCounts> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r12)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r12) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r6 = (java.lang.Integer) $r13
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : r6 = (java.lang.Integer) $r13 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r6 == null
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r6 == null >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $i2 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if r6 == null >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if z0 == 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r20 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r15 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r15 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r16 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r16 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[0] = $r16
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[0] = $r16 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[1] = $r17
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[1] = $r17 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[2] = $r18
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r14[2] = $r18 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Host group \'{}\' pending, requires {} hosts, but only {} are available", $r14)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Host group \'{}\' pending, requires {} hosts, but only {} are available", $r14) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r20 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r21 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r21 = virtualinvoke r5.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[0] = $r21
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[0] = $r21 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[1] = $r22
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[1] = $r22 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[2] = $r23
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r19[2] = $r23 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Host group \'{}\' resolved, requires {} hosts and {} are available", $r19)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Host group \'{}\' resolved, requires {} hosts and {} are available", $r19) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= (branch)]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $i2 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $i2 == i0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $i2 == i0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if z0 == 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $i2 == i0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z4 = 1 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= z0 = $z4]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= z0 = $z4] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z0 = $z4
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : z3 = 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r24 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Set missingHostGroups>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r24 = r0.<org.apache.ambari.server.topology.tasks.ConfigureClusterTask: java.util.Set missingHostGroups> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z2 = interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $z2 = interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z2 == 0
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r25 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : $r25 = <org.apache.ambari.server.topology.tasks.ConfigureClusterTask: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Host group \'{}\' is missing from cluster creation request", r4)
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Host group \'{}\' is missing from cluster creation request", r4) >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= (branch)]
org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.tasks.ConfigureClusterTask.areHostGroupsResolved : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
