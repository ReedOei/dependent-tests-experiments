org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r8 = new java.util.ArrayList
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r9 = r0.<org.apache.ambari.server.upgrade.SchemaUpgradeHelper: java.util.Set allUpgradeCatalogs>
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r9 = r0.<org.apache.ambari.server.upgrade.SchemaUpgradeHelper: java.util.Set allUpgradeCatalogs> >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r10 = new org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r10 = new org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r10.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator: void <init>()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r10.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$VersionComparator: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r8, $r10)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r8, $r10) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $z0 == 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r12 = <org.apache.ambari.server.upgrade.SchemaUpgradeHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r12 = <org.apache.ambari.server.upgrade.SchemaUpgradeHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade path: ")
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade path: ") >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r15)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : return $r7
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : r6 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r16
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : r6 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r16 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if r1 == null
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r18 = interfaceinvoke r6.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r17 = interfaceinvoke r6.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r17 = interfaceinvoke r6.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>($r17, r2, 4)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>($r17, r2, 4) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i0 > 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i0 > 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i0 > 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r18 = interfaceinvoke r6.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r1, $r18, 4)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r1, $r18, 4) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i1 >= 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i1 >= 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : $r17 = interfaceinvoke r6.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : if $i1 >= 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.getUpgradePath : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
