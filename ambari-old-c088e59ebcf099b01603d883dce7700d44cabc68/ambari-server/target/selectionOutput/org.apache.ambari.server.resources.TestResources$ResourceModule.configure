org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Ljava/util/Properties;") >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r2 = r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: org.apache.ambari.server.resources.TestResources this$0>
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r2 = r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: org.apache.ambari.server.resources.TestResources this$0> >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.resources.TestResources: java.util.Properties buildTestProperties()>()
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.resources.TestResources: java.util.Properties buildTestProperties()>() >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r5 = r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: org.apache.ambari.server.resources.TestResources this$0>
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r5 = r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: org.apache.ambari.server.resources.TestResources this$0> >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.resources.TestResources: java.lang.reflect.Constructor getConfigurationConstructor()>()
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.resources.TestResources: java.lang.reflect.Constructor getConfigurationConstructor()>() >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor)>($r6)
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor)>($r6) >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;")
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "Lorg/apache/ambari/server/state/stack/OsFamily;") >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r10 = newarray (java.lang.Class)[1]
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r10 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r10[0] = class "Lorg/apache/ambari/server/resources/TestResources;"
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : $r10[0] = class "Lorg/apache/ambari/server/resources/TestResources;" >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: void requestStaticInjection(java.lang.Class[])>($r10)
org.apache.ambari.server.resources.TestResources$ResourceModule.configure : virtualinvoke r0.<org.apache.ambari.server.resources.TestResources$ResourceModule: void requestStaticInjection(java.lang.Class[])>($r10) >>>>>>>> org.apache.ambari.server.resources.TestResources$ResourceModule.configure : return
