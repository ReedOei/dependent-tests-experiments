org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : $r2 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : $r3 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : interfaceinvoke $r2.<org.apache.ambari.server.topology.PersistedState: void registerHostName(long,java.lang.String)>(l0, $r3)
org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : interfaceinvoke $r2.<org.apache.ambari.server.topology.PersistedState: void registerHostName(long,java.lang.String)>(l0, $r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : $r4 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : $r4 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : interfaceinvoke $r4.<org.apache.ambari.server.topology.PersistedState: void registerInTopologyHostInfo(org.apache.ambari.server.state.Host)>(r1)
org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : interfaceinvoke $r4.<org.apache.ambari.server.topology.PersistedState: void registerInTopologyHostInfo(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.persistTopologyHostRegistration : return
