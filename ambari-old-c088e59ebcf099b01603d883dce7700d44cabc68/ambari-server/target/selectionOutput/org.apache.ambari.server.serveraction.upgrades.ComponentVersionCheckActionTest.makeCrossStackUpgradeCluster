org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r19.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r19.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r3)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.StackEntity createStack(org.apache.ambari.server.state.StackId)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r24 = interfaceinvoke $r23.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r24 = interfaceinvoke $r23.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r7 = (org.apache.ambari.server.state.Clusters) $r24
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r7 = (org.apache.ambari.server.state.Clusters) $r24 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r5, r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r5, r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r25 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r25 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r26 = interfaceinvoke $r25.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r26 = interfaceinvoke $r25.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/StackDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r8 = (org.apache.ambari.server.orm.dao.StackDAO) $r26
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r8 = (org.apache.ambari.server.orm.dao.StackDAO) $r26 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r27 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r27 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r28 = interfaceinvoke $r27.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RequestDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r28 = interfaceinvoke $r27.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/RequestDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r9 = (org.apache.ambari.server.orm.dao.RequestDAO) $r28
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r9 = (org.apache.ambari.server.orm.dao.RequestDAO) $r28 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r30 = interfaceinvoke $r29.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UpgradeDAO;")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r30 = interfaceinvoke $r29.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/UpgradeDAO;") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r10 = (org.apache.ambari.server.orm.dao.UpgradeDAO) $r30
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r10 = (org.apache.ambari.server.orm.dao.UpgradeDAO) $r30 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r31 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r31 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r11 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r31, $r32)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r11 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r31, $r32) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r33 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r33 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r34 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r34 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r12 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r33, $r34)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r12 = virtualinvoke r8.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r33, $r34) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r11)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r12)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r13 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r6)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r14 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r6)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r14 = interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r35 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r35 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r35.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r35.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r14.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r35)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r14.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r35) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r6, r5)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r7.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r6, r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r38 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r38.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r38.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r40 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r40 = r0.<org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r16 = virtualinvoke $r40.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : r16 = virtualinvoke $r40.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r41 = new org.apache.ambari.server.orm.entities.RequestEntity
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r41 = new org.apache.ambari.server.orm.entities.RequestEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l0 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l0 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setClusterId(java.lang.Long)>($r42)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setClusterId(java.lang.Long)>($r42) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setRequestId(java.lang.Long)>($r43)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setRequestId(java.lang.Long)>($r43) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setStartTime(java.lang.Long)>($r44)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setStartTime(java.lang.Long)>($r44) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setCreateTime(java.lang.Long)>($r45)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r41.<org.apache.ambari.server.orm.entities.RequestEntity: void setCreateTime(java.lang.Long)>($r45) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke r9.<org.apache.ambari.server.orm.dao.RequestDAO: void create(org.apache.ambari.server.orm.entities.RequestEntity)>($r41)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke r9.<org.apache.ambari.server.orm.dao.RequestDAO: void create(org.apache.ambari.server.orm.entities.RequestEntity)>($r41) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r46 = new org.apache.ambari.server.orm.entities.UpgradeEntity
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r46 = new org.apache.ambari.server.orm.entities.UpgradeEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : specialinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setId(java.lang.Long)>($r47)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setId(java.lang.Long)>($r47) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l3 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $l3 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setClusterId(java.lang.Long)>($r48)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setClusterId(java.lang.Long)>($r48) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRequestEntity(org.apache.ambari.server.orm.entities.RequestEntity)>($r41)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRequestEntity(org.apache.ambari.server.orm.entities.RequestEntity)>($r41) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradePackage(java.lang.String)>("")
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradePackage(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r16)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r16) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r49 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType NON_ROLLING>
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : $r49 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType NON_ROLLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradeType(org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r49)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r46.<org.apache.ambari.server.orm.entities.UpgradeEntity: void setUpgradeType(org.apache.ambari.server.state.stack.upgrade.UpgradeType)>($r49) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.dao.UpgradeDAO: void create(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r46)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : virtualinvoke r10.<org.apache.ambari.server.orm.dao.UpgradeDAO: void create(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r46) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setUpgradeEntity(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r46)
org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: void setUpgradeEntity(org.apache.ambari.server.orm.entities.UpgradeEntity)>($r46) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckActionTest.makeCrossStackUpgradeCluster : return
