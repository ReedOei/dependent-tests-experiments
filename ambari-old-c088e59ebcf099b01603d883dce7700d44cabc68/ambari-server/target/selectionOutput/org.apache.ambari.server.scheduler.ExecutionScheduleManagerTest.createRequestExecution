org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r7 = new org.apache.ambari.server.state.scheduler.Batch >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r8 = new org.apache.ambari.server.state.scheduler.Schedule
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r8 = new org.apache.ambari.server.state.scheduler.Schedule >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r21 = $r8
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r21 = $r8 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r9 = new org.apache.ambari.server.state.scheduler.BatchSettings
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r9 = new org.apache.ambari.server.state.scheduler.BatchSettings >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r9.<org.apache.ambari.server.state.scheduler.BatchSettings: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r9.<org.apache.ambari.server.state.scheduler.BatchSettings: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r9.<org.apache.ambari.server.state.scheduler.BatchSettings: void setTaskFailureToleranceLimit(java.lang.Integer)>($r10)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r9.<org.apache.ambari.server.state.scheduler.BatchSettings: void setTaskFailureToleranceLimit(java.lang.Integer)>($r10) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: void setBatchSettings(org.apache.ambari.server.state.scheduler.BatchSettings)>($r9)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: void setBatchSettings(org.apache.ambari.server.state.scheduler.BatchSettings)>($r9) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r11 = new java.util.ArrayList
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r12 = new org.apache.ambari.server.state.scheduler.BatchRequest
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r12 = new org.apache.ambari.server.state.scheduler.BatchRequest >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10L)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10L) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setOrderId(java.lang.Long)>($r13)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setOrderId(java.lang.Long)>($r13) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r14 = <org.apache.ambari.server.state.scheduler.BatchRequest$Type: org.apache.ambari.server.state.scheduler.BatchRequest$Type DELETE>
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r14 = <org.apache.ambari.server.state.scheduler.BatchRequest$Type: org.apache.ambari.server.state.scheduler.BatchRequest$Type DELETE> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setType(org.apache.ambari.server.state.scheduler.BatchRequest$Type)>($r14)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setType(org.apache.ambari.server.state.scheduler.BatchRequest$Type)>($r14) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setUri(java.lang.String)>("testUri1")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r12.<org.apache.ambari.server.state.scheduler.BatchRequest: void setUri(java.lang.String)>("testUri1") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r15 = new org.apache.ambari.server.state.scheduler.BatchRequest
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r15 = new org.apache.ambari.server.state.scheduler.BatchRequest >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : specialinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(12L)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(12L) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setOrderId(java.lang.Long)>($r16)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setOrderId(java.lang.Long)>($r16) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r17 = <org.apache.ambari.server.state.scheduler.BatchRequest$Type: org.apache.ambari.server.state.scheduler.BatchRequest$Type POST>
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r17 = <org.apache.ambari.server.state.scheduler.BatchRequest$Type: org.apache.ambari.server.state.scheduler.BatchRequest$Type POST> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setType(org.apache.ambari.server.state.scheduler.BatchRequest$Type)>($r17)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setType(org.apache.ambari.server.state.scheduler.BatchRequest$Type)>($r17) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setUri(java.lang.String)>("testUri2")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setUri(java.lang.String)>("testUri2") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setBody(java.lang.String)>("testBody")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r15.<org.apache.ambari.server.state.scheduler.BatchRequest: void setBody(java.lang.String)>("testBody") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r18 = virtualinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r18 = virtualinvoke $r7.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r18.<java.util.List: boolean addAll(java.util.Collection)>($r11)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke $r18.<java.util.List: boolean addAll(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setMinutes(java.lang.String)>("10")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setMinutes(java.lang.String)>("10") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setHours(java.lang.String)>("2")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setHours(java.lang.String)>("2") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setMonth(java.lang.String)>("*")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setMonth(java.lang.String)>("*") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setDaysOfMonth(java.lang.String)>("*")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setDaysOfMonth(java.lang.String)>("*") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setDayOfWeek(java.lang.String)>("?")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : virtualinvoke $r8.<org.apache.ambari.server.state.scheduler.Schedule: void setDayOfWeek(java.lang.String)>("?") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : if z0 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : if z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r21 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : if z0 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r20 = <org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest: org.apache.ambari.server.state.scheduler.RequestExecutionFactory requestExecutionFactory>
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r20 = <org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest: org.apache.ambari.server.state.scheduler.RequestExecutionFactory requestExecutionFactory> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r19 = <org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r19 = <org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r6 = interfaceinvoke $r20.<org.apache.ambari.server.state.scheduler.RequestExecutionFactory: org.apache.ambari.server.state.scheduler.RequestExecution createNew(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.scheduler.Batch,org.apache.ambari.server.state.scheduler.Schedule)>($r19, $r7, r21)
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r6 = interfaceinvoke $r20.<org.apache.ambari.server.state.scheduler.RequestExecutionFactory: org.apache.ambari.server.state.scheduler.RequestExecution createNew(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.scheduler.Batch,org.apache.ambari.server.state.scheduler.Schedule)>($r19, $r7, r21) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke r6.<org.apache.ambari.server.state.scheduler.RequestExecution: void setDescription(java.lang.String)>("Test Schedule")
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke r6.<org.apache.ambari.server.state.scheduler.RequestExecution: void setDescription(java.lang.String)>("Test Schedule") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke r6.<org.apache.ambari.server.state.scheduler.RequestExecution: void persist()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : interfaceinvoke r6.<org.apache.ambari.server.state.scheduler.RequestExecution: void persist()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : return r6
org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : r21 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest.createRequestExecution : $r20 = <org.apache.ambari.server.scheduler.ExecutionScheduleManagerTest: org.apache.ambari.server.state.scheduler.RequestExecutionFactory requestExecutionFactory>
