org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r3 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : r2 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findById(java.lang.Long)>(r1)
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : r2 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findById(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : if r2 == null
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r4 = new org.apache.ambari.server.view.RemoteAmbariStreamProvider
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : return null
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r4 = new org.apache.ambari.server.view.RemoteAmbariStreamProvider >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r5 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getUrl()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r5 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getUrl()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.lang.String getBaseurl(java.lang.String)>($r5)
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.lang.String getBaseurl(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getUsername()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getUsername()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getPassword()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity: java.lang.String getPassword()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r9 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r9 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: java.lang.Integer getViewAmbariRequestConnectTimeout()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration: java.lang.Integer getViewAmbariRequestConnectTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r11 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r11 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r12 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.lang.Integer getViewAmbariRequestReadTimeout()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $r12 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.lang.Integer getViewAmbariRequestReadTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : specialinvoke $r4.<org.apache.ambari.server.view.RemoteAmbariStreamProvider: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int)>($r6, $r7, $r8, $i0, $i1)
org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : specialinvoke $r4.<org.apache.ambari.server.view.RemoteAmbariStreamProvider: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int)>($r6, $r7, $r8, $i0, $i1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.createRemoteAmbariStreamProvider : return $r4
