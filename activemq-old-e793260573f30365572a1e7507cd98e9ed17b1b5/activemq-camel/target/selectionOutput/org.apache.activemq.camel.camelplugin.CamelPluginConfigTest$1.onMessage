org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : return
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : $r3 = r0.<org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1: java.util.concurrent.CountDownLatch val$latch> >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : $r3 = r0.<org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1: java.util.concurrent.CountDownLatch val$latch> >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : goto [?= return]
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : goto [?= return] >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest$1.onMessage : return
