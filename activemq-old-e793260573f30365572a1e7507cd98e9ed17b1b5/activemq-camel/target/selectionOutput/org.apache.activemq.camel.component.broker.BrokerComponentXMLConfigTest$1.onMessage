org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : return
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $i0 = interfaceinvoke r1.<javax.jms.Message: int getJMSPriority()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $l1 = (long) $i0
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $i0 = interfaceinvoke r1.<javax.jms.Message: int getJMSPriority()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $l1 = (long) $i0 >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l1)
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $l1 = (long) $i0 >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l1) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r3 = r0.<org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1: java.util.concurrent.CountDownLatch val$latch>
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l1) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r3 = r0.<org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1: java.util.concurrent.CountDownLatch val$latch> >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r3 = r0.<org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1: java.util.concurrent.CountDownLatch val$latch> >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : goto [?= return]
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : goto [?= return] >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$1.onMessage : return
