org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r1 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("brokerA") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : $r3 = new org.apache.activemq.broker.BrokerService
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : $r3 = new org.apache.activemq.broker.BrokerService >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : specialinvoke $r3.<org.apache.activemq.broker.BrokerService: void <init>()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : specialinvoke $r3.<org.apache.activemq.broker.BrokerService: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setPersistent(boolean)>(0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setPersistent(boolean)>(0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setUseJmx(boolean)>(0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setUseJmx(boolean)>(0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>(r1)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>(r1) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://localhost:0")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://localhost:0") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : return $r3
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBroker : return $r3 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA> = $r1
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA> = $r1 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r2 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext createBrokerCamelContext(java.lang.String)>("brokerA")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r2 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext createBrokerCamelContext(java.lang.String)>("brokerA") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r3 = new org.apache.camel.impl.DefaultCamelContext
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r3 = new org.apache.camel.impl.DefaultCamelContext >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r3.<org.apache.camel.impl.DefaultCamelContext: void <init>()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r3.<org.apache.camel.impl.DefaultCamelContext: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r4 = new java.lang.StringBuilder
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm://")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm://") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?create=false&waitForStart=10000")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?create=false&waitForStart=10000") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r9 = staticinvoke <org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent(java.lang.String)>($r8)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r9 = staticinvoke <org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent(java.lang.String)>($r8) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r2 = new org.apache.activemq.camel.component.ActiveMQComponent
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r2 = new org.apache.activemq.camel.component.ActiveMQComponent >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r2 = new org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r2 = new org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return $r2
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return $r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return $r2
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return $r2 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r9)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r9) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r10 = new org.apache.activemq.camel.component.ComplexRequestReplyTest$2
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : $r10 = new org.apache.activemq.camel.component.ComplexRequestReplyTest$2 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r10.<org.apache.activemq.camel.component.ComplexRequestReplyTest$2: void <init>(org.apache.activemq.camel.component.ComplexRequestReplyTest)>(r0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : specialinvoke $r10.<org.apache.activemq.camel.component.ComplexRequestReplyTest$2: void <init>(org.apache.activemq.camel.component.ComplexRequestReplyTest)>(r0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void addRoutes(org.apache.camel.RoutesBuilder)>($r10)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void addRoutes(org.apache.camel.RoutesBuilder)>($r10) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:send")
org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:send") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.builder.ExpressionClause setBody()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.builder.ExpressionClause setBody()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.camel.builder.ExpressionClause: java.lang.Object simple(java.lang.String)>("Returning ${body}")
org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.camel.builder.ExpressionClause: java.lang.Object simple(java.lang.String)>("Returning ${body}") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r4 = (org.apache.camel.model.ProcessorDefinition) $r3
org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : $r4 = (org.apache.camel.model.ProcessorDefinition) $r3 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : virtualinvoke $r4.<org.apache.camel.model.ProcessorDefinition: org.apache.camel.model.ProcessorDefinition log(java.lang.String)>("***Reply sent to ${header.JMSReplyTo} CoorId = ${header.JMSCorrelationID}")
org.apache.activemq.camel.component.ComplexRequestReplyTest$2.configure : virtualinvoke $r4.<org.apache.camel.model.ProcessorDefinition: org.apache.camel.model.ProcessorDefinition log(java.lang.String)>("***Reply sent to ${header.JMSReplyTo} CoorId = ${header.JMSCorrelationID}") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void start()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : interfaceinvoke $r3.<org.apache.camel.CamelContext: void start()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStart()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStart()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean isExposeAllQueues()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean isExposeAllQueues()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean exposeAllQueues>
org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean exposeAllQueues> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : return $z0
org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.MessageCreatedStrategy getMessageCreatedStrategy()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.MessageCreatedStrategy getMessageCreatedStrategy()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $r1 != null
org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $r1 != null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r2 = new org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r2 = new org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke $r2.<org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke $r2.<org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: void setMessageCreatedStrategy(org.apache.camel.component.jms.MessageCreatedStrategy)>($r2)
org.apache.activemq.camel.component.ActiveMQComponent.doStart : virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: void setMessageCreatedStrategy(org.apache.camel.component.jms.MessageCreatedStrategy)>($r2) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r3 = staticinvoke <org.apache.camel.util.IntrospectionSupport: java.util.Map extractProperties(java.util.Map,java.lang.String)>(r2, "destination.")
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r3 = staticinvoke <org.apache.camel.util.IntrospectionSupport: java.util.Map extractProperties(java.util.Map,java.lang.String)>(r2, "destination.") >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r4 = staticinvoke <org.apache.camel.util.URISupport: java.lang.String createQueryString(java.util.Map)>(r3)
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r4 = staticinvoke <org.apache.camel.util.URISupport: java.lang.String createQueryString(java.util.Map)>(r3) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : goto [?= $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)]
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : goto [?= $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)] >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : return r1
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : return r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r2 = new org.apache.activemq.spring.ActiveMQConnectionFactory
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r2 = new org.apache.activemq.spring.ActiveMQConnectionFactory >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean trustAllPackages>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean trustAllPackages> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setTrustAllPackages(boolean)>($z0)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setTrustAllPackages(boolean)>($z0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getUsername()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getUsername()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r3 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r3 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getPassword()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getPassword()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r5 = virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r5 = virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r5 != null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r5 != null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel")
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel") >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL>
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBrokerURL(java.lang.String)>($r6)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBrokerURL(java.lang.String)>($r6) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUseSingleConnection()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUseSingleConnection()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean useSingleConnection>
org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean useSingleConnection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : return $z0
org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z1 == 0
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z2 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUsePooledConnection()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z2 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUsePooledConnection()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean usePooledConnection>
org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean usePooledConnection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : return $z0
org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z2 == 0
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z2 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r16 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: javax.jms.ConnectionFactory createPooledConnectionFactory(org.apache.activemq.spring.ActiveMQConnectionFactory)>($r2)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r16 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: javax.jms.ConnectionFactory createPooledConnectionFactory(org.apache.activemq.spring.ActiveMQConnectionFactory)>($r2) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r15 = staticinvoke <org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>("org.apache.activemq.pool.PooledConnectionFactory", $r4)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r15 = staticinvoke <org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>("org.apache.activemq.pool.PooledConnectionFactory", $r4) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : r2 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : r2 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : if r2 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : if r2 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r7 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r7 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : return $r7
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : return $r7 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5 = newarray (java.lang.Class)[1]
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5[0] = class "Lorg/apache/activemq/ActiveMQConnectionFactory;"
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5[0] = class "Lorg/apache/activemq/ActiveMQConnectionFactory;" >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r2 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r2 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6 = newarray (java.lang.Object)[1]
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6[0] = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6[0] = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r7 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r7 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r8 = (javax.jms.ConnectionFactory) $r7
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r8 = (javax.jms.ConnectionFactory) $r7 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : return $r8
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : return $r8 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r7 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r7 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = (org.apache.activemq.Service) r16
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = (org.apache.activemq.Service) r16 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void addPooledConnectionFactoryService(org.apache.activemq.Service)>($r8)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void addPooledConnectionFactoryService(org.apache.activemq.Service)>($r8) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1)
org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : return r16
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : return r16 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : return $r3
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerCamelContext : return $r3 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerAContext> = $r2
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerAContext> = $r2 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r3 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA>
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r3 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void start()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void start()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r4 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA>
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : $r4 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerA> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : virtualinvoke $r4.<org.apache.activemq.broker.BrokerService: boolean waitUntilStarted()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerA : virtualinvoke $r4.<org.apache.activemq.broker.BrokerService: boolean waitUntilStarted()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r1 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("brokerB")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r1 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("brokerB") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB> = $r1
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB> = $r1 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r2 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext createBrokerCamelContext(java.lang.String)>("brokerB")
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r2 = specialinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext createBrokerCamelContext(java.lang.String)>("brokerB") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerBContext> = $r2
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerBContext> = $r2 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r3 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB>
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r3 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void start()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void start()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r4 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB>
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : $r4 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.activemq.broker.BrokerService brokerB> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : virtualinvoke $r4.<org.apache.activemq.broker.BrokerService: boolean waitUntilStarted()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createBrokerB : virtualinvoke $r4.<org.apache.activemq.broker.BrokerService: boolean waitUntilStarted()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r5 = new org.apache.activemq.ActiveMQConnectionFactory
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r5 = new org.apache.activemq.ActiveMQConnectionFactory >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r6 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: java.lang.String connectionUri>
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r6 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: java.lang.String connectionUri> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r5.<org.apache.activemq.ActiveMQConnectionFactory: void <init>(java.lang.String)>($r6)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r5.<org.apache.activemq.ActiveMQConnectionFactory: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r5.<org.apache.activemq.ActiveMQConnectionFactory: void setWatchTopicAdvisories(boolean)>(0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r5.<org.apache.activemq.ActiveMQConnectionFactory: void setWatchTopicAdvisories(boolean)>(0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r7 = new org.apache.activemq.pool.PooledConnectionFactory
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r7 = new org.apache.activemq.pool.PooledConnectionFactory >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void <init>(org.apache.activemq.ActiveMQConnectionFactory)>($r5)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void <init>(org.apache.activemq.ActiveMQConnectionFactory)>($r5) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setMaxConnections(int)>(1)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setMaxConnections(int)>(1) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setMaximumActiveSessionPerConnection(int)>(500)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setMaximumActiveSessionPerConnection(int)>(500) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setIdleTimeout(int)>(0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r7.<org.apache.activemq.pool.PooledConnectionFactory: void setIdleTimeout(int)>(0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r8 = new org.apache.camel.impl.DefaultCamelContext
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r8 = new org.apache.camel.impl.DefaultCamelContext >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r8.<org.apache.camel.impl.DefaultCamelContext: void <init>()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r8.<org.apache.camel.impl.DefaultCamelContext: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r9 = new org.apache.activemq.camel.component.ActiveMQComponent
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r9 = new org.apache.activemq.camel.component.ActiveMQComponent >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void setConnectionFactory(javax.jms.ConnectionFactory)>($r7)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void setConnectionFactory(javax.jms.ConnectionFactory)>($r7) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r9)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r9) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r10 = new org.apache.activemq.camel.component.ComplexRequestReplyTest$1
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : $r10 = new org.apache.activemq.camel.component.ComplexRequestReplyTest$1 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r10.<org.apache.activemq.camel.component.ComplexRequestReplyTest$1: void <init>(org.apache.activemq.camel.component.ComplexRequestReplyTest)>(r0)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : specialinvoke $r10.<org.apache.activemq.camel.component.ComplexRequestReplyTest$1: void <init>(org.apache.activemq.camel.component.ComplexRequestReplyTest)>(r0) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void addRoutes(org.apache.camel.RoutesBuilder)>($r10)
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void addRoutes(org.apache.camel.RoutesBuilder)>($r10) >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:test")
org.apache.activemq.camel.component.ComplexRequestReplyTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:test") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition inOut(java.lang.String)>("activemq:queue:send")
org.apache.activemq.camel.component.ComplexRequestReplyTest$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition inOut(java.lang.String)>("activemq:queue:send") >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void start()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : interfaceinvoke $r8.<org.apache.camel.CamelContext: void start()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : return $r8
org.apache.activemq.camel.component.ComplexRequestReplyTest.createSenderContext : return $r8 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r9 = interfaceinvoke r3.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r9 = interfaceinvoke r3.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z0 = $r9 instanceof org.apache.camel.component.jms.JmsMessage
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z0 = $r9 instanceof org.apache.camel.component.jms.JmsMessage >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z0 == 0
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.shutdownBrokerA : $r2 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerAContext>
org.apache.activemq.camel.component.ComplexRequestReplyTest.shutdownBrokerA : $r2 = r0.<org.apache.activemq.camel.component.ComplexRequestReplyTest: org.apache.camel.CamelContext brokerAContext> >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.shutdownBrokerA : interfaceinvoke $r2.<org.apache.camel.CamelContext: void stop()>()
org.apache.activemq.camel.component.ComplexRequestReplyTest.shutdownBrokerA : interfaceinvoke $r2.<org.apache.camel.CamelContext: void stop()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.advisory.DestinationSource source>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.advisory.DestinationSource source> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r1 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r1 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r2 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r2 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r3 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r3 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r12 = (org.apache.activemq.Service) $r8
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r12 = (org.apache.activemq.Service) $r8 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r12.<org.apache.activemq.Service: void stop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r12.<org.apache.activemq.Service: void stop()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r13 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r13 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>() >>>>>>>> org.apache.activemq.camel.component.ComplexRequestReplyTest.shutdownBrokerA : goto [?= return]
