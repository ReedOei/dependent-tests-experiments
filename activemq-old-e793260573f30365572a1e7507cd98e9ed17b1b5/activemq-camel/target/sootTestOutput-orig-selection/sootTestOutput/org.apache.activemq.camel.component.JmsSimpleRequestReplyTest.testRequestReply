org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.advisory.DestinationSource source> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r1 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r1 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r2 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r2 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r3 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r3 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r12 = (org.apache.activemq.Service) $r8
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r12 = (org.apache.activemq.Service) $r8 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r12.<org.apache.activemq.Service: void stop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r12.<org.apache.activemq.Service: void stop()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r13 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r13 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>() >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.CamelContext createCamelContext()>()
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.CamelContext createCamelContext()>() >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : r2 = staticinvoke <org.apache.activemq.camel.component.JmsSimpleRequestReplyTest: javax.jms.ConnectionFactory createConnectionFactory(java.lang.String)>(null)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : r2 = staticinvoke <org.apache.activemq.camel.component.JmsSimpleRequestReplyTest: javax.jms.ConnectionFactory createConnectionFactory(java.lang.String)>(null) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : r9 = "vm://test-broker?broker.persistent=false&broker.useJmx=false"
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : r9 = "vm://test-broker?broker.persistent=false&broker.useJmx=false" >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : if r0 == null
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : if r0 == null >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : $r3 = new org.apache.activemq.ActiveMQConnectionFactory
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : $r3 = new org.apache.activemq.ActiveMQConnectionFactory >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : specialinvoke $r3.<org.apache.activemq.ActiveMQConnectionFactory: void <init>(java.lang.String)>(r9)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : specialinvoke $r3.<org.apache.activemq.ActiveMQConnectionFactory: void <init>(java.lang.String)>(r9) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : $r4 = new org.apache.activemq.pool.PooledConnectionFactory
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : $r4 = new org.apache.activemq.pool.PooledConnectionFactory >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : specialinvoke $r4.<org.apache.activemq.pool.PooledConnectionFactory: void <init>(org.apache.activemq.ActiveMQConnectionFactory)>($r3)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : specialinvoke $r4.<org.apache.activemq.pool.PooledConnectionFactory: void <init>(org.apache.activemq.ActiveMQConnectionFactory)>($r3) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : virtualinvoke $r4.<org.apache.activemq.pool.PooledConnectionFactory: void setMaxConnections(int)>(8)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : virtualinvoke $r4.<org.apache.activemq.pool.PooledConnectionFactory: void setMaxConnections(int)>(8) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : return $r4
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createConnectionFactory : return $r4 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : $r3 = staticinvoke <org.apache.camel.component.jms.JmsComponent: org.apache.camel.component.jms.JmsComponent jmsComponentAutoAcknowledge(javax.jms.ConnectionFactory)>(r2)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : $r3 = staticinvoke <org.apache.camel.component.jms.JmsComponent: org.apache.camel.component.jms.JmsComponent jmsComponentAutoAcknowledge(javax.jms.ConnectionFactory)>(r2) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : interfaceinvoke r1.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r3)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : interfaceinvoke r1.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r3) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : return r1
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createCamelContext : return r1 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1: void <init>(org.apache.activemq.camel.component.JmsSimpleRequestReplyTest)>(r0)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1: void <init>(org.apache.activemq.camel.component.JmsSimpleRequestReplyTest)>(r0) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : return $r1
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:queue:hello")
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:queue:hello") >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r2 = new org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r2 = new org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : specialinvoke $r2.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1: void <init>(org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1)>(r0)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : specialinvoke $r2.<org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1: void <init>(org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1)>(r0) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2)
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2) >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3 >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result")
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result") >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r2 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r2 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : interfaceinvoke $r2.<org.apache.camel.Message: void setBody(java.lang.Object)>("Bye World")
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : interfaceinvoke $r2.<org.apache.camel.Message: void setBody(java.lang.Object)>("Bye World") >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r3 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r3 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r4 = interfaceinvoke $r3.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String)>("JMSReplyTo")
org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : $r4 = interfaceinvoke $r3.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String)>("JMSReplyTo") >>>>>>>> org.apache.activemq.camel.component.JmsSimpleRequestReplyTest$1$1.process : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r4)
