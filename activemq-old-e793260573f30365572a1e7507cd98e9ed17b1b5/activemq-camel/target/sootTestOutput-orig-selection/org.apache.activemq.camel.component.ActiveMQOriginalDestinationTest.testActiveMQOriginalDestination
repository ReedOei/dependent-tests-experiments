org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r1 = virtualinvoke r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.springframework.context.support.AbstractXmlApplicationContext createApplicationContext()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r1 = specialinvoke r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("CON")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r1 = specialinvoke r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("CON") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : $r3 = new org.apache.activemq.broker.BrokerService
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : $r3 = new org.apache.activemq.broker.BrokerService >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : specialinvoke $r3.<org.apache.activemq.broker.BrokerService: void <init>()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : specialinvoke $r3.<org.apache.activemq.broker.BrokerService: void <init>()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setDeleteAllMessagesOnStartup(boolean)>(1)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setDeleteAllMessagesOnStartup(boolean)>(1) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>(r1)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>(r1) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setUseJmx(boolean)>(0)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setUseJmx(boolean)>(0) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setPersistent(boolean)>(0)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: void setPersistent(boolean)>(0) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://0.0.0.0:0")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : virtualinvoke $r3.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://0.0.0.0:0") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : return $r3
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createBroker : return $r3 >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker> = $r1
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker> = $r1 >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r2 = specialinvoke r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("PRO")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r2 = specialinvoke r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService createBroker(java.lang.String)>("PRO") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker> = $r2
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker> = $r2 >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r3 = new org.apache.activemq.network.DiscoveryNetworkConnector
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r3 = new org.apache.activemq.network.DiscoveryNetworkConnector >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void <init>()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void <init>()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r4 = new java.net.URI
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r4 = new java.net.URI >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r5 = new java.lang.StringBuilder
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static:")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static:") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r7 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker>
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r7 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker> >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r8 = virtualinvoke $r7.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector getTransportConnectorByScheme(java.lang.String)>("tcp")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r8 = virtualinvoke $r7.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector getTransportConnectorByScheme(java.lang.String)>("tcp") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r9 = virtualinvoke $r8.<org.apache.activemq.broker.TransportConnector: java.lang.String getPublishableConnectString()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r9 = virtualinvoke $r8.<org.apache.activemq.broker.TransportConnector: java.lang.String getPublishableConnectString()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r11)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r4.<java.net.URI: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setUri(java.net.URI)>($r4)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setUri(java.net.URI)>($r4) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDuplex(boolean)>(1)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDuplex(boolean)>(1) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setNetworkTTL(int)>(2)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setNetworkTTL(int)>(2) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r12 = newarray (org.apache.activemq.command.ActiveMQDestination)[1]
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r12 = newarray (org.apache.activemq.command.ActiveMQDestination)[1] >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r13 = new org.apache.activemq.command.ActiveMQQueue
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r13 = new org.apache.activemq.command.ActiveMQQueue >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r13.<org.apache.activemq.command.ActiveMQQueue: void <init>(java.lang.String)>("service1")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r13.<org.apache.activemq.command.ActiveMQQueue: void <init>(java.lang.String)>("service1") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r12[0] = $r13
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r12[0] = $r13 >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDynamicallyIncludedDestinations(java.util.List)>($r14)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDynamicallyIncludedDestinations(java.util.List)>($r14) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDestinationFilter(java.lang.String)>("ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic,ActiveMQ.Advisory.Consumer.Queue.>")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r3.<org.apache.activemq.network.DiscoveryNetworkConnector: void setDestinationFilter(java.lang.String)>("ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic,ActiveMQ.Advisory.Consumer.Queue.>") >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r15 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker>
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r15 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker> >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r15.<org.apache.activemq.broker.BrokerService: org.apache.activemq.network.NetworkConnector addNetworkConnector(org.apache.activemq.network.NetworkConnector)>($r3)
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r15.<org.apache.activemq.broker.BrokerService: org.apache.activemq.network.NetworkConnector addNetworkConnector(org.apache.activemq.network.NetworkConnector)>($r3) >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r17 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker>
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r17 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService consumerBroker> >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r17.<org.apache.activemq.broker.BrokerService: void start()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r17.<org.apache.activemq.broker.BrokerService: void start()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r18 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker>
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r18 = r0.<org.apache.activemq.camel.CamelJmsRequestReplyNobTest: org.apache.activemq.broker.BrokerService producerBroker> >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r18.<org.apache.activemq.broker.BrokerService: void start()>()
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : virtualinvoke $r18.<org.apache.activemq.broker.BrokerService: void start()>() >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : goto [?= $r19 = new org.springframework.context.support.ClassPathXmlApplicationContext]
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : goto [?= $r19 = new org.springframework.context.support.ClassPathXmlApplicationContext] >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r19 = new org.springframework.context.support.ClassPathXmlApplicationContext
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : $r19 = new org.springframework.context.support.ClassPathXmlApplicationContext >>>>>>>> org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r19.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/requestReply.xml")
org.apache.activemq.camel.CamelJmsRequestReplyNobTest.createApplicationContext : specialinvoke $r19.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/requestReply.xml") >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.AdvisoryConsumerExample$1
org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.AdvisoryConsumerExample$1 >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: void <init>(org.apache.activemq.camel.component.AdvisoryConsumerExample)>(r0)
org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: void <init>(org.apache.activemq.camel.component.AdvisoryConsumerExample)>(r0) >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : return $r1
org.apache.activemq.camel.component.AdvisoryConsumerExample.createRouteBuilder : return $r1 >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:InitialQueue")
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:InitialQueue") >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("log:Messages")
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("log:Messages") >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:topic:ActiveMQ.Advisory.Queue?cacheLevelName=CACHE_CONSUMER")
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:topic:ActiveMQ.Advisory.Queue?cacheLevelName=CACHE_CONSUMER") >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r4 = new org.apache.activemq.camel.component.AdvisoryConsumerExample$1$1
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : $r4 = new org.apache.activemq.camel.component.AdvisoryConsumerExample$1$1 >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : specialinvoke $r4.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1$1: void <init>(org.apache.activemq.camel.component.AdvisoryConsumerExample$1)>(r0)
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : specialinvoke $r4.<org.apache.activemq.camel.component.AdvisoryConsumerExample$1$1: void <init>(org.apache.activemq.camel.component.AdvisoryConsumerExample$1)>(r0) >>>>>>>> org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : virtualinvoke $r3.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r4)
org.apache.activemq.camel.component.AdvisoryConsumerExample$1.configure : virtualinvoke $r3.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r4) >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.CamelContext createCamelContext()>()
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.CamelContext createCamelContext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : $r2 = staticinvoke <org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent(java.lang.String)>("vm://localhost?broker.persistent=false")
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : $r2 = staticinvoke <org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent(java.lang.String)>("vm://localhost?broker.persistent=false") >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r2 = new org.apache.activemq.camel.component.ActiveMQComponent
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r2 = new org.apache.activemq.camel.component.ActiveMQComponent >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r2 = new org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r2 = new org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return $r2
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return $r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke $r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return $r2
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return $r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : interfaceinvoke r1.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r2)
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : interfaceinvoke r1.<org.apache.camel.CamelContext: void addComponent(java.lang.String,org.apache.camel.Component)>("activemq", $r2) >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : return r1
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createCamelContext : return r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : $r1 = new org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1: void <init>(org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest)>(r0)
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1: void <init>(org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : return $r1
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:queue:foo")
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("activemq:queue:foo") >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("activemq:queue:bar")
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("activemq:queue:bar") >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r3 = (org.apache.camel.model.RouteDefinition) $r2
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : $r3 = (org.apache.camel.model.RouteDefinition) $r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : virtualinvoke $r3.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result")
org.apache.activemq.camel.component.ActiveMQOriginalDestinationTest$1.configure : virtualinvoke $r3.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result") >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStart()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStart()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean isExposeAllQueues()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean isExposeAllQueues()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean exposeAllQueues>
org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: boolean exposeAllQueues> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : return $z0
org.apache.activemq.camel.component.ActiveMQComponent.isExposeAllQueues : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.MessageCreatedStrategy getMessageCreatedStrategy()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.MessageCreatedStrategy getMessageCreatedStrategy()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $r1 != null
org.apache.activemq.camel.component.ActiveMQComponent.doStart : if $r1 != null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r2 = new org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy
org.apache.activemq.camel.component.ActiveMQComponent.doStart : $r2 = new org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke $r2.<org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStart : specialinvoke $r2.<org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStart : virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: void setMessageCreatedStrategy(org.apache.camel.component.jms.MessageCreatedStrategy)>($r2)
org.apache.activemq.camel.component.ActiveMQComponent.doStart : virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQComponent: void setMessageCreatedStrategy(org.apache.camel.component.jms.MessageCreatedStrategy)>($r2) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r3 = staticinvoke <org.apache.camel.util.IntrospectionSupport: java.util.Map extractProperties(java.util.Map,java.lang.String)>(r2, "destination.")
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r3 = staticinvoke <org.apache.camel.util.IntrospectionSupport: java.util.Map extractProperties(java.util.Map,java.lang.String)>(r2, "destination.") >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r4 = staticinvoke <org.apache.camel.util.URISupport: java.lang.String createQueryString(java.util.Map)>(r3)
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : r4 = staticinvoke <org.apache.camel.util.URISupport: java.lang.String createQueryString(java.util.Map)>(r3) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : goto [?= $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)]
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : goto [?= $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)] >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4)
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : $z0 = staticinvoke <org.apache.camel.util.ObjectHelper: boolean isNotEmpty(java.lang.Object)>(r4) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : return r1
org.apache.activemq.camel.component.ActiveMQComponent.convertPathToActualDestination : return r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r2 = new org.apache.activemq.spring.ActiveMQConnectionFactory
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r2 = new org.apache.activemq.spring.ActiveMQConnectionFactory >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean trustAllPackages>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean trustAllPackages> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setTrustAllPackages(boolean)>($z0)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setTrustAllPackages(boolean)>($z0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getUsername()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r3 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getUsername()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r3 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r3 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getPassword()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getPassword()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r5 = virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r5 = virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r5 != null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r5 != null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel")
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel") >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL>
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBrokerURL(java.lang.String)>($r6)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBrokerURL(java.lang.String)>($r6) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUseSingleConnection()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z1 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUseSingleConnection()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean useSingleConnection>
org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean useSingleConnection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : return $z0
org.apache.activemq.camel.component.ActiveMQConfiguration.isUseSingleConnection : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z1 == 0
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z2 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUsePooledConnection()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $z2 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean isUsePooledConnection()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean usePooledConnection>
org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : $z0 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: boolean usePooledConnection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : return $z0
org.apache.activemq.camel.component.ActiveMQConfiguration.isUsePooledConnection : return $z0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z2 == 0
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $z2 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r16 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: javax.jms.ConnectionFactory createPooledConnectionFactory(org.apache.activemq.spring.ActiveMQConnectionFactory)>($r2)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r16 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: javax.jms.ConnectionFactory createPooledConnectionFactory(org.apache.activemq.spring.ActiveMQConnectionFactory)>($r2) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r15 = staticinvoke <org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>("org.apache.activemq.pool.PooledConnectionFactory", $r4)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r15 = staticinvoke <org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>("org.apache.activemq.pool.PooledConnectionFactory", $r4) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : r2 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : r2 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : if r2 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : if r2 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r7 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : $r7 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : return $r7
org.apache.activemq.camel.component.ActiveMQConfiguration.loadClass : return $r7 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5 = newarray (java.lang.Class)[1]
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5[0] = class "Lorg/apache/activemq/ActiveMQConnectionFactory;"
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r5[0] = class "Lorg/apache/activemq/ActiveMQConnectionFactory;" >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r2 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : r2 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6 = newarray (java.lang.Object)[1]
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6[0] = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r6[0] = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r7 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6)
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r7 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r8 = (javax.jms.ConnectionFactory) $r7
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : $r8 = (javax.jms.ConnectionFactory) $r7 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : return $r8
org.apache.activemq.camel.component.ActiveMQConfiguration.createPooledConnectionFactory : return $r8 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r7 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r7 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = (org.apache.activemq.Service) r16
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = (org.apache.activemq.Service) r16 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void addPooledConnectionFactoryService(org.apache.activemq.Service)>($r8)
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke $r9.<org.apache.activemq.camel.component.ActiveMQComponent: void addPooledConnectionFactoryService(org.apache.activemq.Service)>($r8) >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : $r2 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1)
org.apache.activemq.camel.component.ActiveMQComponent.addPooledConnectionFactoryService : virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : return r16
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : return r16 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r9 = interfaceinvoke r3.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r9 = interfaceinvoke r3.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z0 = $r9 instanceof org.apache.camel.component.jms.JmsMessage
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z0 = $r9 instanceof org.apache.camel.component.jms.JmsMessage >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z0 == 0
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r10 = interfaceinvoke r3.<org.apache.camel.Exchange: java.lang.Object getIn(java.lang.Class)>(class "Lorg/apache/camel/component/jms/JmsMessage;")
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r10 = interfaceinvoke r3.<org.apache.camel.Exchange: java.lang.Object getIn(java.lang.Class)>(class "Lorg/apache/camel/component/jms/JmsMessage;") >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r5 = (org.apache.camel.component.jms.JmsMessage) $r10
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r5 = (org.apache.camel.component.jms.JmsMessage) $r10 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r6 = virtualinvoke r5.<org.apache.camel.component.jms.JmsMessage: javax.jms.Message getJmsMessage()>()
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r6 = virtualinvoke r5.<org.apache.camel.component.jms.JmsMessage: javax.jms.Message getJmsMessage()>() >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if r6 == null
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if r6 == null >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z1 = r6 instanceof org.apache.activemq.command.ActiveMQMessage
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z1 = r6 instanceof org.apache.activemq.command.ActiveMQMessage >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z1 == 0
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z2 = r1 instanceof org.apache.activemq.command.ActiveMQMessage
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $z2 = r1 instanceof org.apache.activemq.command.ActiveMQMessage >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z2 == 0
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $z2 == 0 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r7 = (org.apache.activemq.command.ActiveMQMessage) r6
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r7 = (org.apache.activemq.command.ActiveMQMessage) r6 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r11 = virtualinvoke r7.<org.apache.activemq.command.ActiveMQMessage: org.apache.activemq.command.ActiveMQDestination getOriginalDestination()>()
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r11 = virtualinvoke r7.<org.apache.activemq.command.ActiveMQMessage: org.apache.activemq.command.ActiveMQDestination getOriginalDestination()>() >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $r11 != null
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if $r11 != null >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r8 = virtualinvoke r7.<org.apache.activemq.command.ActiveMQMessage: org.apache.activemq.command.ActiveMQDestination getDestination()>()
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : r8 = virtualinvoke r7.<org.apache.activemq.command.ActiveMQMessage: org.apache.activemq.command.ActiveMQDestination getDestination()>() >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if r8 == null
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : if r8 == null >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r12 = <org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: org.slf4j.Logger LOG>
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r12 = <org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy: org.slf4j.Logger LOG> >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Setting OriginalDestination: {} on {}", r8, r1)
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Setting OriginalDestination: {} on {}", r8, r1) >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r13 = (org.apache.activemq.command.ActiveMQMessage) r1
org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : $r13 = (org.apache.activemq.command.ActiveMQMessage) r1 >>>>>>>> org.apache.activemq.camel.component.OriginalDestinationPropagateStrategy.onMessageCreated : virtualinvoke $r13.<org.apache.activemq.command.ActiveMQMessage: void setOriginalDestination(org.apache.activemq.command.ActiveMQDestination)>(r8)
