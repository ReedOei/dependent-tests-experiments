org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking for hosts without state")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking for hosts without state") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r1 = "select host_name from hosts where host_id not in (select host_id from hoststate)"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r1 = "select host_name from hosts where host_id not in (select host_id from hoststate)" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = new java.util.HashSet
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r2 = $r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r2 = $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r3 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r3 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r4 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r4 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $r9 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $r9 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $r10 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $r10 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
