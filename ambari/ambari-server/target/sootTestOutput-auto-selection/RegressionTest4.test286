org.apache.ambari.server.topology.SettingFactory.getSetting : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1
org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting
org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2)
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11
org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : return r3
org.apache.ambari.server.topology.SettingFactory.getSetting : return r3 >>>>>>>> org.apache.ambari.server.topology.Setting.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getProperties : return $r1
org.apache.ambari.server.topology.Setting.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0
org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.Setting.getSettingValue : $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : return $r6
