org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r17 = $r16 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r18 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r18 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}, outbound notifications will not be formatted", "alert-templates.xml", r17)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}, outbound notifications will not be formatted", "alert-templates.xml", r17) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null == r1
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null == r1 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$Scheduler: com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)>(2L, 2L, $r1)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$Scheduler: com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)>(2L, 2L, $r1) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : return $r2
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : return $r2 >>>>>>>> org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r1 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String url>
org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r1 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String url> >>>>>>>> org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r2 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String username>
org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r2 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String username> >>>>>>>> org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r3 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String password>
org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r3 = r0.<org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory: java.lang.String password> >>>>>>>> org.apache.ambari.server.controller.jdbc.JobHistoryPostgresConnectionFactory.getConnection : $r4 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3)
