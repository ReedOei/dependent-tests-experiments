org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: org.apache.ambari.server.state.Clusters s_clusters> = r0 >>>>>>>> org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0
org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r1 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r1 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : return $r2
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : return $r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : i0 = 0
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : i0 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : r2 = (java.util.Set) $r4
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : r2 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : if null == r2
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : if null == r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : return i0
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : return i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : r2 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster findCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : r2 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster findCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : r2 = null
org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : r2 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : if r1 != null
org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : if r1 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : r2 = null
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : r2 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : if r1 == null
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : if r1 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : if null != r2
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : if null != r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r5 = new org.apache.ambari.server.ClusterNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : $r5 = new org.apache.ambari.server.ClusterNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : specialinvoke $r5.<org.apache.ambari.server.ClusterNotFoundException: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : specialinvoke $r5.<org.apache.ambari.server.ClusterNotFoundException: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : throw $r5
org.apache.ambari.server.state.cluster.ClustersImpl.getCluster : throw $r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : r3 = $r5
org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : r3 = $r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : return r2
org.apache.ambari.server.state.cluster.ClustersImpl.findCluster : return r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : if r2 != null
org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : if z0 != 0
org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : if z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : $z1 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: boolean checkPermission(org.apache.ambari.server.state.Cluster,boolean)>(r2, z0)
org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : $z1 = specialinvoke r0.<org.apache.ambari.server.state.cluster.ClustersImpl: boolean checkPermission(org.apache.ambari.server.state.Cluster,boolean)>(r2, z0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : $r7 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : $r7 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.checkPermission : $r8 = interfaceinvoke $r7.<org.apache.ambari.server.security.SecurityHelper: java.util.Collection getCurrentAuthorities()>()
