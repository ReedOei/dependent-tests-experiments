org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r7 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if null != $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if null != $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r1 = new java.util.HashMap
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r2 = $r1
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r5 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r5 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : return r2
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : return r2 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r8 = new java.util.HashMap
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> = $r8
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> = $r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r9 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r9 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : return $r20
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : return $r20 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r7 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List m_manifest>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r7 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List m_manifest> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : if null == $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : if null == $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r9 = new java.util.HashMap
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r2 = $r9
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r2 = $r9 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r10 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r10 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r18 = new java.util.ArrayList
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r18 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : specialinvoke $r18.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : specialinvoke $r18.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List m_manifest> = $r18
org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List m_manifest> = $r18 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getStackServices : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.StackInfo: java.util.Collection getServices()>()
