org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck>
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck> >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r3 = (java.lang.String) $r5
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r3)
