org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r6 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 != 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r3 = new org.apache.ambari.server.topology.Component
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r3 = new org.apache.ambari.server.topology.Component >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r3.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r3.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 1
org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>]
org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>] >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z2 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.Stack: boolean isMasterComponent(java.lang.String)>(r1)
