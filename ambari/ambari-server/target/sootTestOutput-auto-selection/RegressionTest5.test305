org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener: org.slf4j.Logger LOG>
org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1)
org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1) >>>>>>>> org.apache.ambari.server.events.listeners.alerts.AlertLifecycleListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.AlertDefinitionRegistrationEvent: org.apache.ambari.server.state.alert.AlertDefinition getDefinition()>()
