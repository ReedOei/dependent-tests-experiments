org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r0 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r0 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r1 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r1 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i4 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i4 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i6 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i6 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = "${ambariVersion}"
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = "${ambariVersion}" >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r3 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r3 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = lengthof r3
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = lengthof r3 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i1
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i11 = $i10]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i11 = $i10] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i11 = $i10
org.apache.ambari.server.utils.VersionUtils.compareVersions : i11 = $i10 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r4 = $r16
org.apache.ambari.server.utils.VersionUtils.compareVersions : r4 = $r16 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = $r17
org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = $r17 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= i11
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= i11 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i12
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i12 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r18 = r2[i2]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r18 = r2[i2] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r21 = $r20
org.apache.ambari.server.utils.VersionUtils.compareVersions : r21 = $r20 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i14 = lengthof r3
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i14 = lengthof r3 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i14
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i14 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r23 = r3[i2]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r23 = r3[i2] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r26 = $r25
org.apache.ambari.server.utils.VersionUtils.compareVersions : r26 = $r25 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = i2 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i17 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i17 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i18 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i18 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i19 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i18)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i19 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i18) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i20 >= i19
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i20 >= i19 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r28 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i20)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r28 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i20) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = (java.lang.Integer) $r28
org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = (java.lang.Integer) $r28 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i20)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i20) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r6 = (java.lang.Integer) $r30
org.apache.ambari.server.utils.VersionUtils.compareVersions : r6 = (java.lang.Integer) $r30 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = virtualinvoke r29.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = virtualinvoke r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i22 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i22 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i21 >= $i22
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i21 >= $i22 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i23 = virtualinvoke r29.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i23 = virtualinvoke r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i24 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i24 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i23 <= $i24
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i23 <= $i24 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = i20 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = i20 + 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return $i0
