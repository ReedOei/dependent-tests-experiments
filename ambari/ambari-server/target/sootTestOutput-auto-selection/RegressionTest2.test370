org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r10 = $r9 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r11 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r11 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}", r2, r10)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}", r2, r10) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r12 = newarray (java.lang.Class)[1]
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r12 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r12[0] = class "org/apache/ambari/server/state/services/AlertNoticeDispatchService$AlertTemplates"
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r12[0] = class "org/apache/ambari/server/state/services/AlertNoticeDispatchService$AlertTemplates" >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r13 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r12)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r13 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r12) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r4 = virtualinvoke r13.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r4 = virtualinvoke r13.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null != r1
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null != r1 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("alert-templates.xml")
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("alert-templates.xml") >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r14 = interfaceinvoke r4.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>(r1)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r14 = interfaceinvoke r4.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r17 = $r16
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : r17 = $r16 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r18 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : $r18 = <org.apache.ambari.server.state.services.AlertNoticeDispatchService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}, outbound notifications will not be formatted", "alert-templates.xml", r17)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to load alert template file {}, outbound notifications will not be formatted", "alert-templates.xml", r17) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null == r1
org.apache.ambari.server.state.services.AlertNoticeDispatchService.startUp : if null == r1 >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$Scheduler: com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)>(2L, 2L, $r1)
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : $r2 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$Scheduler: com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit)>(2L, 2L, $r1) >>>>>>>> org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : return $r2
org.apache.ambari.server.state.services.AlertNoticeDispatchService.scheduler : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.ServiceDesiredStateEntityPK.setClusterId : r0.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntityPK: java.lang.Long clusterId> = r1
