org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.getResultPostProcessor : $r2 = new org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$BlueprintPostProcessor
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.getResultPostProcessor : $r2 = new org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$BlueprintPostProcessor >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.getResultPostProcessor : specialinvoke $r2.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$BlueprintPostProcessor: void <init>(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$1)>(r1, null)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.getResultPostProcessor : specialinvoke $r2.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$BlueprintPostProcessor: void <init>(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer$1)>(r1, null) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getResource : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.getResource : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getResource : return $r1
org.apache.ambari.server.api.services.BaseRequest.getResource : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultPostProcessorImpl.registerResourceProcessors : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
