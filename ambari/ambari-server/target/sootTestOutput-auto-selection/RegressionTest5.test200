org.apache.ambari.server.topology.HostGroupImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getStack : return $r1
org.apache.ambari.server.topology.HostGroupImpl.getStack : return $r1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getComponents : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components>
org.apache.ambari.server.topology.HostGroupImpl.getComponents : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getComponents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.HostGroupImpl.getComponents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getComponents : return $r2
org.apache.ambari.server.topology.HostGroupImpl.getComponents : return $r2 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getServices : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.HostGroupImpl.getServices : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getServices : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.HostGroupImpl.getServices : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.getServices : return $r2
