org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $r1 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : r2 = $r1
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List tasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List tasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : return r2
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getHosts : return r2 >>>>>>>> org.apache.ambari.server.api.query.QueryInfo.getResource : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition m_resource>
org.apache.ambari.server.api.query.QueryInfo.getResource : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: org.apache.ambari.server.api.resources.ResourceDefinition m_resource> >>>>>>>> org.apache.ambari.server.api.query.QueryInfo.getResource : return $r1
