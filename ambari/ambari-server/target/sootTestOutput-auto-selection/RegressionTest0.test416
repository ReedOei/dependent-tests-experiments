org.apache.ambari.server.api.services.RepositoryService.getRepositories : $r3 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET> >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.getRepositories : $r4 = specialinvoke r0.<org.apache.ambari.server.api.services.RepositoryService: org.apache.ambari.server.api.resources.ResourceInstance createResource(java.lang.String)>(null)
org.apache.ambari.server.api.services.RepositoryService.getRepositories : $r4 = specialinvoke r0.<org.apache.ambari.server.api.services.RepositoryService: org.apache.ambari.server.api.resources.ResourceInstance createResource(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.createResource : $r2 = new java.util.HashMap
org.apache.ambari.server.api.services.RepositoryService.createResource : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.createResource : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.RepositoryService.createResource : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.createResource : r3 = $r2
org.apache.ambari.server.api.services.RepositoryService.createResource : r3 = $r2 >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.createResource : $r4 = r0.<org.apache.ambari.server.api.services.RepositoryService: java.util.Map parentKeyProperties>
org.apache.ambari.server.api.services.RepositoryService.createResource : $r4 = r0.<org.apache.ambari.server.api.services.RepositoryService: java.util.Map parentKeyProperties> >>>>>>>> org.apache.ambari.server.api.services.RepositoryService.createResource : interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r4)
