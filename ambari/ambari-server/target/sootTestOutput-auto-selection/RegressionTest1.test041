org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.getResourceTypes : return null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : if $r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getAPIVersion : return 1
org.apache.ambari.server.api.services.BaseRequest.getAPIVersion : return 1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r3 = staticinvoke <org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent: org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder builder()>()
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r3 = staticinvoke <org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent: org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder builder()>() >>>>>>>> org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder
org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder >>>>>>>> org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: void <init>(org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$1)>(null)
org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: void <init>(org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$1)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3]
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : return $r0
org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent.builder : return $r0 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r5 = virtualinvoke $r3.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r4)
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r5 = virtualinvoke $r3.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r4) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r6 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r5
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r6 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r5 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getRemoteAddress()>()
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getRemoteAddress()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getRemoteAddress : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String m_remoteAddress>
org.apache.ambari.server.api.services.BaseRequest.getRemoteAddress : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String m_remoteAddress> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getRemoteAddress : return $r1
org.apache.ambari.server.api.services.BaseRequest.getRemoteAddress : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r7)
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r9 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r8
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r9 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r8 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r10 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>()
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r10 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.Request$Type getRequestType()>() >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST>
org.apache.ambari.server.api.services.PostRequest.getRequestType : $r1 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type POST> >>>>>>>> org.apache.ambari.server.api.services.PostRequest.getRequestType : return $r1
org.apache.ambari.server.api.services.PostRequest.getRequestType : return $r1 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withRequestType(org.apache.ambari.server.api.services.Request$Type)>($r10)
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder: org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder withRequestType(org.apache.ambari.server.api.services.Request$Type)>($r10) >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType> = r1
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.api.services.Request$Type requestType> = r1 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : $r3 = (org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : return $r3
org.apache.ambari.server.audit.request.RequestAuditEvent$RequestAuditEventBuilder.withRequestType : return $r3 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r12 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r11
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r12 = (org.apache.ambari.server.audit.event.request.DefaultRequestAuditEvent$DefaultRequestAuditEventBuilder) $r11 >>>>>>>> org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getURI()>()
org.apache.ambari.server.audit.request.eventcreator.DefaultEventCreator.createAuditEvent : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: java.lang.String getURI()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getURI : $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: java.net.URI getRequestUri()>()
