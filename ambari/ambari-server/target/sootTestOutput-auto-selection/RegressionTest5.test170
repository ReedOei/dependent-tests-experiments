org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: org.apache.ambari.server.state.Clusters s_clusters> = r0 >>>>>>>> org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0
org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_upgradeType>
org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_upgradeType> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1 >>>>>>>> org.apache.ambari.server.state.StackId.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.StackId.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0
org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.state.StackId.getStackId : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r4 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r4 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.state.StackId.getStackId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r7 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackId : $r7 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.StackId.getStackId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : return $r9
org.apache.ambari.server.state.StackId.getStackId : return $r9 >>>>>>>> org.apache.ambari.server.state.StackId.toString : return $r1
org.apache.ambari.server.state.StackId.toString : return $r1 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if r2 == null
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if r2 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if r1 == null
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if r1 == null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r16 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r16 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r17 = virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r17 = virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : r4 = (org.apache.ambari.server.state.Cluster) $r17
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : r4 = (org.apache.ambari.server.state.Cluster) $r17 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if null != r4
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : if null != r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r18 = new org.apache.ambari.server.ClusterNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : $r18 = new org.apache.ambari.server.ClusterNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : specialinvoke $r18.<org.apache.ambari.server.ClusterNotFoundException: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : specialinvoke $r18.<org.apache.ambari.server.ClusterNotFoundException: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.setCurrentStackVersion : throw $r18
