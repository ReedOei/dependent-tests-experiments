org.apache.ambari.server.notifications.DispatchFactory.getInstance : $r0 = <org.apache.ambari.server.notifications.DispatchFactory: org.apache.ambari.server.notifications.DispatchFactory s_instance> >>>>>>>> org.apache.ambari.server.notifications.DispatchFactory.getInstance : return $r0
org.apache.ambari.server.notifications.DispatchFactory.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.notifications.DispatchFactory.register : if null != r2
org.apache.ambari.server.notifications.DispatchFactory.register : if null != r2 >>>>>>>> org.apache.ambari.server.notifications.DispatchFactory.register : $r3 = r0.<org.apache.ambari.server.notifications.DispatchFactory: java.util.Map m_dispatchers>
org.apache.ambari.server.notifications.DispatchFactory.register : $r3 = r0.<org.apache.ambari.server.notifications.DispatchFactory: java.util.Map m_dispatchers> >>>>>>>> org.apache.ambari.server.notifications.DispatchFactory.register : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.ambari.server.notifications.DispatchFactory.register : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.notifications.DispatchFactory.register : goto [?= return]
