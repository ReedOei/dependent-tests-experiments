org.apache.ambari.server.api.services.LoggingService.getSearchEngine : $r4 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getSearchEngine : $r7 = specialinvoke r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.Long getClusterResourceId()>()
org.apache.ambari.server.api.services.LoggingService.getSearchEngine : $r7 = specialinvoke r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.Long getClusterResourceId()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r1 = null
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r1 = null >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r3 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r3 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r3)
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if $z0 != 0
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r4 = r0.<org.apache.ambari.server.api.services.LoggingService: org.apache.ambari.server.api.services.LoggingService$ControllerFactory controllerFactory>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r4 = r0.<org.apache.ambari.server.api.services.LoggingService: org.apache.ambari.server.api.services.LoggingService$ControllerFactory controllerFactory> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.api.services.LoggingService$ControllerFactory: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.api.services.LoggingService$ControllerFactory: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService$DefaultControllerFactory.getController : $r1 = staticinvoke <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.api.services.LoggingService$DefaultControllerFactory.getController : $r1 = staticinvoke <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController>
org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.api.services.LoggingService$DefaultControllerFactory.getController : return $r1
org.apache.ambari.server.api.services.LoggingService$DefaultControllerFactory.getController : return $r1 >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
