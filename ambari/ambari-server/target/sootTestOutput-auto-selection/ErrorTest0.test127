org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.AmbariEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.AmbariEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockArea: org.apache.ambari.annotations.TransactionalLock$LockArea[] $VALUES>
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockArea: org.apache.ambari.annotations.TransactionalLock$LockArea[] $VALUES> >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockArea[]) $r1
org.apache.ambari.annotations.TransactionalLock$LockArea.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockArea[]) $r1 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockArea.values : return $r2
org.apache.ambari.annotations.TransactionalLock$LockArea.values : return $r2 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockType.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockType: org.apache.ambari.annotations.TransactionalLock$LockType[] $VALUES>
org.apache.ambari.annotations.TransactionalLock$LockType.values : $r0 = <org.apache.ambari.annotations.TransactionalLock$LockType: org.apache.ambari.annotations.TransactionalLock$LockType[] $VALUES> >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.annotations.TransactionalLock$LockType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockType.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockType[]) $r1
org.apache.ambari.annotations.TransactionalLock$LockType.values : $r2 = (org.apache.ambari.annotations.TransactionalLock$LockType[]) $r1 >>>>>>>> org.apache.ambari.annotations.TransactionalLock$LockType.values : return $r2
org.apache.ambari.annotations.TransactionalLock$LockType.values : return $r2 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : $r4 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : $r4 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : specialinvoke $r4.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : specialinvoke $r4.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : r5 = $r4
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : r5 = $r4 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(999)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(999) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>(r3)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>("")
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>("ABORTED")
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>("ABORTED") >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: void updateHostRoleState(java.lang.String,long,long,java.lang.String,org.apache.ambari.server.agent.CommandReport)>(r1, l0, l1, r2, r5)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.abortHostRole : virtualinvoke r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: void updateHostRoleState(java.lang.String,long,long,java.lang.String,org.apache.ambari.server.agent.CommandReport)>(r1, l0, l1, r2, r5) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : z0 = 0
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : z0 = 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $r9 = <org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $r9 = <org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : if $z1 == 0
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $r22 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : $r22 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.updateHostRoleState : r5 = virtualinvoke $r22.<org.apache.ambari.server.orm.dao.HostRoleCommandDAO: java.util.List findByHostRole(java.lang.String,long,long,java.lang.String)>(r1, l0, l1, r2)
