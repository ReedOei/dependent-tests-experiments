org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: org.apache.ambari.server.state.Clusters s_clusters> = r0 >>>>>>>> org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0
org.apache.ambari.server.utils.RetryHelper.init : <org.apache.ambari.server.utils.RetryHelper: int operationsRetryAttempts> = i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r1 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r1 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : return $r2
org.apache.ambari.server.state.cluster.ClustersImpl.getClusters : return $r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : i0 = 0
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : i0 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : r2 = (java.util.Set) $r4
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : r2 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : if null == r2
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : if null == r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : return i0
org.apache.ambari.server.state.cluster.ClustersImpl.getClusterSize : return i0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById>
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $z0 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $z0 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : if $z0 != 0
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r4 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r4 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host Id = ")
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host Id = ") >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : specialinvoke $r4.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>($r7)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : specialinvoke $r4.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostById : throw $r4
