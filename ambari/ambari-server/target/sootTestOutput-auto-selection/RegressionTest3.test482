org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : r2 = r1.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : if r2 != null
org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : if r2 != null >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getTarget : $r1 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String target>
org.apache.ambari.server.state.stack.UpgradePack.getTarget : $r1 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String target> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getTarget : return $r1
org.apache.ambari.server.state.stack.UpgradePack.getTarget : return $r1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getIntermediateStacks : $r1 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List intermediateStacks>
org.apache.ambari.server.state.stack.UpgradePack.getIntermediateStacks : $r1 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List intermediateStacks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getIntermediateStacks : return $r1
