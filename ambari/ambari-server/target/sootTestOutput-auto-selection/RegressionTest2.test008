org.apache.ambari.server.state.UpgradeContext.setAutoSkipComponentFailures : r0.<org.apache.ambari.server.state.UpgradeContext: boolean m_autoSkipComponentFailures> = z0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.addUnhealthy : $r2 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.List m_unhealthy>
org.apache.ambari.server.state.UpgradeContext.addUnhealthy : $r2 = r0.<org.apache.ambari.server.state.UpgradeContext: java.util.List m_unhealthy> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.addUnhealthy : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1)
org.apache.ambari.server.state.UpgradeContext.addUnhealthy : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : r2 = r1.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : r2 = r1.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : if r2 != null
org.apache.ambari.server.state.stack.UpgradePack.mergeProcessing : if r2 != null >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setUpgradePack : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.UpgradePack m_upgradePack> = r1
