org.apache.ambari.server.stack.RepoUtil.asResponses : $r4 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : $i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.ambari.server.stack.RepoUtil.asResponses : $i0 = interfaceinvoke r0.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.stack.RepoUtil.asResponses : specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : r5 = $r4
org.apache.ambari.server.stack.RepoUtil.asResponses : r5 = $r4 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.RepoUtil.asResponses : r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.RepoUtil.asResponses : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : if $z0 == 0
org.apache.ambari.server.stack.RepoUtil.asResponses : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.asResponses : return r5
