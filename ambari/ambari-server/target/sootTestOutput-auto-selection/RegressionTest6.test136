org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_upgradeType> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getUpgradeType : return $r1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1 >>>>>>>> org.apache.ambari.server.state.StackId.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.StackId.toString : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.getStackId : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0
org.apache.ambari.server.state.StackId.getStackId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.state.StackId.getStackId : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.StackId.getStackId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r4 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackId : $r4 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.ambari.server.state.StackId.getStackId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.state.StackId.getStackId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r7 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackId : $r7 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.ambari.server.state.StackId.getStackId : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.StackId.getStackId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackId : return $r9
org.apache.ambari.server.state.StackId.getStackId : return $r9 >>>>>>>> org.apache.ambari.server.state.StackId.toString : return $r1
org.apache.ambari.server.state.StackId.toString : return $r1 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String type>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String type> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r1 == null
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String type>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String type> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i0 = $i1
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i2 = 31 * i0
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String endpoint>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String endpoint> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r3 == null
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String endpoint>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String endpoint> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i5 = 31 * i4
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r5 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String version>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r5 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r5 == null
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r6 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String version>
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $r6 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Interface: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i7 = $i5 + $i6]
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : goto [?= i7 = $i5 + $i6] >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : return i7
org.apache.ambari.server.controller.ivory.Cluster$Interface.hashCode : return i7 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String name>
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r1 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : if $r1 == null
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String name>
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r2 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : i0 = $i1
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i2 = 31 * i0
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String path>
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r3 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String path> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : if $r3 == null
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String path>
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $r4 = r0.<org.apache.ambari.server.controller.ivory.Cluster$Location: java.lang.String path> >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : return i4
org.apache.ambari.server.controller.ivory.Cluster$Location.hashCode : return i4 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getComponentToClusterInfoKeyMap : $r0 = <org.apache.ambari.server.utils.StageUtils: java.util.Map componentToClusterInfoKeyMap>
org.apache.ambari.server.utils.StageUtils.getComponentToClusterInfoKeyMap : $r0 = <org.apache.ambari.server.utils.StageUtils: java.util.Map componentToClusterInfoKeyMap> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getComponentToClusterInfoKeyMap : return $r0
org.apache.ambari.server.utils.StageUtils.getComponentToClusterInfoKeyMap : return $r0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r2 = new java.util.HashMap
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r3 = $r2
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r3 = $r2 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r9 = new java.util.HashMap
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r4 = $r9
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r4 = $r9 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("supports", r4)
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("supports", r4) >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : if $z0 == 0
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r6 = (java.util.Map$Entry) $r12
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r6 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r7 = (java.lang.String) $r13
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r7 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r8 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports attributeNameValueOf(java.lang.String)>(r7)
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r8 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports attributeNameValueOf(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : r1 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] values()>()
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : r1 = staticinvoke <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] values()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r0 = <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] $VALUES>
org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r0 = <org.apache.ambari.server.stack.ConfigurationInfo$Supports: org.apache.ambari.server.stack.ConfigurationInfo$Supports[] $VALUES> >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r2 = (org.apache.ambari.server.stack.ConfigurationInfo$Supports[]) $r1
org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : $r2 = (org.apache.ambari.server.stack.ConfigurationInfo$Supports[]) $r1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : return $r2
org.apache.ambari.server.stack.ConfigurationInfo$Supports.values : return $r2 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i0 = lengthof r1
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i1 = 0
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : if i1 >= i0
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : r2 = r1[i1]
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : r2 = r1[i1] >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : $r3 = virtualinvoke r2.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getXmlAttributeName()>()
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : $r3 = virtualinvoke r2.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String getXmlAttributeName()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.getXmlAttributeName : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String xmlAttributeName>
org.apache.ambari.server.stack.ConfigurationInfo$Supports.getXmlAttributeName : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo$Supports: java.lang.String xmlAttributeName> >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.getXmlAttributeName : return $r1
org.apache.ambari.server.stack.ConfigurationInfo$Supports.getXmlAttributeName : return $r1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0)
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : if $z0 == 0
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i1 = i1 + 1
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : goto [?= (branch)]
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : return null
org.apache.ambari.server.stack.ConfigurationInfo$Supports.attributeNameValueOf : return null >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : if r8 == null
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : if r8 == null >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r20 = <org.apache.ambari.server.stack.ConfigurationInfo: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r20 = <org.apache.ambari.server.stack.ConfigurationInfo: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unknown configuration type attribute is specified: {}={}", r7, $r21)
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unknown configuration type attribute is specified: {}={}", r7, $r21) >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes> = r3
org.apache.ambari.server.stack.ConfigurationInfo.setAttributes : r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes> = r3 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.isValid : $z0 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: boolean valid>
org.apache.ambari.server.stack.ConfigurationInfo.isValid : $z0 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: boolean valid> >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.isValid : return $z0
org.apache.ambari.server.stack.ConfigurationInfo.isValid : return $z0 >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.getAttributes : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes>
org.apache.ambari.server.stack.ConfigurationInfo.getAttributes : $r1 = r0.<org.apache.ambari.server.stack.ConfigurationInfo: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.stack.ConfigurationInfo.getAttributes : return $r1
org.apache.ambari.server.stack.ConfigurationInfo.getAttributes : return $r1 >>>>>>>> org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : if r0 == null
org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : if r0 == null >>>>>>>> org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("password")
org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("password") >>>>>>>> org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : if $z0 == 0
org.apache.ambari.server.utils.SecretReference.replacePasswordsWithReferencesForCustomProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : r3 = null
org.apache.ambari.server.topology.Configuration.removeProperty : r3 = null >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : $r5 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.removeProperty : $r5 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.removeProperty : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : if $z0 == 0
org.apache.ambari.server.topology.Configuration.removeProperty : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : $r10 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.removeProperty : $r10 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : if $r10 == null
org.apache.ambari.server.topology.Configuration.removeProperty : if $r10 == null >>>>>>>> org.apache.ambari.server.topology.Configuration.removeProperty : return r3
