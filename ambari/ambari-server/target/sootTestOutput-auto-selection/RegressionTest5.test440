org.apache.ambari.server.controller.internal.Extension.getVersion : $r1 = r0.<org.apache.ambari.server.controller.internal.Extension: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getVersion : return $r1
org.apache.ambari.server.controller.internal.Extension.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : $r2 = new org.apache.ambari.server.topology.Cardinality
org.apache.ambari.server.controller.internal.Extension.getCardinality : $r2 = new org.apache.ambari.server.topology.Cardinality >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : $r3 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map cardinalityRequirements>
org.apache.ambari.server.controller.internal.Extension.getCardinality : $r3 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map cardinalityRequirements> >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Extension.getCardinality : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : $r5 = (java.lang.String) $r4
org.apache.ambari.server.controller.internal.Extension.getCardinality : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : specialinvoke $r2.<org.apache.ambari.server.topology.Cardinality: void <init>(java.lang.String)>($r5)
org.apache.ambari.server.controller.internal.Extension.getCardinality : specialinvoke $r2.<org.apache.ambari.server.topology.Cardinality: void <init>(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getCardinality : return $r2
org.apache.ambari.server.controller.internal.Extension.getCardinality : return $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : $r1 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Extension.getComponents : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Extension.getComponents : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : r2 = $r1
org.apache.ambari.server.controller.internal.Extension.getComponents : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Collection getServices()>()
org.apache.ambari.server.controller.internal.Extension.getComponents : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getServices : $r1 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map serviceComponents>
org.apache.ambari.server.controller.internal.Extension.getServices : $r1 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map serviceComponents> >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getServices : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.Extension.getServices : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getServices : return $r2
org.apache.ambari.server.controller.internal.Extension.getServices : return $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Extension.getComponents : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Extension.getComponents : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : if $z0 == 0
org.apache.ambari.server.controller.internal.Extension.getComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getComponents : return r2
org.apache.ambari.server.controller.internal.Extension.getComponents : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $r2 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map dependencies>
org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $r2 = r0.<org.apache.ambari.server.controller.internal.Extension: java.util.Map dependencies> >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : if $z0 == 0
org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Extension.getDependenciesForComponent : return $r5
