org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : $r1 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : $r1 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : return $z0
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.isEmpty : return $z0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r3 = <org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r3 = <org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding collector host : ")
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding collector host : ") >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cluster : ")
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cluster : ") >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r11 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : if $z0 != 0
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r12 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r12 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r13 = new org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r13 = new org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : specialinvoke $r13.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : specialinvoke $r13.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r15 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r15 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager: java.util.Map clusterCollectorHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : r5 = (org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState) $r16
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : r5 = (org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState) $r16 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: void addMetricsCollectorHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAManager.addCollectorHost : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: void addMetricsCollectorHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r3 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r3 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r4 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: java.lang.String clusterName>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r4 = r0.<org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r2 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role METRICS_COLLECTOR>
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r2 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role METRICS_COLLECTOR> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r5 = virtualinvoke $r2.<org.apache.ambari.server.Role: java.lang.String name()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $r5 = virtualinvoke $r2.<org.apache.ambari.server.Role: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.Role.name : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name>
org.apache.ambari.server.Role.name : $r1 = r0.<org.apache.ambari.server.Role: java.lang.String name> >>>>>>>> org.apache.ambari.server.Role.name : return $r1
org.apache.ambari.server.Role.name : return $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $z0 = staticinvoke <org.apache.ambari.server.controller.internal.HostStatusHelper: boolean isHostComponentLive(org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, r1, "AMBARI_METRICS", $r5)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.addMetricsCollectorHost : $z0 = staticinvoke <org.apache.ambari.server.controller.internal.HostStatusHelper: boolean isHostComponentLive(org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, r1, "AMBARI_METRICS", $r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : if r1 != null
org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : if r1 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : $r8 = new org.apache.ambari.server.controller.ServiceComponentHostRequest
org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : $r8 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : specialinvoke $r8.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r2, null)
org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : specialinvoke $r8.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r2, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : r5 = $r8
org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : r5 = $r8 >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : $r9 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : $r9 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostStatusHelper.isHostComponentLive : r6 = interfaceinvoke r0.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r9)
