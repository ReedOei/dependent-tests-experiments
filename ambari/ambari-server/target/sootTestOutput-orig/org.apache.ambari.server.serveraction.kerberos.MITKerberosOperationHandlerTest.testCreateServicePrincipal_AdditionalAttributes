org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setCreateAttributes : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin.local")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null goto virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>(null)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : r6 = virtualinvoke r5.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : r7 = virtualinvoke r5.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : if r6 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : $r18 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.Integer getKeyNumber(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getCreateAttributes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.createPrincipal : $r12 = "add_principal %s %s"
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null goto r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getCreateAttributes : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : if r3 != null goto $r18 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.util.regex.Pattern PATTERN_GET_KEY_NUMBER>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : r7 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>(r6)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : $r18 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.util.regex.Pattern PATTERN_GET_KEY_NUMBER>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : virtualinvoke r5.<java.text.NumberFormat: void setGroupingUsed(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : $z2 = virtualinvoke r19.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : r3 = virtualinvoke r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : if r7 != null goto $i1 = virtualinvoke r7.<java.lang.Number: int intValue()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getKeyNumber : r6 = virtualinvoke r19.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] getExecutableSearchPaths()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r4 = r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r2 != null goto r4 = r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r7 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] DEFAULT_EXECUTABLE_SEARCH_PATHS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $z0 = virtualinvoke r6.<java.io.File: boolean canExecute()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r3 != null goto $r8 = r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setAdminServerHost : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null goto $i2 = interfaceinvoke r2.<java.util.List: int size()>()
