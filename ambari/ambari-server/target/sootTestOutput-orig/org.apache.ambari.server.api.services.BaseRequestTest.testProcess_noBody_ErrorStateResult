org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $z0 = specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: boolean isMinimal()>()
org.apache.ambari.server.api.services.BaseRequest.parseRenderer : $r6 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.resources.ResourceInstance m_resource>
org.apache.ambari.server.api.services.BaseRequest.getQueryPredicate : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.controller.spi.Predicate m_predicate>
org.apache.ambari.server.api.services.PostRequestTest.getTestRequest : $r8 = new org.apache.ambari.server.api.services.PostRequestTest$1
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean hasValidRequest()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return null
org.apache.ambari.server.api.services.BaseRequest.process : return r3
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseQueryPredicate()>()
org.apache.ambari.server.api.services.BaseRequest.process : goto [?= $r33 = interfaceinvoke r3.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()]
org.apache.ambari.server.api.services.BaseRequest.process : $r1 = <org.apache.ambari.server.api.services.BaseRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.BaseRequest.process : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.handlers.RequestHandler getRequestHandler()>()
org.apache.ambari.server.api.services.BaseRequest.process : $r33 = interfaceinvoke r3.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.services.BaseRequest.process : specialinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: void parseRenderer()>()
org.apache.ambari.server.api.services.PostRequestTest$1.getRequestHandler : $r1 = r0.<org.apache.ambari.server.api.services.PostRequestTest$1: org.apache.ambari.server.api.handlers.RequestHandler val$handler>
org.apache.ambari.server.api.services.BaseRequest.getURI : $r1 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.utils.RequestUtils.hasValidRequest : $r0 = staticinvoke <org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()>()
org.apache.ambari.server.api.services.BaseRequest.isMinimal : $r2 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo>
org.apache.ambari.server.api.services.BaseRequest.isMinimal : if r1 == null goto $z1 = 0
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : $r3 = r0.<org.apache.ambari.server.api.services.BaseRequest: org.apache.ambari.server.api.services.RequestBody m_body>
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r1 != null goto (branch)
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if r1 == null goto return
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : r2 = virtualinvoke r0.<org.apache.ambari.server.api.services.BaseRequest: java.lang.String getURI()>()
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : if i0 != -1 goto $i1 = i0 + 1
org.apache.ambari.server.api.services.BaseRequest.parseQueryPredicate : i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("?")
