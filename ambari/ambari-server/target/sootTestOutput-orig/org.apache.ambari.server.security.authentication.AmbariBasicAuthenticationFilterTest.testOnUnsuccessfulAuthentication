org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withReasonOfFailure : return r0
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withReasonOfFailure : r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure> = r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if r0 == null goto $z1 = 1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if r0 == null goto $z0 = 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : goto [?= $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)]
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck>
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r3)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z1 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z3 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean containsMultipleRemoteAddresses(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : $r7 = virtualinvoke r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: java.lang.String getCredentialsCharset(javax.servlet.http.HttpServletRequest)>(r1)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : $r11 = staticinvoke <org.apache.ambari.server.audit.event.LoginAuditEvent: org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder builder()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : r4 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Authorization")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : $r10 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : $r22 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : r5 = null
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onUnsuccessfulAuthentication : goto [?= $r10 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger>]
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.LoginAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = new org.apache.ambari.server.audit.event.LoginAuditEvent
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : goto [?= $r9 = new java.lang.String]
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : i0 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>(":")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r12 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(6)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : if i0 != -1 goto $r12 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r4 = staticinvoke <org.springframework.security.crypto.codec.Base64: byte[] decode(byte[])>(r3)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r9 = new java.lang.String
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r2)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r4 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.LoginAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Operation(User login), Roles(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r8 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Status(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r35 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Reason(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r34 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure>
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 goto $r3 = interfaceinvoke r2.<org.springframework.security.core.Authentication: java.lang.String getName()>()
