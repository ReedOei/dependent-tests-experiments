org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0 goto $r15 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : return r19
org.apache.ambari.server.topology.Configuration.getFullProperties : $r20 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r15 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : return r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String type>
org.apache.ambari.server.topology.HostGroupInfo.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration>
org.apache.ambari.server.topology.RequiredPasswordValidator.propertyExists : if r5 == null goto $z1 = specialinvoke r0.<org.apache.ambari.server.topology.RequiredPasswordValidator: boolean setDefaultPassword(org.apache.ambari.server.topology.ClusterTopology,java.lang.String,java.lang.String)>(r1, r3, r4)
org.apache.ambari.server.topology.RequiredPasswordValidator.propertyExists : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $z5 = specialinvoke r0.<org.apache.ambari.server.topology.RequiredPasswordValidator: boolean propertyExists(org.apache.ambari.server.topology.ClusterTopology,java.util.Map,java.lang.String,java.lang.String)>(r1, r7, r19, r20)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : if r21 != null goto $r37 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r10 = interfaceinvoke r9.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r17 = interfaceinvoke r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r14 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r13)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r26 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r19 = virtualinvoke r18.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getType()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $z3 = interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r14)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : interfaceinvoke r22.<java.util.Collection: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r23 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r37 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r27 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r38 = new java.util.HashSet
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r9 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r34 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : if r22 != null goto interfaceinvoke r22.<java.util.Collection: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r21)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r30 = new java.util.HashSet
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : goto [?= $z4 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r22)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r31 = interfaceinvoke r11.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r35 = new java.util.HashMap
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r2 = new java.util.HashMap
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r11 = interfaceinvoke r9.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r6)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : return r3
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER")
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r20 = virtualinvoke r18.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getName()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r15 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType PASSWORD>
org.apache.ambari.server.topology.RequiredPasswordValidator.setDefaultPassword : z0 = 0
org.apache.ambari.server.topology.RequiredPasswordValidator.setDefaultPassword : return z0
org.apache.ambari.server.topology.RequiredPasswordValidator.setDefaultPassword : $r4 = r0.<org.apache.ambari.server.topology.RequiredPasswordValidator: java.lang.String defaultPassword>
org.apache.ambari.server.topology.HostGroupInfo.setConfiguration : r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration> = r1
org.apache.ambari.server.topology.RequiredPasswordValidator.validate : r2 = specialinvoke r0.<org.apache.ambari.server.topology.RequiredPasswordValidator: java.util.Map validateRequiredPasswords(org.apache.ambari.server.topology.ClusterTopology)>(r1)
org.apache.ambari.server.topology.RequiredPasswordValidator.validate : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validate : $r4 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getName : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String name>
