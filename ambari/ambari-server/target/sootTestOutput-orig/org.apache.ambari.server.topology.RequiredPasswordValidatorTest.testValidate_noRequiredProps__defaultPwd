org.apache.ambari.server.topology.Configuration.getFullProperties : if i0 != 0 goto $r15 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : return r19
org.apache.ambari.server.topology.Configuration.getFullProperties : $r20 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r15 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r8 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getFullProperties : $r7 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.getFullProperties : return r1
org.apache.ambari.server.topology.HostGroupInfo.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration>
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r30 = new java.util.HashSet
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r10 = interfaceinvoke r9.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r17 = interfaceinvoke r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r31 = interfaceinvoke r11.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r14 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r13)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r26 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r2 = new java.util.HashMap
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r11 = interfaceinvoke r9.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r6)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $z3 = interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r14)
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : return r3
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER")
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r23 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r27 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : r9 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.RequiredPasswordValidator.validateRequiredPasswords : $r15 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType PASSWORD>
org.apache.ambari.server.topology.HostGroupInfo.setConfiguration : r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration> = r1
org.apache.ambari.server.topology.RequiredPasswordValidator.validate : r2 = specialinvoke r0.<org.apache.ambari.server.topology.RequiredPasswordValidator: java.util.Map validateRequiredPasswords(org.apache.ambari.server.topology.ClusterTopology)>(r1)
org.apache.ambari.server.topology.RequiredPasswordValidator.validate : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
