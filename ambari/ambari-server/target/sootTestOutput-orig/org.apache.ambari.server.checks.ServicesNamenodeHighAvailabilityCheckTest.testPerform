org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r9 = r0.<org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r13 = virtualinvoke r7.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r17 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r16 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : r5 = "hdfs-site"
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r15 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r14 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheck.perform : $r12 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs-site")
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest$1: org.apache.ambari.server.checks.ServicesNamenodeHighAvailabilityCheckTest this$0>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
