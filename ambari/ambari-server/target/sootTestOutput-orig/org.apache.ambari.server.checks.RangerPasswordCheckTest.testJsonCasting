org.apache.ambari.server.state.SecurityState.values : $r0 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState[] $VALUES>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r64 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r14, 10)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r10 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r19 = new java.util.ArrayList
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r7 goto r8 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r7 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if z8 == 0 goto $z12 = interfaceinvoke r13.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z12 = interfaceinvoke r13.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $i1 = virtualinvoke r6.<java.lang.String: int length()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z4 = interfaceinvoke r13.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r6 goto r7 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r65 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r17 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : z8 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: boolean checkRangerUser(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List)>(r5, r12, r7, r8, r9, r1, r2, r14)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r8 goto r9 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r20 = new java.util.ArrayList
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("admin-properties", "policymgr_external_url", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>("/")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z14 = interfaceinvoke r14.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r9 goto r10 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : i0 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>(r5, r11, r7, r8)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z6 = interfaceinvoke r14.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r3 = new org.apache.ambari.server.controller.internal.URLStreamProvider
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r66 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r9 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z4 = interfaceinvoke r13.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r8 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r10 goto $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>("/")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i0) {     case 200: goto goto [?= (branch)];     case 401: goto r15 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2);     default: goto r23 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2); }
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : $r14 = virtualinvoke r7.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : if null != r7 goto $r14 = virtualinvoke r7.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : $r10 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : $r13 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getProperty : $r15 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.checks.RangerPasswordCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.RangerPasswordCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.RangerPasswordCheckTest$1: org.apache.ambari.server.checks.RangerPasswordCheckTest this$0>
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r42 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r47 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("invalid_response", r6, r7)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r48 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r19 = (java.io.InputStream) null
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r21 = new java.io.InputStreamReader
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r18 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r10 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.util.Map getHeaders(java.lang.String,java.lang.String)>(r3, r4)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r20 = new com.google.gson.Gson
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z0 = interfaceinvoke r14.<java.util.Map: boolean containsKey(java.lang.Object)>("vXUsers")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : i0 = virtualinvoke r11.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r41 = $r40
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r44 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r14 = (java.util.Map) r13
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r25 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("vXUsers")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if i0 != 200 goto (branch)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.RangerPasswordCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.RangerPasswordCheckTest: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : return r4
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r13 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r10 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r16 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r3 = new java.util.HashMap
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : return r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : if null != r5 goto return r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r4, r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : i0 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : goto [?= return i0]
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : return i0
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : if i0 != 200 goto return i0
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : r5 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.util.Map getHeaders(java.lang.String,java.lang.String)>(r3, r4)
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : $r9 = (java.io.InputStream) null
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : $r10 = new com.google.gson.Gson
org.apache.ambari.server.checks.RangerPasswordCheck.checkLogin : $r11 = new java.io.InputStreamReader
org.apache.ambari.server.configuration.ComponentSSLConfiguration.instance : $r0 = <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration singleton>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason>
