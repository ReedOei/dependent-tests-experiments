org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null goto return 0
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 goto (branch)
org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null goto $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r5)
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r4 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type[] values()>()
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : if r6 == null goto i1 = i1 + 1
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.api.query.render.BaseRenderer.addKeys : r3 = virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r1)
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void copyPropertiesToResult(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.util.TreeNode)>(r4, r5)
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $r8 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.BaseRenderer.isRequestWithNoProperties : $r2 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.controller.spi.Resource$Type.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r1 == null goto $r8 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r8 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.query.render.BaseRenderer.getSchema : $r2 = r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory>
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : return r3
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : z1 = 1
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : $r4 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : $r5 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.DefaultRenderer: void copyPropertiesToResult(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.util.TreeNode)>(r1, r3)
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.DefaultRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r3, z1)
org.apache.ambari.server.api.query.render.DefaultRenderer.finalizeProperties : if z0 != 0 goto virtualinvoke r0.<org.apache.ambari.server.api.query.render.DefaultRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r3, z1)
org.apache.ambari.server.api.util.TreeNodeImpl.getName : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.String m_name>
org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.query.QueryInfo.getProperties : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set m_properties>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>(r2, r3)
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r7 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.String getName()>()
org.apache.ambari.server.api.query.render.BaseRenderer.ensureRequiredProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void ensureRequiredProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r5, z0)
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : return r2
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.valueOf : if r2 != null goto return r2
