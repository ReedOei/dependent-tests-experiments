org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setOperatingSystems : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_operatingSystems(java.lang.String)>(r1)
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null goto return
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.controller.internal.ResourceImpl.setProperty : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyCategory(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isActivelyPurgeTemporaryKeyStore()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r15 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r26 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUser()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r22 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseDriver()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r57 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r42 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $l2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: long getTemporaryKeyStoreRetentionMinutes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r30 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabasePassword()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r61 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r17 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUrl()>()
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.controller.internal.CompatibleRepositoryVersionResourceProviderTest$3.configure : specialinvoke r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void configure()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null goto r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = ""
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 goto $r3 = new java.lang.RuntimeException
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.AlertResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO m_dao>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setDisplayName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_displayName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_version(java.lang.String)>(r1)
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.setStack : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_set_stack(org.apache.ambari.server.orm.entities.StackEntity)>(r1)
org.apache.ambari.server.controller.internal.ResourceImpl.equals : if r1 == null goto return 0
org.apache.ambari.server.controller.internal.ResourceImpl.equals : if r0 != r1 goto (branch)
org.apache.ambari.server.controller.internal.ResourceImpl.equals : r2 = (org.apache.ambari.server.controller.internal.ResourceImpl) r1
org.apache.ambari.server.controller.internal.ResourceImpl.equals : $r5 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: org.apache.ambari.server.controller.spi.Resource$Type type>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1)
