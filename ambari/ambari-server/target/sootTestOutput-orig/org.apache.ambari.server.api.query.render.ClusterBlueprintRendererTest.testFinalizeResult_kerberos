org.apache.ambari.server.controller.spi.Resource$Type.access$000 : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type getType(java.lang.String)>(r0)
org.apache.ambari.server.controller.internal.ResourceImpl.setProperty : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyCategory(java.lang.String)>(r1)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_2", r4)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r90 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r93 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : r8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("artifact_data/properties", r10)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r23 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r49 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r28 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.Configuration emptyConfiguration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r26 = newarray (java.lang.String)[2]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r72 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r79 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r88 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r16 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r22 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r31 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r37 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r43 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/topology/AmbariContext")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r78 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r65 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $l0 = staticinvoke <org.easymock.EasyMock: long anyLong()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r25 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r60 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r54 = <org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r87 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r24 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ResourceProvider")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("testProperty", "testValue")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r97 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "org/apache/ambari/server/topology/AmbariContext")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host_group_1", r3)
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : $r98 = newarray (java.lang.Object)[5]
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.setupMocksForKerberosEnabledCluster : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>("host1")
org.apache.ambari.server.topology.HostGroupInfo.setConfiguration : r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration> = r1
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.createClusterResultTree : $r3 = new org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest$1
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.createClusterResultTree : interfaceinvoke r5.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest.createClusterResultTree : specialinvoke r0.<org.apache.ambari.server.api.query.render.ClusterBlueprintRendererTest: void createClusterResultTree(org.apache.ambari.server.api.util.TreeNode,java.util.Map)>(r1, null)
org.apache.ambari.server.topology.HostGroupInfo.addHost : $r5 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames>
org.apache.ambari.server.topology.HostGroupInfo.addHost : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostGroupInfo.addHost : exitmonitor r2
org.apache.ambari.server.topology.HostGroupInfo.addHost : $r7 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames>
org.apache.ambari.server.topology.HostGroupInfo.addHost : r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.api.services.ResultImpl.getResultTree : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.util.TreeNode m_tree>
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type access$000(java.lang.String)>(r1)
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : if r2 != null goto $r3 = r2
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>()
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r1 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.topology.HostGroupInfo.addHosts : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostGroupInfo.addHosts : $r6 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames>
org.apache.ambari.server.topology.HostGroupInfo.addHosts : exitmonitor r2
org.apache.ambari.server.topology.HostGroupInfo.addHosts : virtualinvoke r0.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r4)
org.apache.ambari.server.topology.HostGroupInfo.addHosts : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
