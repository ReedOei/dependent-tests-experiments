org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i2 = virtualinvoke r9.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r13 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r12 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterPort")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i0 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i4 = virtualinvoke r12.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterProtocol")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r8 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterHostname")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r10 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r10 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterHostname>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r12 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.Integer masterPort>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $i1 = lengthof r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r14 = r3[0]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.String masterProtocol>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r19 = virtualinvoke r2.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r16 = r3[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : $r7 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getAmbariServerURI : virtualinvoke r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken
