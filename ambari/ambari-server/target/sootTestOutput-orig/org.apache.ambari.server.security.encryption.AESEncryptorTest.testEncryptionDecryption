org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r12 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r9 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r7 = new javax.crypto.spec.SecretKeySpec
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r4 = new java.lang.String
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null goto return
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : return r2
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : $r1 = new java.util.ArrayList
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r25 = new org.apache.ambari.server.controller.ControllerModule
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_GROUP_BASE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r27 = new java.lang.RuntimeException
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r1 = new java.util.Properties
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_SECURITY>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : r3 = $r26
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r1 = class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator"
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r2 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r3 = virtualinvoke r0.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>()
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = null
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r6 = new javax.crypto.spec.PBEKeySpec
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r2 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: byte[] salt>
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1")
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r5)
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : goto [?= return r3]
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r2 = new org.apache.ambari.server.security.encryption.EncryptionResult
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r5 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= return z0]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : return z0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r7 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r2 = staticinvoke <org.apache.commons.lang.ClassUtils: java.util.List getAllInterfaces(java.lang.Class)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z2 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= return r4]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean isEligible(java.lang.Class,java.util.List)>(r8, r2)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r15 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r8 = virtualinvoke r7.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.Class load()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : return r4
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r12 = virtualinvoke r5.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r3 = new java.util.HashSet
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r11 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r9 = class "org/apache/ambari/server/cleanup/ClasspathScannerUtils"
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r16 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.lang.String getPackageToScan()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/request/RequestAuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z0 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkSubClasses(java.lang.Class,java.util.List)>(r0, r1)
