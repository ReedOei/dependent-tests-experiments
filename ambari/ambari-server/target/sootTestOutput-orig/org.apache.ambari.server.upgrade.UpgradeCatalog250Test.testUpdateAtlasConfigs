org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r12 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r9, r3, z0, r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, r2, r12, r6, r39)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i2 = interfaceinvoke r10.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r31 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null goto r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r39 goto interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, r2, r12, r6, r39)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r13 = $r33
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r35 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r9, r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null goto r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null goto return
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null goto $i2 = interfaceinvoke r10.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r36 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r34 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, r3, null, z0, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r14 == null goto (branch)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : $r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "true")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : if r6 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : $r9 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : $r11 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : $z1 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>("ATLAS")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasHookConfig : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r1, r3, r7, z0, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAtlasHookConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r5, "STORM", "storm-env", "storm.atlas.hook")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : $r8 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAtlasHookConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r5, "FALCON", "falcon-env", "falcon.atlas.hook")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAtlasHookConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r5, "HIVE", "hive-env", "hive.atlas.hook")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAtlasHookConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String)>(r5, "SQOOP", "sqoop-env", "sqoop.atlas.hook")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : if r3 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAtlasConfigs : if r2 == null goto return
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$400 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250.getTargetVersion : return "2.5.0"
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r43 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r4 = new org.apache.ambari.server.upgrade.UpgradeCatalog250Test$13
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : virtualinvoke r6.<org.easymock.EasyMockSupport: void verifyAll()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r79 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r23 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r81 = virtualinvoke r10.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r39 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r34 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r57 = virtualinvoke r6.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "com/google/inject/Injector")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : r10 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r80 = new org.apache.ambari.server.upgrade.UpgradeCatalog250
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementControllerImpl")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r82 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r2, r12)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r62 = virtualinvoke r8.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r58 = interfaceinvoke r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r14 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r33 = virtualinvoke r6.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Config")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r13 = new org.easymock.EasyMockSupport
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testUpdateAtlasHookConfig : $r28 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return r5
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0 goto (branch)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r4 = new java.util.HashMap
