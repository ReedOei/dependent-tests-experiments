org.apache.ambari.server.controller.AmbariManagementControllerTest.afterClass : $r0 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: com.google.inject.Injector injector>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.longToMillis : $b1 = l0 cmp 9999999999L
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.longToMillis : return l0
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null goto return
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest.getTemporalInfo : $r4 = new org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest$1
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $l6 = l3 - l4
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r10 = virtualinvoke r1.<java.util.TreeMap: java.util.NavigableSet descendingKeySet()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r6 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision HOURS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l2]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l2
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r8 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision MINUTES>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : r2 = staticinvoke <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision getPrecision(long,long)>(l0, l1)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r3 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision DAYS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if r1 == null goto l2 = -1L
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.controller.AmbariManagementControllerTest.beforeClass : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule
org.apache.ambari.server.controller.AmbariManagementControllerTest.beforeClass : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties getProperties()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.beforeClass : $r5 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r9 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object firstKey()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : r4 = virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: java.util.TreeMap getMetricValues()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : l15 = l3 + l4
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r7 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.TemporalInfo: java.lang.Long getStartTime()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r8 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.TemporalInfo: java.lang.Long getEndTime()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $b13 = l4 cmp -1L
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: void setMetricValues(java.util.TreeMap)>(r4)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : r5 = null
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : l5 = l0
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : if r4 == null goto return
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r6 = r0.<org.apache.ambari.server.controller.metrics.MetricsPaddingMethod: org.apache.ambari.server.controller.metrics.MetricsPaddingMethod$PADDING_STRATEGY strategy>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : l4 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.MetricsPaddingMethod: long getTimelineMetricInterval(java.util.TreeMap,long,long)>(r4, l0, l1)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r11 = virtualinvoke r4.<java.util.TreeMap: java.lang.Object lastKey()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $r15 = r0.<org.apache.ambari.server.controller.metrics.MetricsPaddingMethod: org.apache.ambari.server.controller.metrics.MetricsPaddingMethod$PADDING_STRATEGY strategy>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.applyPaddingStrategy : $b10 = l4 cmp -1L
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.getProperties : $r1 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest$1.getEndTime : $r1 = r0.<org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest$1: java.lang.Long val$endTime>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest$1.getStartTime : $r1 = r0.<org.apache.ambari.server.controller.metrics.timeline.MetricsPaddingMethodTest$1: java.lang.Long val$startTime>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
