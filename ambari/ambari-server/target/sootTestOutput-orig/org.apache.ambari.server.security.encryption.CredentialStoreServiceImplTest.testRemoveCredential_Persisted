org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredential : return r4
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredential : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r3)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredential : if r4 != null goto return r4
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredential : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredential : $r5 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r3 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.FileBasedCredentialStore persistedCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r4 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.isInitialized : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r11 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : return r3
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : goto [?= $r11 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.loadKeyStore : goto [?= return r3]
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r5 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.security.KeyStore loadCredentialStore()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r6 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : r3 = null
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : if r4 == null goto (branch)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : goto [?= $r17 = staticinvoke <org.apache.ambari.server.security.credential.CredentialFactory: org.apache.ambari.server.security.credential.Credential createCredential(char[])>(r3)]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : if r1 != null goto $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : if r1 == null goto $r17 = staticinvoke <org.apache.ambari.server.security.credential.CredentialFactory: org.apache.ambari.server.security.credential.Credential createCredential(char[])>(r3)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r17 = staticinvoke <org.apache.ambari.server.security.credential.CredentialFactory: org.apache.ambari.server.security.credential.Credential createCredential(char[])>(r3)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getCredential : $r7 = interfaceinvoke r4.<java.security.Key: byte[] getEncoded()>()
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r12 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r9 = r0.<org.apache.ambari.server.security.encryption.AESEncryptor: javax.crypto.Cipher dcipher>
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r7 = new javax.crypto.spec.SecretKeySpec
org.apache.ambari.server.security.encryption.AESEncryptor.decrypt : $r4 = new java.lang.String
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: void validateInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r4)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : $r5 = specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.CredentialStore getCredentialStore(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r4)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.setCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: void removeCredential(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.setMasterKeyService : r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService> = r1
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStorePath : $r1 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : if r1 != null goto r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : $r7 = virtualinvoke r3.<java.nio.CharBuffer: char[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : return r4
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : $r8 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8")
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toChars : $r6 = virtualinvoke r3.<java.nio.CharBuffer: char[] array()>()
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrincipalKeyCredential")
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.credential.PrincipalKeyCredential.toValue : $r4 = new com.google.gson.Gson
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r3
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r9 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: void persistCredentialStore(java.security.KeyStore)>(r2)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : if r1 == null goto return
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : virtualinvoke r2.<java.security.KeyStore: void deleteEntry(java.lang.String)>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : r2 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.security.KeyStore loadCredentialStore()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : goto [?= $r8 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : goto [?= return]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : $r5 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : if r2 == null goto $r8 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.removeCredential : $r8 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.getMasterSecret : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r3
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r9 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r10 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.writeKeyStore : $r6 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.writeKeyStore : $r4 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.writeKeyStore : goto [?= return]
org.apache.ambari.server.security.credential.PrincipalKeyCredential.equals : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.credential.PrincipalKeyCredential.equals : if r1 != null goto (branch)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.equals : if r0 != r1 goto $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.security.credential.PrincipalKeyCredential.equals : r2 = (org.apache.ambari.server.security.credential.PrincipalKeyCredential) r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.equals : $r4 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : r4 = null
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r4)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : $r3 = <org.apache.ambari.server.security.encryption.FileBasedCredentialStore: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : goto [?= return]
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : $r8 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.putKeyStore : virtualinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: void writeKeyStore(java.security.KeyStore,java.io.OutputStream)>(r1, r4)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.createAliasPrefix : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : virtualinvoke r3.<java.lang.Thread: void setDaemon(boolean)>(1)
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : if r3 == null goto return r3
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : return r3
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.InMemoryCredentialStore$1.newThread : $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ThreadFactory defaultThreadFactory()>()
org.apache.ambari.server.security.credential.CredentialFactory.createCredential : r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r0)
org.apache.ambari.server.security.credential.CredentialFactory.createCredential : if r0 != null goto r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r0)
org.apache.ambari.server.security.credential.CredentialFactory.createCredential : $r2 = staticinvoke <org.apache.ambari.server.security.credential.PrincipalKeyCredential: org.apache.ambari.server.security.credential.PrincipalKeyCredential fromValue(java.lang.String)>(r1)
org.apache.ambari.server.security.credential.CredentialFactory.createCredential : return null
org.apache.ambari.server.security.credential.CredentialFactory.createCredential : $z0 = staticinvoke <org.apache.ambari.server.security.credential.PrincipalKeyCredential: boolean isValidValue(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.persistCredentialStore : $r2 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : goto [?= r5 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore loadKeyStore(java.io.InputStream,java.lang.String)>(r3, r2)]
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : goto [?= return r5]
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : return r5
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r17 = <org.apache.ambari.server.security.encryption.FileBasedCredentialStore: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r3 = null
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r3)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r7 = <org.apache.ambari.server.security.encryption.FileBasedCredentialStore: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $r9 = new java.io.FileInputStream
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : r5 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.security.KeyStore loadKeyStore(java.io.InputStream,java.lang.String)>(r3, r2)
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.getKeyStore : $l0 = virtualinvoke r1.<java.io.File: long length()>()
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = null
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : $r6 = new javax.crypto.spec.PBEKeySpec
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1")
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : r3 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r5)
org.apache.ambari.server.security.encryption.AESEncryptor.getKeyFromPassword : goto [?= return r3]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r6 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.security.KeyStore loadCredentialStore()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r9 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: org.apache.ambari.server.security.encryption.MasterKeyService masterKeyService>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: void addCredential(java.security.KeyStore,java.lang.String,org.apache.ambari.server.security.credential.Credential)>(r3, r1, r2)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : virtualinvoke r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: void persistCredentialStore(java.security.KeyStore)>(r3)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r1 == null goto return
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r4 == null goto r5 = null
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r1 == null goto $r5 = new java.lang.IllegalArgumentException
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : goto [?= return]
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r7 = new javax.crypto.spec.SecretKeySpec
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : $r7 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.addCredential : if r3 != null goto $r6 = interfaceinvoke r3.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r3 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r11 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.ambari.server.security.encryption.AESEncryptor aes>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r51 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r21.<java.nio.channels.FileChannel: java.nio.channels.FileChannel truncate(long)>(0L)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r21 == null goto (branch)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r21.<java.nio.channels.FileChannel: void close()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : virtualinvoke r50.<java.util.ArrayList: boolean add(java.lang.Object)>(r71)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= (branch)]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>(r0, "UTF8", r50)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r1 == null goto $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r57 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : goto [?= return 1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : if r3 == null goto return 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : staticinvoke <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void protectAccess(java.io.File)>(r0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : return 1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $l0 = virtualinvoke r0.<java.io.File: long length()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r17 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : r21 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r22 = new java.io.FileOutputStream
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r2 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeMasterKeyFile : $r49 = new java.util.ArrayList
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z8 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : if r1 == null goto return
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : r2 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: java.util.concurrent.locks.Lock getLock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : $r4 = r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: com.google.common.cache.Cache cache>
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : goto [?= return]
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.removeCredential : interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("::")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r16 = new java.lang.String
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : goto [?= return]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>(r1, "UTF8")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r7 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.initializeFromFile : $r12 = new java.lang.String
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.lang.String createSecurePassword(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(null, null, null, null, null, null)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r3 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $z6 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i23 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $i30 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r14 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_UPPERCASE_LETTERS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $i28 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r40 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i8 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i18 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i13 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r2 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r30 = <org.apache.ambari.server.security.SecurePasswordHelper: char[][] SECURE_PASSWORD_CHARACTER_CLASSES>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r1 == null goto r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r26 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_WHITESPACE>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r10 = new java.util.ArrayList
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r33 = r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.security.SecureRandom secureRandom>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r22 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_PUNCTUATION>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r37 = r0.<org.apache.ambari.server.security.SecurePasswordHelper: java.security.SecureRandom secureRandom>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r11 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_LOWERCASE_LETTERS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r4 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r6 != null goto $r10 = new java.util.ArrayList
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i0 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r18 = <org.apache.ambari.server.security.SecurePasswordHelper: char[] SECURE_PASSWORD_CHARACTER_CLASS_DIGITS>
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : i1 = 0
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : if r5 != null goto (branch)
org.apache.ambari.server.security.SecurePasswordHelper.createSecurePassword : $r35 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : goto [?= return l0]
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $r13 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : return l0
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty TEMPORARYSTORE_RETENTION_MINUTES>
org.apache.ambari.server.configuration.Configuration.getTemporaryKeyStoreRetentionMinutes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r17 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r21 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r1 = new java.util.Properties
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/security/SecurePasswordHelper")
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImplTest$1.configure : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : if r0 == null goto r2 = r1
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : if r2 != null goto $r8 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.canonicalizeAlias : r3 = staticinvoke <org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: java.lang.String createAliasPrefix(java.lang.String)>(r0)
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : return r3
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8")
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : $r2 = new org.apache.ambari.server.security.encryption.EncryptionResult
org.apache.ambari.server.security.encryption.AESEncryptor.encrypt : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.AESEncryptor: org.apache.ambari.server.security.encryption.EncryptionResult encrypt(byte[])>(r2)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.validateInitialized : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r1)
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty TEMPORARYSTORE_ACTIVELY_PURGE>
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : return 1
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r13 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $r12 = "true"
org.apache.ambari.server.configuration.Configuration.isActivelyPurgeTemporaryKeyStore : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.fromValue : $z1 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.credential.PrincipalKeyCredential.fromValue : $z0 = staticinvoke <org.apache.ambari.server.security.credential.PrincipalKeyCredential: boolean isValidValue(java.lang.String)>(r0)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.fromValue : $r1 = "PrincipalKeyCredential"
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r3 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.FileBasedCredentialStore persistedCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r4 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.getCredentialStore : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r7 = virtualinvoke r2.<java.nio.CharBuffer: char[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r8 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>()
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : return r4
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : if r1 != null goto r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r1)
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8")
org.apache.ambari.server.security.encryption.AbstractCredentialStore.toBytes : $r6 = virtualinvoke r3.<java.nio.ByteBuffer: byte[] array()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $r6 = new java.io.FileReader
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : r1 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $i1 = virtualinvoke r1.<java.io.FileReader: int read(char[])>(r2)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : goto [?= return z0]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : if r1 == null goto return z0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : virtualinvoke r1.<java.io.FileReader: void close()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyFile : $r7 = "#1.0# "
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r5 = new org.apache.ambari.server.security.encryption.FileBasedCredentialStore
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializePersistedCredentialStore : $r6 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.FileBasedCredentialStore persistedCredentialStore>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.isValidValue : if r0 == null goto $z1 = 0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : if r1 == null goto return r2
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : return r2
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : r2 = null
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : interfaceinvoke r3.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : if r4 == null goto interfaceinvoke r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : r3 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: java.util.concurrent.locks.Lock getLock()>()
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : $r6 = r0.<org.apache.ambari.server.security.encryption.InMemoryCredentialStore: com.google.common.cache.Cache cache>
org.apache.ambari.server.security.encryption.InMemoryCredentialStore.getCredential : goto [?= return r2]
org.apache.ambari.server.security.encryption.FileBasedCredentialStore.loadCredentialStore : $r1 = r0.<org.apache.ambari.server.security.encryption.FileBasedCredentialStore: java.io.File keyStoreFile>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.security.encryption.AbstractCredentialStore.getLock : $r1 = r0.<org.apache.ambari.server.security.encryption.AbstractCredentialStore: java.util.concurrent.locks.Lock lock>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r4 = new org.apache.ambari.server.security.encryption.InMemoryCredentialStore
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r5 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.InMemoryCredentialStore temporaryCredentialStore>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.initializeTemporaryCredentialStore : $r2 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $z0 = virtualinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r3)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r4 = specialinvoke r0.<org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl: org.apache.ambari.server.security.encryption.CredentialStore getCredentialStore(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r3)
org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl.removeCredential : $r4 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
