org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r5 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r5[0] = $r0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r5[0] = $r0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r6 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r6 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> = $r6
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> = $r6 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r7 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r7 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/GuiceJpaInitializer")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/GuiceJpaInitializer") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r9 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r9 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r11 = (org.apache.ambari.server.state.Clusters) $r10
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r11 = (org.apache.ambari.server.state.Clusters) $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters> = $r11
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters> = $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r12 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r12 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r13 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r13 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r13.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r13.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.1.1") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r13)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", $r13) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r14 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r14 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1> = $r15
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1> = $r15 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r16 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r16 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r17 = interfaceinvoke $r16.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r1 = (org.apache.ambari.server.configuration.Configuration) $r17
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r1 = (org.apache.ambari.server.configuration.Configuration) $r17 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METRIC_RETRIEVAL_SERVICE_REQUEST_TTL_ENABLED>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METRIC_RETRIEVAL_SERVICE_REQUEST_TTL_ENABLED> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: void setProperty(java.lang.String,java.lang.String)>($r19, "false")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: void setProperty(java.lang.String,java.lang.String)>($r19, "false") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void init(org.apache.ambari.server.configuration.Configuration)>(r1)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void init(org.apache.ambari.server.configuration.Configuration)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r20 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r20 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r21 = interfaceinvoke $r20.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/services/MetricsRetrievalService")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r21 = interfaceinvoke $r20.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/services/MetricsRetrievalService") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r2 = (org.apache.ambari.server.state.services.MetricsRetrievalService) $r21
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r2 = (org.apache.ambari.server.state.services.MetricsRetrievalService) $r21 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r2.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.util.concurrent.ListenableFuture start()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r2.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.util.concurrent.ListenableFuture start()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r23 = new org.apache.ambari.server.utils.SynchronousThreadPoolExecutor
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r23 = new org.apache.ambari.server.utils.SynchronousThreadPoolExecutor >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r23.<org.apache.ambari.server.utils.SynchronousThreadPoolExecutor: void <init>()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : specialinvoke $r23.<org.apache.ambari.server.utils.SynchronousThreadPoolExecutor: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r2.<org.apache.ambari.server.state.services.MetricsRetrievalService: void setThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor)>($r23)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r2.<org.apache.ambari.server.state.services.MetricsRetrievalService: void setThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor)>($r23) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r25 = (org.apache.ambari.server.controller.AmbariManagementController) $r24
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r25 = (org.apache.ambari.server.controller.AmbariManagementController) $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> = $r25
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> = $r25 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r26 = class "org/apache/ambari/server/controller/AmbariServer"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r26 = class "org/apache/ambari/server/controller/AmbariServer" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r3 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusterController")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r3 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusterController") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r3.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r27 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r27 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, $r27)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, $r27) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r4 = (org.apache.ambari.server.state.ConfigHelper) $r28
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : r4 = (org.apache.ambari.server.state.ConfigHelper) $r28 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r29 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r29 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r30 = interfaceinvoke $r29.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r30 = interfaceinvoke $r29.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r32 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r32 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r33 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r33 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r33.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r35 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r35 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.events.publishers.AmbariEventPublisher getAmbariEventPublisher()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r36 = interfaceinvoke $r35.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.events.publishers.AmbariEventPublisher getAmbariEventPublisher()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r39 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r38)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r39 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r41 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r41 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r42 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r42 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r42)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r44 = (org.apache.ambari.server.state.Cluster) $r43
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r44 = (org.apache.ambari.server.state.Cluster) $r43 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r46 = interfaceinvoke $r41.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Map findConfigurationTagsWithOverrides(org.apache.ambari.server.state.Cluster,java.lang.String)>($r44, $r45)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r46 = interfaceinvoke $r41.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Map findConfigurationTagsWithOverrides(org.apache.ambari.server.state.Cluster,java.lang.String)>($r44, $r45) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r47 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r48 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("tag", "version1")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r48 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("tag", "version1") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r49 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("storm-site", $r48)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r49 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("storm-site", $r48) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r50 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r50 = interfaceinvoke $r47.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r52 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r52 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r53 = interfaceinvoke $r52.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ConfigHelper getConfigHelper()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r53 = interfaceinvoke $r52.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ConfigHelper getConfigHelper()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r55 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r55 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r57 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r57 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.state.Cluster c1> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r57)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r59 = (org.apache.ambari.server.state.Cluster) $r58
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r59 = (org.apache.ambari.server.state.Cluster) $r58 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r61 = (java.util.Map) $r60
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r61 = (java.util.Map) $r60 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r62 = virtualinvoke r4.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveConfigProperties(org.apache.ambari.server.state.Cluster,java.util.Map)>($r59, $r61)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r62 = virtualinvoke r4.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getEffectiveConfigProperties(org.apache.ambari.server.state.Cluster,java.util.Map)>($r59, $r61) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r64 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("ui.port", "8745")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r64 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("ui.port", "8745") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r65 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("storm-site", $r64)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r65 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("storm-site", $r64) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r66 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r65)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r66 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r69 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r69 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68[0] = $r69
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68[0] = $r69 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68[1] = r4
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : $r68[1] = r4 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r68)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r68) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProviderTest.setup : return
