org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r1 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: int getStackUpgradeAutoRetryTimeoutMins()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i0 = virtualinvoke $r1.<org.apache.ambari.server.configuration.Configuration: int getStackUpgradeAutoRetryTimeoutMins()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS> = $i0
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS> = $i0 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i1 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i1 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $l2 = (long) $i1
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $l3 = $l2 * 60000L
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $l3 = $l2 * 60000L >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.lang.Long MAX_TIMEOUT_MS> = $r2
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.lang.Long MAX_TIMEOUT_MS> = $r2 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i4 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i4 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : if $i4 >= 1
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : if $i4 >= 1 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r3 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : if $i4 >= 1 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r11 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r11 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r12 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.util.List getStackUpgradeAutoRetryCustomCommandNamesToIgnore()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r12 = virtualinvoke $r11.<org.apache.ambari.server.configuration.Configuration: java.util.List getStackUpgradeAutoRetryCustomCommandNamesToIgnore()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.util.List CUSTOM_COMMAND_NAMES_TO_IGNORE> = $r12
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.util.List CUSTOM_COMMAND_NAMES_TO_IGNORE> = $r12 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r13 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r13 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration: java.util.List getStackUpgradeAutoRetryCommandDetailsToIgnore()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration: java.util.List getStackUpgradeAutoRetryCommandDetailsToIgnore()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.util.List COMMAND_DETAILS_TO_IGNORE> = $r14
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.util.List COMMAND_DETAILS_TO_IGNORE> = $r14 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : return
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r3 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[0] = $r6
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[0] = $r6 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty STACK_UPGRADE_AUTO_RETRY_TIMEOUT_MINS>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty STACK_UPGRADE_AUTO_RETRY_TIMEOUT_MINS> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[1] = $r8
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[1] = $r8 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i5 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS>
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $i5 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: int MAX_TIMEOUT_MINS> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[2] = $r9
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r4[2] = $r9 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Will not start service {} used to auto-retry failed actions during Stack Upgrade since since the property {} is either invalid/missing or set to {}", $r4)
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Will not start service {} used to auto-retry failed actions during Stack Upgrade since since the property {} is either invalid/missing or set to {}", $r4) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : virtualinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: com.google.common.util.concurrent.Service stopAsync()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : virtualinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: com.google.common.util.concurrent.Service stopAsync()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.startUp : $r11 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: org.apache.ambari.server.configuration.Configuration m_configuration>
