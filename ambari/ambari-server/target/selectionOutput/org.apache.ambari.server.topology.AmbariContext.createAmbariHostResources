org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r5 = $r14 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r15 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r15 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r16[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to obtain host instance \'%s\' when persisting host resources", $r16)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to obtain host instance \'%s\' when persisting host resources", $r16) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r15
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r3 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r13 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r3 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r14 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r13 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r13 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r14 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= n0 = null]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r14 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= n0 = null] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : n0 = null
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : n0 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r18 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>(l0)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : n0 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r19 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r6 = $r19 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r20 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r20 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ")
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, r6)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r25 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r25 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r6)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r25
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r18 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r26 = new java.util.HashMap]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r18 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r19 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r26 = new java.util.HashMap] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r26 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r26 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r27 = $r26
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r27 = $r26 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r28 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r28 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r18)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r18) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r30 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r1)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r32 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_RACK_INFO_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r32 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_RACK_INFO_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r33 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r33 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r7 = $r38 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r39 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r39 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r41 = virtualinvoke r7.<org.apache.ambari.server.AmbariException: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r41 = virtualinvoke r7.<org.apache.ambari.server.AmbariException: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[1] = $r41
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r40[1] = $r41 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host resource for host \'%s\': %s", $r40)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host resource for host \'%s\': %s", $r40) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, r7)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, r7) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r39
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r36 = new org.apache.ambari.server.controller.internal.RequestImpl
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.HostResourceProvider getHostResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r36 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r27)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r36 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r27) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r36.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r37, null, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r37 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r27) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r36.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r37, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r36)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r36.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r37, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r36) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r43 = new java.util.HashSet]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r36) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r38 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $r43 = new java.util.HashSet] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r43 = new java.util.HashSet
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r43 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r43.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r43.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r44 = $r43
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r44 = $r43 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r45 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r8 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r8 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r46 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r52 = new org.apache.ambari.server.topology.AmbariContext$2
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r55 = $r54 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke r55.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : virtualinvoke r55.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r56 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r56 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57[0] = r1
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r58 = virtualinvoke r55.<org.apache.ambari.server.AmbariException: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r58 = virtualinvoke r55.<org.apache.ambari.server.AmbariException: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57[1] = $r58
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r57[1] = $r58 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r59 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host component resource for host \'%s\': %s", $r57)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r59 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to create host component resource for host \'%s\': %s", $r57) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r59, r55)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r59, r55) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : throw $r56
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r52 = new org.apache.ambari.server.topology.AmbariContext$2 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r52.<org.apache.ambari.server.topology.AmbariContext$2: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, r44)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r52 = new org.apache.ambari.server.topology.AmbariContext$2 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r52.<org.apache.ambari.server.topology.AmbariContext$2: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, r44) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r52)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r52.<org.apache.ambari.server.topology.AmbariContext$2: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Set)>(r0, r44) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r52) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= return]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r52) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r54 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : return
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r46 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r9 = (java.util.Map$Entry) $r46
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r9 = (java.util.Map$Entry) $r46 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r47 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r10 = (java.lang.String) $r47
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r10 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r48 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r48 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r49 = (java.util.Collection) $r48
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r49 = (java.util.Collection) $r48 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r11 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r11 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r50 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r12 = (java.lang.String) $r50
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : r12 = (java.lang.String) $r50 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z2 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER")
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z2 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r51 = new org.apache.ambari.server.controller.ServiceComponentHostRequest
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : $r51 = new org.apache.ambari.server.controller.ServiceComponentHostRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r51.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r18, r10, r12, r1, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : specialinvoke $r51.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r18, r10, r12, r1, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r44.<java.util.Set: boolean add(java.lang.Object)>($r51)
org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : interfaceinvoke r44.<java.util.Set: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariHostResources : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
