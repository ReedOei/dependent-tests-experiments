org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r1 = new org.apache.ambari.server.state.repository.VersionDefinitionXml >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r1.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2 = $r1
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: boolean m_stackDefault> = 1
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: boolean m_stackDefault> = 1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r7 = new org.apache.ambari.server.state.repository.Release
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r7 = new org.apache.ambari.server.state.repository.Release >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r7.<org.apache.ambari.server.state.repository.Release: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r7.<org.apache.ambari.server.state.repository.Release: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> = $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> = $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r8 = new org.apache.ambari.server.state.stack.RepositoryXml
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r8 = new org.apache.ambari.server.state.stack.RepositoryXml >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> = $r8
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> = $r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r9 = <org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String SCHEMA_LOCATION>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r9 = <org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String SCHEMA_LOCATION> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = $r9
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = $r9 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r10 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r10 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r10.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r11, $r12)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r10.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r11, $r12) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r3 = $r10
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r3 = $r10 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r14 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> = $r14
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r13.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> = $r14 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r16 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> = $r16
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r15.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> = $r16 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17.<org.apache.ambari.server.state.repository.Release: java.lang.String version> = $r18
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r17.<org.apache.ambari.server.state.repository.Release: java.lang.String version> = $r18 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes> = "NONE"
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r19.<org.apache.ambari.server.state.repository.Release: java.lang.String releaseNotes> = "NONE" >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20.<org.apache.ambari.server.state.repository.Release: java.lang.String display> = $r21
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r20.<org.apache.ambari.server.state.repository.Release: java.lang.String display> = $r21 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r22 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection getServices()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r22 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r4 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r4 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r23 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r37 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r37 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r37
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r37 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r38 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r37 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : if null == $r37 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r43 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r44 = $r43 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r45 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r45 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r44)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r44) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : throw $r45
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= return r2]
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r43 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= return r2] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : return r2
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r38 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r40 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r40 = virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: org.apache.ambari.server.state.stack.RepositoryXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r41 = virtualinvoke $r40.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r41 = virtualinvoke $r40.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>($r41)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>($r41) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : virtualinvoke r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String toXml()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r39.<java.util.List: boolean addAll(java.util.Collection)>($r41) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r43 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r23 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r5 = (org.apache.ambari.server.state.ServiceInfo) $r23
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r5 = (org.apache.ambari.server.state.ServiceInfo) $r23 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r24 = new org.apache.ambari.server.state.repository.ManifestService
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r24 = new org.apache.ambari.server.state.repository.ManifestService >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r24.<org.apache.ambari.server.state.repository.ManifestService: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r24.<org.apache.ambari.server.state.repository.ManifestService: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6 = $r24
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6 = $r24 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r25 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r25 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> = $r25
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> = $r25 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r26 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r26 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($r26)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> = $r27
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> = $r27 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29 = r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r29 = r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r32 = r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r32 = r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "")
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> = $r35
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : r6.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> = $r35 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r36 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $r36 = r2.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
