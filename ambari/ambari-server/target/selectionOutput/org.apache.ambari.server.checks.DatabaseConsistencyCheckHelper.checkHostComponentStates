org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking host component states count equals host component desired states count")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking host component states count equals host component desired states count") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r1 = "select count(*) from hostcomponentstate"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r1 = "select count(*) from hostcomponentstate" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r2 = "select count(*) from hostcomponentdesiredstate"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r2 = "select count(*) from hostcomponentdesiredstate" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r3 = "select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r3 = "select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r4 = "select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r4 = "select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = new java.util.HashMap
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r5 = $r12
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r5 = $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r13 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r13 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r10 = $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r10 = $r45 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r11 = $r46 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r47 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r47 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r11)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw r10
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r49 = $r48 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r50 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r50 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r49)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r49) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw r10
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= throw r10]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r48 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= throw r10] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw r10
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r46 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r37 = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r37 = $r36 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during check for same count of host component states and host component desired states: ", r37)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r38 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during check for same count of host component states and host component desired states: ", r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during check for same count of host component states and host component desired states: ", r37) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r39 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r40 = $r39 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r41 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r41 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r40)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r40) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r42 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r43 = $r42 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r44 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r44 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r43)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r43) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r42 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r39 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r7 = interfaceinvoke $r20.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r3)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String)>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String)>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String)>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String)>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r8 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r8 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r8 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r8 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r26 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r6 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r31 = $r30 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r32 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r32 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r31)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r31) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r33 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = $r33 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r35 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r35 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r34)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r35.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", r34) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r7.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r33 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r6.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r30 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r7 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r26 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r26 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r26 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r9 = (java.util.Map$Entry) $r26
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r9 = (java.util.Map$Entry) $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r9 = (java.util.Map$Entry) $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r9 = (java.util.Map$Entry) $r26 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r28, $r29)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r28, $r29) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r28, $r29) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r28, $r29) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean errorsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r22 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r22 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r22 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r22 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 = interfaceinvoke r6.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r3)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r6 = interfaceinvoke r7.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r6.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r6.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r14 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r14 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $r14 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r19 = interfaceinvoke $r18.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r36 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r45 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke $r15.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = (org.apache.ambari.server.orm.DBAccessor) $r16
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = (org.apache.ambari.server.orm.DBAccessor) $r16 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r17
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r17 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
