org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r2 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r1 == null
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r1 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r1 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : return r2
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if $z0 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : return r2
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r4 = (org.apache.ambari.server.controller.spi.Resource) $r5
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r4 = (org.apache.ambari.server.controller.spi.Resource) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r4 == null
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $r6 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : return r2
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : $r6 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r2 = virtualinvoke $r6.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : r2 = virtualinvoke $r6.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.getResourceTypeFromResources : return r2
