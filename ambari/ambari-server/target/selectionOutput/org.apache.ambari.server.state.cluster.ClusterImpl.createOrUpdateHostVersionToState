org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r12 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : return
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r7 = (java.lang.String) $r13
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r7 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r8 = r5
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r8 = r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r9 = (org.apache.ambari.server.state.Host) $r14
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r9 = (org.apache.ambari.server.state.Host) $r14 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r15 = interfaceinvoke r9.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r15 = interfaceinvoke r9.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $r15 == $r16
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $r15 == $r16 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState OUT_OF_SYNC>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $r15 == $r16 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z1 = virtualinvoke r4.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r7)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z1 = virtualinvoke r4.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r17 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r29 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r29 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r30 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r29
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r30 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r29 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : virtualinvoke r30.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>(r8)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : virtualinvoke r30.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r31 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r31 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r30)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r33 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r32
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r33 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r32 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r17 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r10 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r10 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r18 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r18 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r19 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r19 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : specialinvoke $r18.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r10, $r19, r8)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : specialinvoke $r18.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>(org.apache.ambari.server.orm.entities.HostEntity,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r10, $r19, r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r11 = $r18
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r11 = $r18 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r20 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r20 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21 = newarray (java.lang.Object)[4]
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r22 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r22 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[0] = $r22
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r23 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r23 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[1] = $r23
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[1] = $r23 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r24 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r24 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r25 = virtualinvoke $r24.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r25 = virtualinvoke $r24.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[2] = $r25
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[2] = $r25 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r26 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r26 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r27 = virtualinvoke $r26.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r27 = virtualinvoke $r26.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[3] = $r27
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r21[3] = $r27 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Creating host version for {}, state={}, repo={} (repo_id={})", $r21)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Creating host version for {}, state={}, repo={} (repo_id={})", $r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r28 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $r28 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : virtualinvoke $r28.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r11)
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : virtualinvoke $r28.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : goto [?= (branch)]
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState OUT_OF_SYNC> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createOrUpdateHostVersionToState : $z1 = virtualinvoke r4.<com.google.common.collect.Sets$SetView: boolean contains(java.lang.Object)>(r7)
