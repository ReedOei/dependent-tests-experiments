org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r7 = new org.apache.ambari.server.agent.ExecutionCommand >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r7.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r8 = $r7
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r8 = $r7 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory ecwFactory>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory ecwFactory> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r9 = interfaceinvoke $r12.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper createFromCommand(org.apache.ambari.server.agent.ExecutionCommand)>(r8)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r9 = interfaceinvoke $r12.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper createFromCommand(org.apache.ambari.server.agent.ExecutionCommand)>(r8) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r6.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>(r9)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r6.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>(r9) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setHostname(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setHostname(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>(r1)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l0 = r0.<org.apache.ambari.server.actionmanager.Stage: long requestId>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l0 = r0.<org.apache.ambari.server.actionmanager.Stage: long requestId> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l1 = r0.<org.apache.ambari.server.actionmanager.Stage: long stageId>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l1 = r0.<org.apache.ambari.server.actionmanager.Stage: long stageId> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l0, $l1)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l0, $l1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r13 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String name()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r13 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRole(java.lang.String)>($r13)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRole(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleCommand(org.apache.ambari.server.RoleCommand)>(r4)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleCommand(org.apache.ambari.server.RoleCommand)>(r4) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setServiceName(java.lang.String)>("")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r8.<org.apache.ambari.server.agent.ExecutionCommand: void setServiceName(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r14 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r14 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r10 = (java.util.Map) $r15
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r10 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r10 != null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r10 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r16 = new java.util.LinkedHashMap
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r10 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r19 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r19 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r20 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r20 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r20 == null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r20 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r21 = new java.lang.RuntimeException
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r20 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r31 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r31 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r6)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r33 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r33 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r34 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r34 = interfaceinvoke $r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r11 = (java.util.List) $r34
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r11 = (java.util.List) $r34 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r11 != null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r11 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r35 = new java.util.ArrayList
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r11 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r38 = new java.lang.RuntimeException
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : return r9
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r38 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r39 = new java.lang.StringBuilder
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the execution command second time for same stage: stage=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the execution command second time for same stage: stage=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r41 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r41 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", event=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", event=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r49)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : throw $r38
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r35 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r35.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r35.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r11 = $r35
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r11 = $r35 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r36 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r36 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r11)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r11) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r11.<java.util.List: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the host role command second time for same stage: stage=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the host role command second time for same stage: stage=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r24 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r24 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r30)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : throw $r21
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r16 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r16.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r16.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r10 = $r16
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r10 = $r16 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r17 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r17 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r10)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r10) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r19 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
