org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r8 = r0.<org.apache.ambari.server.api.services.BaseRequest: javax.ws.rs.core.UriInfo m_uriInfo> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>()
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r9 = interfaceinvoke $r8.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r10 = interfaceinvoke $r9.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("sortBy")
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r10 = interfaceinvoke $r9.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("sortBy") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r1 = (java.lang.String) $r10
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r1 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if r1 == null
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if r1 == null >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : return null
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $z0 != 0
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : return null
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r11 = new java.util.ArrayList
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r3 = $r11
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r3 = $r11 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $i3 = lengthof r2
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $i3 = lengthof r2 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $i3 <= 0
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r4 = r2
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r15 = new org.apache.ambari.server.controller.internal.SortRequestImpl
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r15 = new org.apache.ambari.server.controller.internal.SortRequestImpl >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r15.<org.apache.ambari.server.controller.internal.SortRequestImpl: void <init>(java.util.List)>(r3)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r15.<org.apache.ambari.server.controller.internal.SortRequestImpl: void <init>(java.util.List)>(r3) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : return $r15
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r4 = r2 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i0 = lengthof r4
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i1 = 0
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i1 = 0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i1 >= i0
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r5 = r4[i1]
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r15 = new org.apache.ambari.server.controller.internal.SortRequestImpl
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r6 = <org.apache.ambari.server.controller.spi.SortRequest$Order: org.apache.ambari.server.controller.spi.SortRequest$Order ASC>
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r6 = <org.apache.ambari.server.controller.spi.SortRequest$Order: org.apache.ambari.server.controller.spi.SortRequest$Order ASC> >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r7 = r5
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r7 = r5 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i2 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(".")
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i2 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i2 == -1
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i2 == -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $i4 = i2 + 1
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i2 == -1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r14 = new org.apache.ambari.server.controller.spi.SortRequestProperty
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r14 = new org.apache.ambari.server.controller.spi.SortRequestProperty >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r14.<org.apache.ambari.server.controller.spi.SortRequestProperty: void <init>(java.lang.String,org.apache.ambari.server.controller.spi.SortRequest$Order)>(r7, r6)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : specialinvoke $r14.<org.apache.ambari.server.controller.spi.SortRequestProperty: void <init>(java.lang.String,org.apache.ambari.server.controller.spi.SortRequest$Order)>(r7, r6) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i1 = i1 + 1
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : goto [?= (branch)]
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : if i1 >= i0
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $i4 = i2 + 1 >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r12 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i4)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r12 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i4) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r6 = staticinvoke <org.apache.ambari.server.controller.spi.SortRequest$Order: org.apache.ambari.server.controller.spi.SortRequest$Order valueOf(java.lang.String)>($r13)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r6 = staticinvoke <org.apache.ambari.server.controller.spi.SortRequest$Order: org.apache.ambari.server.controller.spi.SortRequest$Order valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2)
org.apache.ambari.server.api.services.BaseRequest.getSortRequest : r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2) >>>>>>>> org.apache.ambari.server.api.services.BaseRequest.getSortRequest : $r14 = new org.apache.ambari.server.controller.spi.SortRequestProperty
