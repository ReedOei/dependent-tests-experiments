org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3 = newarray (java.util.Map)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[0] = "services"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[0] = "services" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[1] = "HDFS"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r4[1] = "HDFS" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r5)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("contains", $r5) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[0] = $r6
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[0] = $r6 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[0] = "configurations/service-env/property1"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[0] = "configurations/service-env/property1" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[1] = "true"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r7[1] = "true" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r9 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r8)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r9 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r8) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[1] = $r9
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r3[1] = $r9 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("and", $r10)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r1 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("and", $r10) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11 = newarray (java.util.Map)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11 = newarray (java.util.Map)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12 = newarray (java.lang.String)[2]
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[0] = "configurations/cluster-env/property1"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[0] = "configurations/cluster-env/property1" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[1] = "false"
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r12[1] = "false" >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r13)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("equals", $r13) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[0] = $r14
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[0] = $r14 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[1] = r1
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r11[1] = r1 >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("or", $r15)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : r2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("or", $r15) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("not", r2)
org.apache.ambari.server.collections.PredicateUtilsTest.createMap : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("not", r2) >>>>>>>> org.apache.ambari.server.collections.PredicateUtilsTest.createMap : return $r16
