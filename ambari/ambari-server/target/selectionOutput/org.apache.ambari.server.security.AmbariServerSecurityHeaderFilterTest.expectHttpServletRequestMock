org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("deny.header.overrides.flag") >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : $r3 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : interfaceinvoke $r3.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.AmbariServerSecurityHeaderFilterTest.expectHttpServletRequestMock : return
