org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r3 = $r2
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r3 = $r2 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r8 = new java.util.ArrayList
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r4 = $r8
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r4 = $r8 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r9 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r9 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: void setHosts(java.util.List)>(r4)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: void setHosts(java.util.List)>(r4) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : return
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r6 = (java.lang.String) $r10
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r6 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r6)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r6 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r20 = $r19 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r21 = <org.apache.ambari.server.api.rest.BootStrapResource: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r21 = <org.apache.ambari.server.api.rest.BootStrapResource: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be determined.")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be determined.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r21.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r26)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r21.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : r7 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>($r11)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r11 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $z1 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r12 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = <org.apache.ambari.server.api.rest.BootStrapResource: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = <org.apache.ambari.server.api.rest.BootStrapResource: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r13 = <org.apache.ambari.server.api.rest.BootStrapResource: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.")
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been targeted to be bootstrapped.") >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r12 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r12 = virtualinvoke r7.<java.net.InetAddress: java.lang.String getHostAddress()>() >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)]
org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.rest.BootStrapResource.normalizeHosts : $r19 := @caughtexception
