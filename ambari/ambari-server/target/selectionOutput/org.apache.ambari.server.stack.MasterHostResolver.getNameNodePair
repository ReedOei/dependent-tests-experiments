org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r2 = $r1
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r2 = $r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r3 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r3 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r16 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r16 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r4 = virtualinvoke $r16.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", "dfs.internal.nameservices")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r4 = virtualinvoke $r16.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", "dfs.internal.nameservices") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r4 == null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r4 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z1 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r4 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z1 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z1 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r17 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r17 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r18 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.ha.namenodes.")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.ha.namenodes.") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r5 = virtualinvoke $r17.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", $r21)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r5 = virtualinvoke $r17.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", $r21) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r5 == null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r5 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z2 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r5 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z2 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r6 == null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r6 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $i2 = lengthof r6
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r6 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $i2 = lengthof r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $i2 == 2
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $i2 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $i2 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r22 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r22 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r7 = virtualinvoke $r22.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", "dfs.http.policy")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r7 = virtualinvoke $r22.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", "dfs.http.policy") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r7 == null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r7 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z3 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HTTPS_ONLY")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r7 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z4 = 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z4 = 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : z0 = $z4
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : z0 = $z4 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r25 = "https-address"
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r25 = "http-address"
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r25 = "http-address" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".{0}.{1}")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".{0}.{1}") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r8 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r8 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r9 = r6
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r9 = r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i0 = lengthof r9
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i0 = lengthof r9 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i1 = 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if i1 >= i0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r10 = r9[i1]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r52 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r52 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z7 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r52)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z7 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z7 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r53 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r53 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z8 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r53)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z8 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z8 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z8 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r54 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z8 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r54 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r55 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r54)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r55 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r56 = (java.lang.String) $r55
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r56 = (java.lang.String) $r55 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r57 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r57 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r58 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r57)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r58 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r59 = (java.lang.String) $r58
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r59 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z9 = virtualinvoke $r56.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r59)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z9 = virtualinvoke $r56.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r59) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z9 != 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z9 != 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return r2
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z9 != 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : return null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r10 = r9[i1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28[0] = r4
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28[0] = r4 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28[1] = r10
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r28[1] = r10 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r11 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r8, $r28)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r11 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r8, $r28) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r29 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r29 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r12 = virtualinvoke $r29.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", r11)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r12 = virtualinvoke $r29.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", r11) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r13 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: org.apache.ambari.server.utils.HostAndPort getHostAndPortFromProperty(java.lang.String)>(r12)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r12 = virtualinvoke $r29.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r3, "hdfs-site", r11) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r49 = $r48 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r50 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r50 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r51 = virtualinvoke r49.<java.net.MalformedURLException: java.lang.String getMessage()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r51 = virtualinvoke r49.<java.net.MalformedURLException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r51)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i1 = i1 + 1
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if i1 >= i0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r13 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: org.apache.ambari.server.utils.HostAndPort getHostAndPortFromProperty(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r13 != null
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r13 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: org.apache.ambari.server.utils.HostAndPort getHostAndPortFromProperty(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r13 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r30 = new java.net.MalformedURLException
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r13 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r35 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if r13 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r35 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $i3 = r13.<org.apache.ambari.server.utils.HostAndPort: int port>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r35 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $i3 = r13.<org.apache.ambari.server.utils.HostAndPort: int port> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r14 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String queryJmxBeanValue(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>($r35, $i3, "Hadoop:service=NameNode,name=NameNodeStatus", "State", 1, z0)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $i3 = r13.<org.apache.ambari.server.utils.HostAndPort: int port> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r14 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String queryJmxBeanValue(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>($r35, $i3, "Hadoop:service=NameNode,name=NameNodeStatus", "State", 1, z0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if null == r14
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r14 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String queryJmxBeanValue(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean)>($r35, $i3, "Hadoop:service=NameNode,name=NameNodeStatus", "State", 1, z0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if null == r14 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r36 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if null == r14 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r44 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if null == r14 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r44 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r44 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r46 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r46 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[0] = $r46
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r46 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[0] = $r46 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[1] = r11
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[0] = $r46 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[1] = r11 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not retrieve state for NameNode %s from property %s by querying JMX.", $r45)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r45[1] = r11 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not retrieve state for NameNode %s from property %s by querying JMX.", $r45) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r47)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not retrieve state for NameNode %s from property %s by querying JMX.", $r45) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= i1 = i1 + 1]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke $r44.<org.slf4j.Logger: void error(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : i1 = i1 + 1
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r36 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r37 = virtualinvoke $r36.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r36 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r37 = virtualinvoke $r36.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z5 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r37 = virtualinvoke $r36.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z5 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z5 != 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z5 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r38 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r40 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z5 != 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r40 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r15 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status valueOf(java.lang.String)>($r40)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r40 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r15 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status valueOf(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r41 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : r15 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status valueOf(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r41 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r41 = r13.<org.apache.ambari.server.utils.HostAndPort: java.lang.String host> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r42)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r42 = virtualinvoke $r41.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r42) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r42) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= i1 = i1 + 1]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r38 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r39 = virtualinvoke $r38.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r38 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r39 = virtualinvoke $r38.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z6 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r39)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r39 = virtualinvoke $r38.<org.apache.ambari.server.stack.MasterHostResolver$Status: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z6 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z6 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z6 = virtualinvoke r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r40 = virtualinvoke r14.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r44 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r30 = new java.net.MalformedURLException >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r31 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r30 = new java.net.MalformedURLException >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse host and port from ")
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse host and port from ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse host and port from ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r30.<java.net.MalformedURLException: void <init>(java.lang.String)>($r34)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r30.<java.net.MalformedURLException: void <init>(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : throw $r30
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : specialinvoke $r30.<java.net.MalformedURLException: void <init>(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : throw $r30 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r48 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r25 = "https-address" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z3 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z3 == 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z4 = 1
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z4 = 0
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : $z4 = 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= z0 = $z4]
org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : goto [?= z0 = $z4] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getNameNodePair : z0 = $z4
