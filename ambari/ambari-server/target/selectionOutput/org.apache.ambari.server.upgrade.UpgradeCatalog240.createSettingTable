org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : r2 = $r1
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : r2 = $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog240: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Creating setting table")
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Creating setting table") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("name", class "java/lang/String", $r6, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("name", class "java/lang/String", $r6, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("setting_type", class "java/lang/String", $r8, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("setting_type", class "java/lang/String", $r8, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3000) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("content", class "java/lang/String", $r10, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("content", class "java/lang/String", $r10, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r11 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("updated_by", class "java/lang/String", $r12, "_db", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r11.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("updated_by", class "java/lang/String", $r12, "_db", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r13 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r13 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r13.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("update_timestamp", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : specialinvoke $r13.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("update_timestamp", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r15 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r15 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r15[0] = "id"
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r15[0] = "id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("setting", r2, $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : interfaceinvoke $r14.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("setting", r2, $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void addSequence(java.lang.String,java.lang.Long,boolean)>("setting_id_seq", $r16, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void addSequence(java.lang.String,java.lang.Long,boolean)>("setting_id_seq", $r16, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.createSettingTable : return
