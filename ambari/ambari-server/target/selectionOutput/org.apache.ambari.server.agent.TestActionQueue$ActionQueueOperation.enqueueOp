org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if $z0 == 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i0 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : return
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i0 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i1 = lengthof r1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i1 = lengthof r1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i2 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i2 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if i2 >= i1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if i2 >= i1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : r2 = r1[i2]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if i2 >= i1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : staticinvoke <java.lang.Thread: void sleep(long)>(1L)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : staticinvoke <java.lang.Thread: void sleep(long)>(1L) >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : r2 = r1[i2] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r4 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r4 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r3 = new org.apache.ambari.server.agent.StatusCommand
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r3 = new org.apache.ambari.server.agent.StatusCommand >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : specialinvoke $r3.<org.apache.ambari.server.agent.StatusCommand: void <init>()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : specialinvoke $r3.<org.apache.ambari.server.agent.StatusCommand: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : virtualinvoke $r4.<org.apache.ambari.server.agent.ActionQueue: void enqueue(java.lang.String,org.apache.ambari.server.agent.AgentCommand)>(r2, $r3)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : virtualinvoke $r4.<org.apache.ambari.server.agent.ActionQueue: void enqueue(java.lang.String,org.apache.ambari.server.agent.AgentCommand)>(r2, $r3) >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r5 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r5 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $l4 = $r5[i0]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $l4 = $r5[i0] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $l5 = $l4 + 1L
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $l5 = $l4 + 1L >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r5[i0] = $l5
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : $r5[i0] = $l5 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i0 = i0 + 1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i2 = i2 + 1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : goto [?= (branch)]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.enqueueOp : if i2 >= i1
