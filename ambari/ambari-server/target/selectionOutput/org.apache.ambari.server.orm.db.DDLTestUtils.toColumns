org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r2 = $r1
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r2 = $r1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r5 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(124)
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r5 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(124) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r6 = virtualinvoke $r5.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0)
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r6 = virtualinvoke $r5.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r3 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r3 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : return r2
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r4 = (java.lang.String) $r7
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : r4 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r8 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r8 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r9 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r8)
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $r9 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: java.lang.String stripPrefixQuotationAndBrackets(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTestUtils.toColumns : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
