org.apache.ambari.server.state.host.HostImpl.getOsFamily : r1 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("os_release_version")
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("os_release_version") >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r4 = (java.lang.String) $r3
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : r2 = $r5[0]
org.apache.ambari.server.state.host.HostImpl.getOsFamily : r2 = $r5[0] >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.host.HostImpl.getOsFamily : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("os_family")
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("os_family") >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r8 = (java.lang.String) $r7
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.host.HostImpl.getOsFamily : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getOsFamily : return $r11
