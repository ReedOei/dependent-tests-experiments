org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r1 = "nnha" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r14 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r14 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r14.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, r1, "HDP-2.0.6", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r14.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, r1, "HDP-2.0.6", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r2 = $r14
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r2 = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r15 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r15 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>(r2)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r16 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r16 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r3 = interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r3 = interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r17 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r17 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r17)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r4 = "HDFS"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r4 = "HDFS" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r5 = "NAMENODE"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r5 = "NAMENODE" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r6 = "DATANODE"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r6 = "DATANODE" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r7 = "HDFS_CLIENT"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r7 = "HDFS_CLIENT" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, $r18)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, $r18) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, $r19)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, $r19) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r20)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r8 = "h1"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r8 = "h1" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r21 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r21 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r21.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r22 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r22 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r22.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r22.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r9 = $r22
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r9 = $r22 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r25 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r25 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r26.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r9)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r26.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r10 = "h2"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r10 = "h2" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r27 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r27 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r10)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r28 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r29 = $r28
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r29 = $r28 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r32 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r32 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r33 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r33.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r29)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r33.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r29) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r34 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r34 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r34.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r34.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r8, r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r35 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r35 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r10, r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r10, r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r8, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r8, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r10, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r5, r10, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r8, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r8, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r10, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r6, r10, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r8, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r8, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r10, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, r10, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r36 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r36 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r36.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r36.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r11 = $r36
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r11 = $r36 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.internal.nameservices", "ns")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.internal.nameservices", "ns") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address", "h1:50070")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address", "h1:50070") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address.ns.nn1", "h1:50071")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address.ns.nn1", "h1:50071") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address.ns.nn2", "h2:50072")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.http-address.ns.nn2", "h2:50072") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address", "h1:50470")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address", "h1:50470") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address.ns.nn1", "h1:50473")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address.ns.nn1", "h1:50473") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address.ns.nn2", "h2:50474")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.namenode.https-address.ns.nn2", "h2:50474") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.ha.namenodes.ns", "nn1,nn2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.ha.namenodes.ns", "nn1,nn2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r45 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r45 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r45.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "hdfs-site", "version1", r11, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r45.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "hdfs-site", "version1", r11, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r12 = $r45
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r12 = $r45 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r46 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r46 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r46.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r47, r1, null, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : specialinvoke $r46.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r47, r1, null, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r13 = $r46
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : r13 = $r46 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r48 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r48 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : virtualinvoke r13.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r48)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : virtualinvoke r13.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r49 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r49 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r49.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r50, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : interfaceinvoke $r49.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r50, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigsNameNodeHa : return
