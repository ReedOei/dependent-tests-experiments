org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r6 = null
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r0 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("equals")
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("equals") >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r1 = $r6
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r1 = $r6 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r1 != null
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r7 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if r1 != null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z0 = r1 instanceof java.util.Collection
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z0 = r1 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z0 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r2 = (java.util.Collection) r1
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r23 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r23 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r25 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r25 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24[0] = $r26
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r24[0] = $r26 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected data type for \'equals\' operation - %s", $r24)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected data type for \'equals\' operation - %s", $r24) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : throw $r23
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r2 = (java.util.Collection) r1 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i0 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $i0 != 2
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $i0 != 2 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r19 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r19 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i1 = interfaceinvoke r2.<java.util.Collection: int size()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $i1 = interfaceinvoke r2.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r20[0] = $r21
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r20[0] = $r21 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Missing data for \'equals\' operation - 2 predicates are needed, %d found", $r20)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Missing data for \'equals\' operation - 2 predicates are needed, %d found", $r20) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : throw $r19
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z1 = r4 instanceof java.lang.String
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z1 = r4 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z1 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z2 = r5 instanceof java.lang.String
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r12 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13 = newarray (java.lang.Object)[2]
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13[0] = $r15
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13[0] = $r15 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r16 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r16 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13[1] = $r17
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r13[1] = $r17 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected data types: %s and %s", $r13)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected data types: %s and %s", $r13) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : throw $r12
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $z2 = r5 instanceof java.lang.String >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z2 == 0
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r8 = new org.apache.ambari.server.collections.functors.EqualsPredicate
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r8 = new org.apache.ambari.server.collections.functors.EqualsPredicate >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r9 = new org.apache.ambari.server.collections.functors.ContextTransformer
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r9 = new org.apache.ambari.server.collections.functors.ContextTransformer >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r10 = (java.lang.String) r4
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r10 = (java.lang.String) r4 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r9.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r10)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r9.<org.apache.ambari.server.collections.functors.ContextTransformer: void <init>(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r11 = (java.lang.String) r5
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r11 = (java.lang.String) r5 >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r8.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r9, $r11)
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r8.<org.apache.ambari.server.collections.functors.EqualsPredicate: void <init>(org.apache.ambari.server.collections.functors.ContextTransformer,java.lang.String)>($r9, $r11) >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : return $r8
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r7 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing data for \'equals\' operation")
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing data for \'equals\' operation") >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : throw $r7
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : $r6 = null >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : goto [?= r1 = $r6]
org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : goto [?= r1 = $r6] >>>>>>>> org.apache.ambari.server.collections.functors.EqualsPredicate.fromMap : r1 = $r6
