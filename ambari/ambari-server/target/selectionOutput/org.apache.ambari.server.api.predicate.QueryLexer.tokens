org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r3 = new org.apache.ambari.server.api.predicate.QueryLexer$ScanContext >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r3.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void <init>(org.apache.ambari.server.api.predicate.QueryLexer,org.apache.ambari.server.api.predicate.QueryLexer$1)>(r0, null)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r3.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void <init>(org.apache.ambari.server.api.predicate.QueryLexer,org.apache.ambari.server.api.predicate.QueryLexer$1)>(r0, null) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : r4 = $r3
org.apache.ambari.server.api.predicate.QueryLexer.tokens : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r8 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Set SET_IGNORE>
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r8 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Set SET_IGNORE> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void addPropertiesToIgnore(java.util.Collection)>($r8)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void addPropertiesToIgnore(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void addPropertiesToIgnore(java.util.Collection)>(r2)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void addPropertiesToIgnore(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r9 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer: java.util.List parseStringTokens(java.lang.String)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r9 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryLexer: java.util.List parseStringTokens(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if $z1 == 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void validateEndState()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void validateEndState()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r24 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r25 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r25 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i3 = interfaceinvoke $r25.<java.util.List: int size()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i3 = interfaceinvoke $r25.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r26 = newarray (org.apache.ambari.server.api.predicate.Token)[$i3]
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r26 = newarray (org.apache.ambari.server.api.predicate.Token)[$i3] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r27 = interfaceinvoke $r24.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r26)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r27 = interfaceinvoke $r24.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r26) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r28 = (org.apache.ambari.server.api.predicate.Token[]) $r27
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r28 = (org.apache.ambari.server.api.predicate.Token[]) $r27 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : return $r28
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : r6 = (java.lang.String) $r10
org.apache.ambari.server.api.predicate.QueryLexer.tokens : r6 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r11 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Map TOKEN_HANDLERS>
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r11 = <org.apache.ambari.server.api.predicate.QueryLexer: java.util.Map TOKEN_HANDLERS> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r12 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE getLastTokenType()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r12 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE getLastTokenType()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : r7 = (java.util.List) $r13
org.apache.ambari.server.api.predicate.QueryLexer.tokens : r7 = (java.util.List) $r13 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : z0 = 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : z0 = 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : i0 = 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : i0 = 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i1 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r16 = new org.apache.ambari.server.api.predicate.InvalidQueryException
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.predicate.QueryLexer.tokens : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r16 = new org.apache.ambari.server.api.predicate.InvalidQueryException >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Query Token: token=\'")
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Query Token: token=\'") >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', previous token type=")
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', previous token type=") >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r21 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE getLastTokenType()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r21 = virtualinvoke r4.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: org.apache.ambari.server.api.predicate.Token$TYPE getLastTokenType()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r16.<org.apache.ambari.server.api.predicate.InvalidQueryException: void <init>(java.lang.String)>($r23)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : specialinvoke $r16.<org.apache.ambari.server.api.predicate.InvalidQueryException: void <init>(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : throw $r16
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i1 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if i0 >= $i1
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i2 = i0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $i2 = i0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : i0 = i0 + 1
org.apache.ambari.server.api.predicate.QueryLexer.tokens : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r14 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>($i2)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r14 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r15 = (org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler) $r14
org.apache.ambari.server.api.predicate.QueryLexer.tokens : $r15 = (org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler) $r14 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : z0 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: boolean handleToken(java.lang.String,org.apache.ambari.server.api.predicate.QueryLexer$ScanContext)>(r6, r4)
org.apache.ambari.server.api.predicate.QueryLexer.tokens : z0 = virtualinvoke $r15.<org.apache.ambari.server.api.predicate.QueryLexer$TokenHandler: boolean handleToken(java.lang.String,org.apache.ambari.server.api.predicate.QueryLexer$ScanContext)>(r6, r4) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : goto [?= (branch)]
org.apache.ambari.server.api.predicate.QueryLexer.tokens : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.tokens : if z0 != 0
