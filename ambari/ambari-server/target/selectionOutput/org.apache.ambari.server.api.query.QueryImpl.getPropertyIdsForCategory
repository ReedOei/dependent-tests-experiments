org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r4 = $r3
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : return r4
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r6 = (java.lang.String) $r7
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : r6 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 == null
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r2)
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 != null
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r10 = r6
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $i1 = $i0 + 1
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r10 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r10 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10)
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $r10 = r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : goto [?= interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10)]
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : goto [?= interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10)] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10)
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if r2 != null
org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getPropertyIdsForCategory : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
