org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r6 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r6 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = (org.apache.ambari.server.configuration.Configuration) $r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r1 = (org.apache.ambari.server.configuration.Configuration) $r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r7 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType POSTGRES> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r7 == $r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r7 == $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r7 == $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Ensuring that the schema set for Postgres is correct")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Ensuring that the schema set for Postgres is correct") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r10 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r10 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r10 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r17 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r3 = interfaceinvoke $r17.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r3 = interfaceinvoke $r17.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r3 = interfaceinvoke $r17.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r3 = interfaceinvoke $r17.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getSchemas()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = $r31 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r4 = $r31 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw r4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r5 = $r32 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r33 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r5)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r5) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw r4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw r4]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r32 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= throw r4] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : throw r4
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r26 = $r25 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r26 = $r25 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking db schema name.: ", r26)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking db schema name.: ", r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during checking db schema name.: ", r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r29 = $r28 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r30 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r29)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r29) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r28 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r23 = $r22 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r24 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r23)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r21 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("The schema %s defined for Ambari from ambari.properties has not been found in the database. This means that the Ambari tables are stored under the public schema which can lead to problems.", $r21)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("The schema %s defined for Ambari from ambari.properties has not been found in the database. This means that the Ambari tables are stored under the public schema which can lead to problems.", $r21) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("The schema %s defined for Ambari from ambari.properties has not been found in the database. This means that the Ambari tables are stored under the public schema which can lead to problems.", $r21) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("The schema %s defined for Ambari from ambari.properties has not been found in the database. This means that the Ambari tables are stored under the public schema which can lead to problems.", $r21) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean warningsFound> = 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean warningsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean warningsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: boolean warningsFound> = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if r2 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_SCHEM")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_SCHEM") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r19 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r18, $r19)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $z1 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : z0 = 1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if z0 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r11 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r11 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r11 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r12 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : if $r11 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r16
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = $r16 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : r2 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r12 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r14 = (org.apache.ambari.server.orm.DBAccessor) $r13
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r14 = (org.apache.ambari.server.orm.DBAccessor) $r13 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r14
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkSchemaName : $r15 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor>
