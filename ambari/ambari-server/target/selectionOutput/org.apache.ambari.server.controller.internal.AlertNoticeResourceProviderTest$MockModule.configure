org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r4
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r5
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r8 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDispatchDAO")
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDispatchDAO") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO access$100(org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest)>($r11)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest: org.apache.ambari.server.orm.dao.AlertDispatchDAO access$100(org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r13 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/ActionMetadata")
org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/ActionMetadata") >>>>>>>> org.apache.ambari.server.controller.internal.AlertNoticeResourceProviderTest$MockModule.configure : return
