org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/api/resources/ResourceInstance") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r1 = (org.apache.ambari.server.api.resources.ResourceInstance) $r17
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r1 = (org.apache.ambari.server.api.resources.ResourceInstance) $r17 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/api/resources/ResourceDefinition")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/api/resources/ResourceDefinition") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r2 = (org.apache.ambari.server.api.resources.ResourceDefinition) $r18
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r2 = (org.apache.ambari.server.api.resources.ResourceDefinition) $r18 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r3 = (org.apache.ambari.server.controller.spi.ClusterController) $r19
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r3 = (org.apache.ambari.server.controller.spi.ClusterController) $r19 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Schema")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Schema") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r4 = (org.apache.ambari.server.controller.spi.Schema) $r20
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r4 = (org.apache.ambari.server.controller.spi.Schema) $r20 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r5 = (org.apache.ambari.server.controller.spi.Request) $r21
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r5 = (org.apache.ambari.server.controller.spi.Request) $r21 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r22 = new org.apache.ambari.server.api.services.RequestBody
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r22 = new org.apache.ambari.server.api.services.RequestBody >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r22.<org.apache.ambari.server.api.services.RequestBody: void <init>()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r22.<org.apache.ambari.server.api.services.RequestBody: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r6 = $r22
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r6 = $r22 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r7 = "clusterId"
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r7 = "clusterId" >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r8 = "serviceId"
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r8 = "serviceId" >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r23 = new java.util.HashMap
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r23 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r23.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r23.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r9 = $r23
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r9 = $r23 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, "clusterId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, "clusterId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r26 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r26 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, "serviceId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, "serviceId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r28 = new java.util.HashMap
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r10 = $r28
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r10 = $r28 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("componentId", "id1")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("componentId", "id1") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r30 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("foo", "bar")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r30 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("foo", "bar") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, "value")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, "value") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r32 = new java.util.HashMap
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r32 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r32.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r32.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r11 = $r32
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r11 = $r32 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("componentId", "id2")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("componentId", "id2") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r34 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("foo", "bar2")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r34 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("foo", "bar2") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, "value2")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, "value2") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r36 = new org.apache.ambari.server.api.services.NamedPropertySet
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r36 = new org.apache.ambari.server.api.services.NamedPropertySet >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r36.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", r10)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r36.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", r10) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r12 = $r36
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r12 = $r36 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r37 = new org.apache.ambari.server.api.services.NamedPropertySet
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r37 = new org.apache.ambari.server.api.services.NamedPropertySet >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r37.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", r11)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r37.<org.apache.ambari.server.api.services.NamedPropertySet: void <init>(java.lang.String,java.util.Map)>("", r11) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r13 = $r37
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r13 = $r37 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>(r12)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>(r12) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>(r13)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke r6.<org.apache.ambari.server.api.services.RequestBody: void addPropertySet(org.apache.ambari.server.api.services.NamedPropertySet)>(r13) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r38 = new java.util.HashSet
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r38 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r38.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r38.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r14 = $r38
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r14 = $r38 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r39 = new java.util.HashMap
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r39 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r39.<java.util.HashMap: void <init>(java.util.Map)>(r10)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r39.<java.util.HashMap: void <init>(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r15 = $r39
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r15 = $r39 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, "clusterId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, "clusterId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, "serviceId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, "serviceId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r15)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r15) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r42 = new java.util.HashMap
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r42.<java.util.HashMap: void <init>(java.util.Map)>(r11)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r42.<java.util.HashMap: void <init>(java.util.Map)>(r11) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r16 = $r42
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : r16 = $r42 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, "clusterId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, "clusterId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, "serviceId")
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, "serviceId") >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r16)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r45 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r45 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r48 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r48 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r51 = interfaceinvoke r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r51 = interfaceinvoke r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r53 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r53 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r53)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r55 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r55 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r56 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>($r55)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r56 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>($r55) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r57 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r59 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r59 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r60 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r59)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r60 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r59) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r62 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r62 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r62.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r64 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r64 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r65 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r64)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r65 = interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r64) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r67 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r67 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r69 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component>
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r69 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Component> >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r70 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request)>($r69, r5)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r70 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request)>($r69, r5) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r72 = new org.apache.ambari.server.controller.internal.RequestStatusImpl
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r72 = new org.apache.ambari.server.controller.internal.RequestStatusImpl >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r72.<org.apache.ambari.server.controller.internal.RequestStatusImpl: void <init>(org.apache.ambari.server.controller.spi.Resource)>(null)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r72.<org.apache.ambari.server.controller.internal.RequestStatusImpl: void <init>(org.apache.ambari.server.controller.spi.Resource)>(null) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74 = newarray (java.lang.Object)[5]
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[0] = r1
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[0] = r1 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[1] = r2
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[1] = r2 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[2] = r3
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[2] = r3 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[3] = r4
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[3] = r4 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[4] = r5
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r74[4] = r5 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r74)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r74) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r75 = new org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r75 = new org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r75.<org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager: void <init>(org.apache.ambari.server.api.services.PersistenceManagerImplTest,org.apache.ambari.server.controller.spi.ClusterController,java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.api.services.PersistenceManagerImplTest$1)>(r0, r3, r14, r5, null)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : specialinvoke $r75.<org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager: void <init>(org.apache.ambari.server.api.services.PersistenceManagerImplTest,org.apache.ambari.server.controller.spi.ClusterController,java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.api.services.PersistenceManagerImplTest$1)>(r0, r3, r14, r5, null) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke $r75.<org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r6)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : virtualinvoke $r75.<org.apache.ambari.server.api.services.PersistenceManagerImplTest$TestPersistenceManager: org.apache.ambari.server.controller.spi.RequestStatus create(org.apache.ambari.server.api.resources.ResourceInstance,org.apache.ambari.server.api.services.RequestBody)>(r1, r6) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77 = newarray (java.lang.Object)[5]
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[0] = r1
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[0] = r1 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[1] = r2
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[1] = r2 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[2] = r3
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[2] = r3 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[3] = r4
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[3] = r4 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[4] = r5
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : $r77[4] = r5 >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r77)
org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r77) >>>>>>>> org.apache.ambari.server.api.services.PersistenceManagerImplTest.testCreate__MultipleResources : return
