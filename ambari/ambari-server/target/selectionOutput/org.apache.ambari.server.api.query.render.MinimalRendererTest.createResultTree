org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r2 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r2.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r2.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r4 = $r2
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r4 = $r2 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/version", "HDP-1.3.3")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/version", "HDP-1.3.3") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/prop1", "value1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Clusters/prop1", "value1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r4.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r4, "Cluster:1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r4, "Cluster:1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r6 = interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "hosts")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r6 = interfaceinvoke r5.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "hosts") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r20 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r20 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r21 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r21 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r20.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r21)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r20.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r21) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r7 = $r20
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r7 = $r20 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r7.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r8 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r7, "Host:1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r8 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r7, "Host:1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r9 = interfaceinvoke r8.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r9 = interfaceinvoke r8.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r22 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r22 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r23 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r23 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r22.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r23)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r22.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r23) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r10 = $r22
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r10 = $r22 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "NAMENODE")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "NAMENODE") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r24 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r24 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r25 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r25 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r24.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r25)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r24.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r25) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r11 = $r24
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r11 = $r24 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "DATANODE")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "DATANODE") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r11.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r26 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r26 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r27 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r27 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r26.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r27)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r26.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r27) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r12 = $r26
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r12 = $r26 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "JOBTRACKER")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "JOBTRACKER") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r28 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r28 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r29 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r29 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r28.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r29)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r28.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r29) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r13 = $r28
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r13 = $r28 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "TASKTRACKER")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/component_name", "TASKTRACKER") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/host_name", "testHost") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r12.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("HostRoles/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r10, "HostComponent:1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r10, "HostComponent:1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r12, "HostComponent:3")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r12, "HostComponent:3") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:4")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:4") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r34 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r34 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r35 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r35 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r34.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r35)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r34.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r35) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r14 = $r34
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r14 = $r34 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/cluster_name", "testCluster")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/cluster_name", "testCluster") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r14.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r15 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r14, "Host:2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r15 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r14, "Host:2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r16 = interfaceinvoke r15.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r16 = interfaceinvoke r15.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r16.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r38 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r38 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r39 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : $r39 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r38.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r39)
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : specialinvoke $r38.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r39) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r17 = $r38
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r17 = $r38 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost3")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost3") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("Hosts/host_name", "testHost2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>("foo", "bar") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r18 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r17, "Host:3")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r18 = interfaceinvoke r6.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r17, "Host:3") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r19 = interfaceinvoke r18.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : r19 = interfaceinvoke r18.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(null, "host_components") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: void setProperty(java.lang.String,java.lang.Object)>("isCollection", "true") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:1")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r11, "HostComponent:1") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:2")
org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : interfaceinvoke r19.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r13, "HostComponent:2") >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRendererTest.createResultTree : return
