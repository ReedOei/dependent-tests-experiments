org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r1 = new org.quartz.impl.StdSchedulerFactory >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r1.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r1.<org.quartz.impl.StdSchedulerFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r2 = $r1
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r2 = $r1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r3 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r3 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r3)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r3 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r5 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r4 = $r5 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r6 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r6 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to initialize Request Execution Scheduler properties !")
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to initialize Request Execution Scheduler properties !") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduler properties: \n")
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduler properties: \n") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r11)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r4.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r4.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()]
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r5 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r16 = $r15 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r17 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r17 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to create Request Execution scheduler !")
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to create Request Execution scheduler !") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r16.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke r16.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> = $r12
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r12 = virtualinvoke r2.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> = $r12 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r13 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> = $r12 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r13 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r14 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r13 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r14 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r13.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r14)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r14 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r13.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r14) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: boolean isInitialized> = 1
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r13.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r14) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
