org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : z1 = virtualinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : z1 = virtualinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z1 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r10 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r12 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r12 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r12
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r11
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null == r3
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null == r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null == r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : return $r13
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r14 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r4 = $r14
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r4 = $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : return r4
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r6 = (org.apache.ambari.server.state.stack.upgrade.Task) $r15
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r6 = (org.apache.ambari.server.state.stack.upgrade.Task) $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r16 = r6.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.UpgradeScope scope>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r16 = r6.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.UpgradeScope scope> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z4 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: boolean isScoped(org.apache.ambari.server.state.stack.upgrade.UpgradeScope)>($r16)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z4 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: boolean isScoped(org.apache.ambari.server.state.stack.upgrade.UpgradeScope)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z4 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r11
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r10 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r10
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null != $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preDowngradeTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r11
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r11 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r11] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r11
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List postTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r9
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : if null == r3
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r9 = r2.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.util.List preTasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r9]
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : goto [?= r3 = $r9] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : r3 = $r9
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.resolveTasks : return $r7
