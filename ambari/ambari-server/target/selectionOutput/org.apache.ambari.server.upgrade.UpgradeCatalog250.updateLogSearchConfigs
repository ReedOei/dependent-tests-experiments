org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r27 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r33 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r33 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r34 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r33 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r41 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r41 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r41 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = (java.lang.String) $r43
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = (java.lang.String) $r43 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z14 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>($r46)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z14 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z14 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z14 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r47 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z14 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r47 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", $r47, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", $r47, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r34 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r34.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r34.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r34
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\' or ambari_server_use_ssl")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r38)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z8 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z8 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z8 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r40 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r40 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r40.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r40.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r40
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r40 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\' or ambari_server_use_ssl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r30 = (java.lang.String) $r29
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r30 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r30.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r30.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = virtualinvoke r30.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = virtualinvoke r30.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r32 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r31)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r32 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r31) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r32, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r32, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r16
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r26 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r26
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env")
