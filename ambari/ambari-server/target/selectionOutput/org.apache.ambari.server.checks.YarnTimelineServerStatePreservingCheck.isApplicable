org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r11 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r11[0] = "YARN"
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r11[0] = "YARN" >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z0 = specialinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List,boolean)>(r1, $r12, 1)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z0 = specialinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List,boolean)>(r1, $r12, 1) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z0 != 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r13 = r0.<org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r13 = r0.<org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r15 = (org.apache.ambari.server.state.Clusters) $r14
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r15 = (org.apache.ambari.server.state.Clusters) $r14 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r2 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r16)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r2 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r3 = null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r3 = null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r5 = null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r5 = null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r4 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r4 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r4 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r5 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r5 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z1 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("min-applicable-stack-version")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r5 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r3 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r3 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r3 == null >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z2 != 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r6 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r6 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $i0 = lengthof r6
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $i0 = lengthof r6 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i0 != 2
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i0 != 2 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r7 = r6[0]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i0 != 2 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r7 = r6[0] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r8 = r6[1]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r8 = r6[1] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r20 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r20 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r9 = virtualinvoke $r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r9 = virtualinvoke $r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r9)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z3 == 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r21 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r21 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r10 = virtualinvoke $r22.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r10 = virtualinvoke $r22.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r10, r8)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $i1 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r10, r8) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i1 < 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i1 < 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z4 = 1
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $i1 < 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z4 = 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z4 = 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return $z4
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z4 = 1 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : goto [?= return $z4]
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : goto [?= return $z4] >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : return $z4
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $z1 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("min-applicable-stack-version") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z1 == 0
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r19 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("min-applicable-stack-version")
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r3 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r19 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("min-applicable-stack-version") >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r3 = (java.lang.String) $r19
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r3 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r3 == null
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r5 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r18)
org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : r5 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.checks.YarnTimelineServerStatePreservingCheck.isApplicable : if r5 == null
