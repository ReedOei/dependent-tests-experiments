org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 1
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if r1 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r3 == $r4
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : r2 = (org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey) r1
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : r2 = (org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey) r1 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r5 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r5 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r5 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r6 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r8 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r8 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r8 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r8 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r8 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r9 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r9 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r9 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r9 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r10 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r9 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r12 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r12 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r12 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r12 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r12 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r13 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r13 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r13 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r13 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r14 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r13 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r16 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r16 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r16 != null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r16 != null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 1
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $r16 != null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return $z3
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 1 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return $z3]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return $z3
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r14 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r15 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r15 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z2 != 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= $z3 = 0]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 1
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= $z3 = 0] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z3 = 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r10 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r11 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r11 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11)
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z1 != 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return 0]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r13 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return 0] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r6 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r7 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r7 = r2.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z0 != 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return 0]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : $r9 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : goto [?= return 0] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.equals : return 0
