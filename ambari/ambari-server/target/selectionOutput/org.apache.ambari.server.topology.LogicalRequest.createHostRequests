org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r14 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: org.apache.ambari.server.orm.entities.TopologyRequestEntity getTopologyRequestEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r3 = virtualinvoke $r14.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.util.Collection getTopologyHostGroupEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r3 = virtualinvoke $r14.<org.apache.ambari.server.orm.entities.TopologyRequestEntity: java.util.Collection getTopologyHostGroupEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r4 = specialinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map getReservedHostNamesByHostGroupName(java.util.Collection)>(r3)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r4 = specialinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map getReservedHostNamesByHostGroupName(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r15 = new java.util.HashMap
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r15.<java.util.HashMap: void <init>(java.util.Map)>(r4)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r15.<java.util.HashMap: void <init>(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r5 = $r15
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r5 = $r15 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r19 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r19 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : z3 = interfaceinvoke $r19.<org.apache.ambari.server.topology.Blueprint: boolean shouldSkipFailure()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : z3 = interfaceinvoke $r19.<org.apache.ambari.server.topology.Blueprint: boolean shouldSkipFailure()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.TopologyLogicalRequestEntity: java.util.Collection getTopologyHostRequestEntities()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z4 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : return
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r23 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r22
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r23 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r22 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r24 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.Long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r24 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r25 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r25 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r26 = $r25
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r26 = $r25 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r25
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r25 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : entermonitor $r25 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r12 = $r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r12 = $r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : throw r12
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: long get()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r27 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r24.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l0 = virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r24.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l1 = virtualinvoke r24.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r28 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $b2 > 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= r30 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= r30 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r30 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r30 = virtualinvoke r23.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r31 = virtualinvoke r30.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r31 = virtualinvoke r30.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r32 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r32 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r33 = (java.util.Set) $r32
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r33 = (java.util.Set) $r32 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r34 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r33, null)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r34 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r33, null) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r35 = (java.lang.String) $r34
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r36 = new org.apache.ambari.server.topology.HostRequest
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r36 = new org.apache.ambari.server.topology.HostRequest >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l5 = virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l5 = virtualinvoke r0.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l6 = virtualinvoke r24.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l6 = virtualinvoke r24.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r36.<org.apache.ambari.server.topology.HostRequest: void <init>(long,long,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyHostRequestEntity,boolean)>($l5, $l6, r35, r1, r23, z3)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : specialinvoke $r36.<org.apache.ambari.server.topology.HostRequest: void <init>(long,long,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.orm.entities.TopologyHostRequestEntity,boolean)>($l5, $l6, r35, r1, r23, z3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r13 = $r36
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r13 = $r36 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r37 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r37 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r37.<java.util.Collection: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r37.<java.util.Collection: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z6 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: boolean isCompleted()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z6 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: boolean isCompleted()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 != 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z6 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r38 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r35 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r42 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r42 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r42.<java.util.Collection: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r42.<java.util.Collection: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r43 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r43 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l8 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l8 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.createHostRequests: created new outstanding host request ID = {}", $r44)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.createHostRequests: created new outstanding host request ID = {}", $r44) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r38 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r13)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r13) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r33.<java.util.Set: boolean remove(java.lang.Object)>(r35)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r33.<java.util.Set: boolean remove(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r40 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r40 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l7 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: long getId()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l7 = virtualinvoke r13.<org.apache.ambari.server.topology.HostRequest: long getId()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("LogicalRequest.createHostRequests: created new request for a reserved request ID = {} for host name = {}", $r41, r35)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("LogicalRequest.createHostRequests: created new request for a reserved request ID = {} for host name = {}", $r41, r35) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r28 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l3 = virtualinvoke r24.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r28 = <org.apache.ambari.server.topology.LogicalRequest: java.util.concurrent.atomic.AtomicLong hostIdCounter> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l3 = virtualinvoke r24.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l4 = $l3 + 1L
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l3 = virtualinvoke r24.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l4 = $l3 + 1L >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l4)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $l4 = $l3 + 1L >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l4) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : exitmonitor r26
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l4) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r29 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r7 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r17
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r7 = (org.apache.ambari.server.orm.entities.TopologyHostRequestEntity) $r17 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: org.apache.ambari.server.orm.entities.TopologyHostGroupEntity getTopologyHostGroupEntity()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.TopologyHostGroupEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r10 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r10 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r10 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r10 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z1 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r10 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $z1 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r11 = (java.util.Set) $r18
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : r11 = (java.util.Set) $r18 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r11 == null
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r11 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r11.<java.util.Set: boolean remove(java.lang.Object)>(r10)
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : if r11 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.createHostRequests : interfaceinvoke r11.<java.util.Set: boolean remove(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.createHostRequests : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
