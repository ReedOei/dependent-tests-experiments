org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z0 = r1 instanceof org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z0 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r2 = (org.apache.ambari.server.controller.ClusterRequest) r1
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : return $z5
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r2 = (org.apache.ambari.server.controller.ClusterRequest) r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r3 = virtualinvoke $r2.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z1 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r3, $r4)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z1 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r5 = (org.apache.ambari.server.controller.ClusterRequest) r1
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r5 = (org.apache.ambari.server.controller.ClusterRequest) r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r6 = virtualinvoke $r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z2 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r6, $r7)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z2 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r6, $r7) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z2 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r8 = (org.apache.ambari.server.controller.ClusterRequest) r1
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r8 = (org.apache.ambari.server.controller.ClusterRequest) r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z3 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z3 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z3 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r11 = (org.apache.ambari.server.controller.ClusterRequest) r1
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r11 = (org.apache.ambari.server.controller.ClusterRequest) r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.util.Set getHostNames()>()
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher: java.util.Set getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z4 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r12, $r13)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z4 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest: boolean access$000(java.lang.Object,java.lang.Object)>($r12, $r13) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z4 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 1
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 0
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : $z5 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : goto [?= return $z5]
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : goto [?= return $z5] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$ClusterRequestMatcher.matches : return $z5
