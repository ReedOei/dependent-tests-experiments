org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r8 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r1 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.HostDAO: java.util.List findAll()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r1 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.HostDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r17 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.ClusterDAO clusterDAO>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r17 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.ClusterDAO clusterDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r35 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r35 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : return
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r37 = (org.apache.ambari.server.orm.entities.HostEntity) $r36
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r37 = (org.apache.ambari.server.orm.entities.HostEntity) $r36 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r38 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r38 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r38.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r38.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r39 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r38)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r39 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r38) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r41 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r41 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r40.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r39)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r40.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r39) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r43 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r43 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r44 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r44 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r45 = virtualinvoke $r43.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r44)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r45 = virtualinvoke $r43.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r5 = (org.apache.ambari.server.state.Host) $r45
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r5 = (org.apache.ambari.server.state.Host) $r45 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r46 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.util.Collection getClusterEntities()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r46 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.HostEntity: java.util.Collection getClusterEntities()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r6 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r6 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r47 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r47 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r7 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r47
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r7 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r47 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r48 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r48 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r49 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r49 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r50 = virtualinvoke $r48.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r49)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r50 = virtualinvoke $r48.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r51 = (java.util.Set) $r50
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r51 = (java.util.Set) $r50 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke $r51.<java.util.Set: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke $r51.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r52 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r52 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r53 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r53 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r54 = virtualinvoke $r52.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r53)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r54 = virtualinvoke $r52.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke r39.<java.util.Set: boolean add(java.lang.Object)>($r54)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke r39.<java.util.Set: boolean add(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r21 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r20
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r21 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r20 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r22 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.cluster.ClusterFactory clusterFactory>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r22 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.cluster.ClusterFactory clusterFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r23 = interfaceinvoke $r22.<org.apache.ambari.server.state.cluster.ClusterFactory: org.apache.ambari.server.state.Cluster create(org.apache.ambari.server.orm.entities.ClusterEntity)>(r21)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r23 = interfaceinvoke $r22.<org.apache.ambari.server.state.cluster.ClusterFactory: org.apache.ambari.server.state.Cluster create(org.apache.ambari.server.orm.entities.ClusterEntity)>(r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r24 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r24 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r25 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r25 = virtualinvoke r21.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r24.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r23)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r24.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r27 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clustersById>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r27 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clustersById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $l0 = interfaceinvoke r23.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $l0 = interfaceinvoke r23.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r23)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r30 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r30 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r31 = interfaceinvoke r23.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r31 = interfaceinvoke r23.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r32 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r32 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r32.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r32.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r33 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r32)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r33 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r32) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r30.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r33)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r30.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r33) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r3 = (org.apache.ambari.server.orm.entities.HostEntity) $r9
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r3 = (org.apache.ambari.server.orm.entities.HostEntity) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r10 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r10 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>(r3)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r11 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r11 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r4)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r14 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r14 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r15 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r15 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r4)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
