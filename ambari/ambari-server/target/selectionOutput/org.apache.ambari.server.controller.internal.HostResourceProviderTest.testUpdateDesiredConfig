org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r2 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: com.google.inject.Injector createInjector()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r17 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r17 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r17
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r18 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r18 = interfaceinvoke r2.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r4 = (org.apache.ambari.server.state.Clusters) $r18
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r4 = (org.apache.ambari.server.state.Clusters) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r5 = (org.apache.ambari.server.state.Cluster) $r19
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r5 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/HostHealthStatus")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/HostHealthStatus") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r6 = (org.apache.ambari.server.state.HostHealthStatus) $r20
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r6 = (org.apache.ambari.server.state.HostHealthStatus) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r21 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r21
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r7 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/HostResponse")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/HostResponse") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r8 = (org.apache.ambari.server.controller.HostResponse) $r22
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r8 = (org.apache.ambari.server.controller.HostResponse) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ResourceProviderFactory") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r9 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r23
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r9 = (org.apache.ambari.server.controller.ResourceProviderFactory) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r2)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(com.google.inject.Injector)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r9)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: void init(org.apache.ambari.server.controller.ResourceProviderFactory)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r24 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r24 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r24.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r24.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r11 = $r24
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r11 = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r12 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.state.Host createMockHost(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,org.apache.ambari.server.agent.RecoveryReport)>("Host100", "Cluster100", null, "HEALTHY", "RECOVERABLE", null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r25 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r25 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r27 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r27 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r29 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r29 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r34 = (java.util.Set) $r33
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r34 = (java.util.Set) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r35 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r34)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r35 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r37 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r37 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r38 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r40 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r40 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r44 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r44 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50 = newarray (org.apache.ambari.server.state.Host)[1]
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50 = newarray (org.apache.ambari.server.state.Host)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50[0] = r12
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r50[0] = r12 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r51 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r50)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r51 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r52 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r52 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r54 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r54 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r56 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r56 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Host100", r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r57 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r56)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r57 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r59 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r59 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r63 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r63 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r63, "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r63, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r64 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r69 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r68)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r69 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r71 = interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r71 = interfaceinvoke $r69.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r73 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r73 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r74 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r76 = interfaceinvoke $r74.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r78 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r78 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r80 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r80 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r80.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r80.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r83 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r83 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r87 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r87 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r91 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r91 = virtualinvoke r8.<org.apache.ambari.server.controller.HostResponse: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r95 = virtualinvoke r6.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r95 = virtualinvoke r6.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r97 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r97 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r98 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r97)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r98 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r97) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r100 = virtualinvoke r6.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r100 = virtualinvoke r6.<org.apache.ambari.server.state.HostHealthStatus: java.lang.String getHealthReport()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r101 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r100)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r101 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r100) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r102 = interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r102 = interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HEALTHY") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r104 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r104 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r105 = (java.util.Set) $r104
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r105 = (java.util.Set) $r104 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r106 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r106 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r107 = (java.util.Map) $r106
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r107 = (java.util.Map) $r106 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r108 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r108 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r109 = (org.apache.ambari.server.controller.AmbariManagementController) $r108
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r109 = (org.apache.ambari.server.controller.AmbariManagementController) $r108 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r110 = interfaceinvoke r9.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r105, $r107, $r109)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r110 = interfaceinvoke r9.<org.apache.ambari.server.controller.ResourceProviderFactory: org.apache.ambari.server.controller.spi.ResourceProvider getHostResourceProvider(java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r105, $r107, $r109) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r111 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r110)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r111 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r110) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r112 = interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r112 = interfaceinvoke $r111.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r114 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r114 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r114.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke $r114.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r115 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r115 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r115.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : specialinvoke $r115.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r13 = $r115
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r13 = $r115 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r116 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r116 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r116, "Cluster100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r116, "Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r118 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r118 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r118, "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r118, "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r120 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "type")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r120 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "type") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, "global")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, "global") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r122 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "tag")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r122 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config", "tag") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r122, "version1")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r122, "version1") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r124 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "a")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r124 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "a") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r124, "b")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r124, "b") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r126 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "x")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r126 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("Hosts.desired_config.properties", "x") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r126, "y")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r126, "y") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>(r13, null)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getUpdateRequest(java.util.Map,java.util.Map)>(r13, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r15 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r15 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.spi.Predicate buildPredicate(java.lang.String,java.lang.String)>("Cluster100", "Host100") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r128 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r128 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r129 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r129 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r130 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r129)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r130 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r129) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r131 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r131 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r132 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r131)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : $r132 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r131) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r16 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r128, $r130, $r132, r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : r16 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>($r128, $r130, $r132, r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r14, r15)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : interfaceinvoke r16.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r14, r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.testUpdateDesiredConfig : return
