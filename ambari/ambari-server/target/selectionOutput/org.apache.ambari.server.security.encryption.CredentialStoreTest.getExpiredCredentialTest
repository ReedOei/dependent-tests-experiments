org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r8 = r0.<org.apache.ambari.server.security.encryption.CredentialStoreTest: org.junit.rules.TemporaryFolder tmpFolder> >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r3 = virtualinvoke $r8.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>()
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r3 = virtualinvoke $r8.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r4 = "ThisIsSomeSecretPassPhrase1234"
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r4 = "ThisIsSomeSecretPassPhrase1234" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r5 = interfaceinvoke r2.<org.apache.ambari.server.security.encryption.CredentialStoreTest$MasterKeyServiceFactory: org.apache.ambari.server.security.encryption.MasterKeyService create(java.lang.String)>(r4)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r5 = interfaceinvoke r2.<org.apache.ambari.server.security.encryption.CredentialStoreTest$MasterKeyServiceFactory: org.apache.ambari.server.security.encryption.MasterKeyService create(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r6 = interfaceinvoke r1.<org.apache.ambari.server.security.encryption.CredentialStoreTest$CredentialStoreServiceFactory: org.apache.ambari.server.security.encryption.CredentialStore create(java.io.File,org.apache.ambari.server.security.encryption.MasterKeyService)>(r3, r5)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r6 = interfaceinvoke r1.<org.apache.ambari.server.security.encryption.CredentialStoreTest$CredentialStoreServiceFactory: org.apache.ambari.server.security.encryption.CredentialStore create(java.io.File,org.apache.ambari.server.security.encryption.MasterKeyService)>(r3, r5) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r7 = "mypassword"
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : r7 = "mypassword" >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r9 = new org.apache.ambari.server.security.credential.GenericKeyCredential
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r9 = new org.apache.ambari.server.security.credential.GenericKeyCredential >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r10 = virtualinvoke r7.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r10 = virtualinvoke r7.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r9.<org.apache.ambari.server.security.credential.GenericKeyCredential: void <init>(char[])>($r10)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r9.<org.apache.ambari.server.security.credential.GenericKeyCredential: void <init>(char[])>($r10) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: void addCredential(java.lang.String,org.apache.ambari.server.security.credential.Credential)>("myalias", $r9)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: void addCredential(java.lang.String,org.apache.ambari.server.security.credential.Credential)>("myalias", $r9) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r11 = new java.lang.String
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r11 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r12 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias")
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r12 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>()
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r7, $r11)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r7, $r11) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <java.lang.Thread: void sleep(long)>(250L)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <java.lang.Thread: void sleep(long)>(250L) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r14 = new java.lang.String
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r14 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r15 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias")
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r15 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>()
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r16 = interfaceinvoke $r15.<org.apache.ambari.server.security.credential.Credential: char[] toValue()>() >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r7, $r14)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r7, $r14) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <java.lang.Thread: void sleep(long)>(550L)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <java.lang.Thread: void sleep(long)>(550L) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r17 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias")
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : $r17 = interfaceinvoke r6.<org.apache.ambari.server.security.encryption.CredentialStore: org.apache.ambari.server.security.credential.Credential getCredential(java.lang.String)>("myalias") >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>(r7, $r17)
org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : staticinvoke <junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>(r7, $r17) >>>>>>>> org.apache.ambari.server.security.encryption.CredentialStoreTest.getExpiredCredentialTest : return
