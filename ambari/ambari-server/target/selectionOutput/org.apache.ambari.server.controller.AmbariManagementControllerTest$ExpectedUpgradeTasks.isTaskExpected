org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : $r2 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role AMBARI_SERVER_ACTION> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks: boolean isTaskExpected(org.apache.ambari.server.Role,java.lang.String)>(r1, "default_host")
org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks: boolean isTaskExpected(org.apache.ambari.server.Role,java.lang.String)>(r1, "default_host") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest$ExpectedUpgradeTasks.isTaskExpected : return $z0
