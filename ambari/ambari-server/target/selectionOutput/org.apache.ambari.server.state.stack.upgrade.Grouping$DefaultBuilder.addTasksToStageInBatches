org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if r1 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if r1 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r16 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r16 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r17 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r16
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r17 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r18 = virtualinvoke $r17.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r18 = virtualinvoke $r17.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r18 == null
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r18 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r19 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r18 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r19 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r20 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r19
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r20 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r21 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r21 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z1 = interfaceinvoke $r21.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z1 = interfaceinvoke $r21.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r23 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r22
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r23 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r26 = (org.apache.ambari.server.state.stack.upgrade.Task) $r25
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r26 = (org.apache.ambari.server.state.stack.upgrade.Task) $r25 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r7 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r7 = virtualinvoke $r26.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r27 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r27 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r9 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r27
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r9 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r27 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : n0 = null
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : n0 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r28 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r28 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r29 = $r28.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r29 = $r28.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r29 == null
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r29 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r29 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r36 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r36 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r35 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r36, 1)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r35 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r36, 1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r35.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r35.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i1 = 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i1 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r10 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r10 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r37 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r37 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r11 = (java.util.Set) $r37
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r11 = (java.util.Set) $r37 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i1 = i1 + 1
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r38 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r38 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r39 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r39 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r40 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r40 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r41 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Map getParams()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r41 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Map getParams()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r42 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r42 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>($r39, $r40, r11, $r41, $r42)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>($r39, $r40, r11, $r41, $r42) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r12 = $r38
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r12 = $r38 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r43 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r43 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r44 = virtualinvoke r3.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r4, $r43)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r44 = virtualinvoke r3.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r4, $r43) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r13 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set,int,int)>(r2, $r44, r11, i1, i0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r13 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set,int,int)>(r2, $r44, r11, i1, i0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r45 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r45 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r46 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r46 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r14 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r14 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r47 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r47 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r48 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r48 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r14.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>(r4, $r47, r11, r6, $r48)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r14.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>(r4, $r47, r11, r6, $r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r46[0] = $r14
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r46[0] = $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r45.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,java.util.Map,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>(r7, r13, r6, $r46)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r45.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,java.util.Map,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>(r7, r13, r6, $r46) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r15 = $r45
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r15 = $r45 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r49 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r49 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>(r15)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>(r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r30 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r31 = $r30.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r31 = $r30.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i2 = $r31.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i2 = $r31.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i2 <= 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i2 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r32 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i2 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r36 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r32 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r34 = $r33.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r34 = $r33.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i3 = $r34.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i3 = $r34.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r35 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r32, $i3)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r35 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r32, $i3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= i0 = interfaceinvoke r35.<java.util.List: int size()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= i0 = interfaceinvoke r35.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r35.<java.util.List: int size()>()
