org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r2 = $r1
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "b")
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "b") >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "d")
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c", "d") >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r12 = new java.util.HashMap
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r3 = $r12
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r3 = $r12 >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r13 = new java.util.HashMap
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r4 = $r13
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r4 = $r13 >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "true")
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", "true") >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", r4)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", r4) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r16 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.ConfigFactory configFactory>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r16 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.ConfigFactory configFactory> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r17 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r17 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r5 = interfaceinvoke $r16.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>($r17, "hdfs-site", "testversion", r2, r3)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r5 = interfaceinvoke $r16.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>($r17, "hdfs-site", "testversion", r2, r3) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r18 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r18 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r6 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r6 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r19 = new java.util.HashMap
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r7 = $r19
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r7 = $r19 >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r20 = new java.util.HashMap
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r8 = $r20
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r8 = $r20 >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r21 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r21 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r5)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r5) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r6)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, r6) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r25 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.configgroup.ConfigGroupFactory configGroupFactory>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r25 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.configgroup.ConfigGroupFactory configGroupFactory> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r26 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r26 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r9 = interfaceinvoke $r25.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>($r26, "cg-test", "HDFS", "New HDFS configs for h1", r7, r8)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : r9 = interfaceinvoke $r25.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>($r26, "cg-test", "HDFS", "New HDFS configs for h1", r7, r8) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r27 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : $r27 = r0.<org.apache.ambari.server.state.ConfigGroupTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke $r27.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r9)
org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : interfaceinvoke $r27.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r9) >>>>>>>> org.apache.ambari.server.state.ConfigGroupTest.createConfigGroup : return r9
