org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stack/ServiceDirectory") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : r3 = (org.apache.ambari.server.stack.ServiceDirectory) $r4
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : r3 = (org.apache.ambari.server.stack.ServiceDirectory) $r4 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r5 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.stack.ConfigurationDirectory getConfigurationDirectory(java.lang.String,java.lang.String)>(r1, "properties")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r5 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.stack.ConfigurationDirectory getConfigurationDirectory(java.lang.String,java.lang.String)>(r1, "properties") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r10 = (java.lang.String) $r9
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r11 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getMetricsFile(java.lang.String)>($r10)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r11 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getMetricsFile(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r13 = new java.io.File
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r13 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>("testMetricsFile")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>("testMetricsFile") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r17 = (java.lang.String) $r16
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r18 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getWidgetsDescriptorFile(java.lang.String)>($r17)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r18 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getWidgetsDescriptorFile(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r20 = new java.io.File
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r20 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>("testWidgetsFile")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>("testWidgetsFile") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r21 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r21 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r23 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getAlertsFile()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r23 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getAlertsFile()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r25 = new java.io.File
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r25 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>("testAlertsFile")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>("testAlertsFile") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r26 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r25)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r26 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r28 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getKerberosDescriptorFile()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r28 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File getKerberosDescriptorFile()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r30 = new java.io.File
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r30 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r30.<java.io.File: void <init>(java.lang.String)>("testKerberosDescriptorFile")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : specialinvoke $r30.<java.io.File: void <init>(java.lang.String)>("testKerberosDescriptorFile") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r31 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r31 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r33 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getPackageDir()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r33 = virtualinvoke r3.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getPackageDir()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("packageDir")
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("packageDir") >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r37 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r37 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r37[0] = r3
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : $r37[0] = r3 >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r37)
org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r37) >>>>>>>> org.apache.ambari.server.stack.ServiceModuleTest.createServiceDirectory : return r3
