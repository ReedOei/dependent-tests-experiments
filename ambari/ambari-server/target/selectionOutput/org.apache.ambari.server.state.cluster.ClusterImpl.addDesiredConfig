org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null != r1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r7 = new java.lang.NullPointerException
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null != r1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r2 != null
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r6 = $r21 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r22 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r6 = $r21 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r22 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : throw r6
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : n0 = null
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r17 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyConfigs(java.util.Set,java.lang.String,java.lang.String)>(r2, r1, r3)
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r17 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyConfigs(java.util.Set,java.lang.String,java.lang.String)>(r2, r1, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r18 = r17
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r17 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyConfigs(java.util.Set,java.lang.String,java.lang.String)>(r2, r1, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r18 = r17 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r19 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r18 = r17 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r19 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : return r18
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r4 = (org.apache.ambari.server.state.Config) $r13
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r4 = (org.apache.ambari.server.state.Config) $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r4 != null
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r4 = (org.apache.ambari.server.state.Config) $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r4 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r4 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if r4 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r14)
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null == r5
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null == r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null == r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if null == r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16)
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke r12.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : n0 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : n0 = null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r21 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : return n0
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : $r7 = new java.lang.NullPointerException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("User must be specified.")
org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("User must be specified.") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addDesiredConfig : throw $r7
