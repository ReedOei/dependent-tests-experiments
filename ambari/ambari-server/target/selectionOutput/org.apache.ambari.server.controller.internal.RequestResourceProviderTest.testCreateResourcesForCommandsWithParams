org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request> >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r22 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r22 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r5 = (org.apache.ambari.server.state.Cluster) $r22
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r5 = (org.apache.ambari.server.state.Cluster) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r26 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r26 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r29 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r31 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r31 = interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r33 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r33 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r6 = (org.apache.ambari.server.state.Clusters) $r33
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r6 = (org.apache.ambari.server.state.Clusters) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r34 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r34 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r38 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r38 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r38
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r39 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r39 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r39
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r40 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r40 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r45 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r44
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r45 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r47 = (java.util.Map) $r46
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r47 = (java.util.Map) $r46 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r48 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r45, $r47)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r48 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r45, $r47) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r52 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r52 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[0] = r5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[0] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[1] = r6
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[1] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[2] = r7
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[2] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[3] = r8
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r56[3] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r56)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r57 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r57 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke $r57.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r58 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r58 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r58.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r58.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r9 = $r58
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r9 = $r58 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r59 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r59 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r59.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r59.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r10 = $r59
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r10 = $r59 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", "c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r61 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r61 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r61.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r61.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r11 = $r61
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r11 = $r61 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r62 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r62 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r62.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r62.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r12 = $r62
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r12 = $r62 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", "HDFS") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", "host1,host2,host3")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", "host1,host2,host3") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r66 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r66 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r66.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r66.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r13 = $r66
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r13 = $r66 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param1", "value1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param1", "value1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param2", "value2")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("parameters/param2", "value2") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69 = newarray (java.lang.String)[3]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[0] = "host1"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[0] = "host1" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[1] = "host2"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[1] = "host2" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[2] = "host3"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r69[2] = "host3" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r14 = $r69
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r14 = $r69 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r70 = new org.apache.ambari.server.controller.internal.RequestResourceProviderTest$11
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r70 = new org.apache.ambari.server.controller.internal.RequestResourceProviderTest$11 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r70.<org.apache.ambari.server.controller.internal.RequestResourceProviderTest$11: void <init>(org.apache.ambari.server.controller.internal.RequestResourceProviderTest)>(r0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : specialinvoke $r70.<org.apache.ambari.server.controller.internal.RequestResourceProviderTest$11: void <init>(org.apache.ambari.server.controller.internal.RequestResourceProviderTest)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r15 = $r70
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r15 = $r70 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r71 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r71 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r72 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r72 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r17 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r71, $r72, r7)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r17 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r71, $r72, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r16)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r17 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r71, $r72, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r74 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r18 = $r74 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r75 = virtualinvoke r18.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r75 = virtualinvoke r18.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z2 = virtualinvoke $r75.<java.lang.String: boolean contains(java.lang.CharSequence)>("Either command or action must be specified")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z2 = virtualinvoke $r75.<java.lang.String: boolean contains(java.lang.CharSequence)>("Either command or action must be specified") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("action", "a1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("action", "a1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r78 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r78 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r78)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r78 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r81 = $r80 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r82 = virtualinvoke r81.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r82 = virtualinvoke r81.<java.lang.UnsupportedOperationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z3 = virtualinvoke $r82.<java.lang.String: boolean contains(java.lang.CharSequence)>("Both command and action cannot be specified")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z3 = virtualinvoke $r82.<java.lang.String: boolean contains(java.lang.CharSequence)>("Both command and action cannot be specified") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r84 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r84 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r84)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r84) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z4 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z4 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r86 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r86 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r87 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r86
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r87 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r86 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r88 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r88 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.Boolean isCommand()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z5 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z5 = virtualinvoke $r88.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r89 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r89 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getActionName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r89)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r89) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r90 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r90 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.lang.String getCommandName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r90)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS_SERVICE_CHECK", $r90) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r91 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r91 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i1 = interfaceinvoke $r91.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i1 = interfaceinvoke $r91.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l2 = (long) $i1
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r92 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r92 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.List getResourceFilters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r93 = interfaceinvoke $r92.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r93 = interfaceinvoke $r92.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r19 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r93
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r19 = (org.apache.ambari.server.controller.internal.RequestResourceFilter) $r93 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r94 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r94 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r94)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("HDFS", $r94) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r95 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r95 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r95)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $r95) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r96 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r96 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i3 = interfaceinvoke $r96.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i3 = interfaceinvoke $r96.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l4 = (long) $i3
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l4 = (long) $i3 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r97 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r97 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.RequestResourceFilter: java.util.List getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r98 = interfaceinvoke $r97.<java.util.List: java.lang.Object[] toArray()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r98 = interfaceinvoke $r97.<java.util.List: java.lang.Object[] toArray()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r14, $r98)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(r14, $r98) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r99 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r99 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i5 = interfaceinvoke $r99.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $i5 = interfaceinvoke $r99.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l6 = (long) $i5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $l6 = (long) $i5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r100 = interfaceinvoke r15.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r100 = interfaceinvoke r15.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r20 = interfaceinvoke $r100.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r20 = interfaceinvoke $r100.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r101 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : return
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r101 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r21 = (java.lang.String) $r101
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : r21 = (java.lang.String) $r101 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r102 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r102 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r103 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r103 = virtualinvoke r87.<org.apache.ambari.server.controller.ExecuteActionRequest: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r104 = interfaceinvoke $r103.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r104 = interfaceinvoke $r103.<java.util.Map: java.lang.Object get(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r102, $r104)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r102, $r104) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= $z6 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= $z6 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $z6 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r78) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r78) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r80 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>("action")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r17.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : $r74 := @caughtexception
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : goto [?= interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithParams : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "HDFS_SERVICE_CHECK")
