org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r9 = r0.<org.apache.ambari.server.update.HostUpdateHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r10
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r10 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r11 = new java.util.ArrayList
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r3 = $r11
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r3 = $r11 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r2 == null
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r2 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r12 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap>
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r2 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : return
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r12 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z0 == 0
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z3 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z3 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z3 != 0
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z3 != 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r18 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z3 != 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : return
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r18 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r19 = newarray (java.lang.Object)[1]
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r19 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r3, ", ")
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r3, ", ") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r19[0] = $r20
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r19[0] = $r20 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster(s) %s from file, is(are) in secure mode. Please, turn off security mode.", $r19)
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster(s) %s from file, is(are) in secure mode. Please, turn off security mode.", $r19) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : throw $r18
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r5 = (java.lang.String) $r14
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r5 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5)
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("cluster-env")
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("cluster-env") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r7 == null
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r7 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if r7 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("security_enabled")
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("security_enabled") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r8 = (java.lang.String) $r16
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : r8 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r17 = virtualinvoke r8.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $r17 = virtualinvoke r8.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("true")
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("true") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z1 == 0
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.checkForSecurity : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
