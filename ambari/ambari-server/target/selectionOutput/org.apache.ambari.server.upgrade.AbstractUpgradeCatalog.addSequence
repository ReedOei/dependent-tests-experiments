org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r5 = $r16 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r5 = $r16 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : throw r5
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : throw r5
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : return
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : return
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[0] = $r9
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[1] = r1
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r8)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r8) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r8) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $i0 = interfaceinvoke r4.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $i0 = interfaceinvoke r4.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $i0 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $i0 = interfaceinvoke r4.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $i0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r11 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $i0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $i0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r11 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r11 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r13 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r13 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[0] = $r13
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r13 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[1] = r1
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[0] = $r13 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[2] = r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[2] = r2 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("INSERT INTO %s(sequence_name, sequence_value) VALUES(\'%s\', %d)", $r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r12[2] = r2 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("INSERT INTO %s(sequence_name, sequence_value) VALUES(\'%s\', %d)", $r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String,boolean)>($r14, z0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("INSERT INTO %s(sequence_name, sequence_value) VALUES(\'%s\', %d)", $r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String,boolean)>($r14, z0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= (branch)]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String,boolean)>($r14, z0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r16 := @caughtexception
