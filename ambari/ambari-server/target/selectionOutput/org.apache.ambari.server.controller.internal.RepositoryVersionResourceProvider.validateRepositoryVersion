org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r3 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r17 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r17 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r3.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r17)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r3.<org.apache.ambari.server.state.StackId: void <init>(org.apache.ambari.server.orm.entities.StackEntity)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r4 = $r3
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r4 = $r3 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r5 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r5 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r6 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r6 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r7 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r7 = virtualinvoke r4.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r18 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r18 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r18.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r18.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r8 = $r18
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r8 = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r9 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>(r4)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r9 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z1 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r19 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r27 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r27 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r27.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r27.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r28 = $r27
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r28 = $r27 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r29 = virtualinvoke r1.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r5, r6)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r29 = virtualinvoke r1.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r5, r6) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z7 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r34 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r34 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r34.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r34.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r35 = $r34
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r35 = $r34 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r36 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r36 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z9 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z9 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z9 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z14 = interfaceinvoke r35.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z14 = interfaceinvoke r35.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z14 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r52 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r53 = interfaceinvoke r35.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r53 = interfaceinvoke r35.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z15 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z15 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z15 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r63 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r63 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r64 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r64 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z17 = staticinvoke <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean isVersionInStack(org.apache.ambari.server.state.StackId,java.lang.String)>($r63, $r64)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z17 = staticinvoke <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean isVersionInStack(org.apache.ambari.server.state.StackId,java.lang.String)>($r63, $r64) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z17 != 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r65 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : return
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r65 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r67 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r67 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66[0] = $r67
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66[0] = $r67 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r68 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r68 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r68.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r68.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r69 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r69 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r72 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r72 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66[1] = $r74
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r66[1] = $r74 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Version {0} needs to belong to stack {1}", $r66)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Version {0} needs to belong to stack {1}", $r66) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r65.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r75)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r65.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : throw $r65
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r55 = (java.lang.String) $r54
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r55 = (java.lang.String) $r54 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z16 = interfaceinvoke r28.<java.util.Set: boolean contains(java.lang.Object)>(r55)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z16 = interfaceinvoke r28.<java.util.Set: boolean contains(java.lang.Object)>(r55) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z16 != 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z16 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r56 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z16 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z15 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z15 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z15 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r56 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r57 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r57 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r57.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operating system type ")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operating system type ") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported by stack ")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported by stack ") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r56.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r62)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r56.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : throw $r56
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r52 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r52.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("At least one set of repositories for OS should be provided")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r52.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("At least one set of repositories for OS should be provided") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : throw $r52
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r39 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r38
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r39 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r40 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r40 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r35.<java.util.Set: boolean add(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r35.<java.util.Set: boolean add(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r41 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r41 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r42 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r42 = interfaceinvoke $r41.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z11 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r43 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z9 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z9 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z9 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r43 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r44 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r43
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r44 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r43 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r16 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getBaseUrl()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r16 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if z0 != 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z12 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z12 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z12 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z13 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>(r16)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z13 = interfaceinvoke r8.<java.util.Set: boolean contains(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z13 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r45 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r45 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r46 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Base url ")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Base url ") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already defined for another repository version. ")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already defined for another repository version. ") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting up base urls that contain the same versions of components will cause stack upgrade to fail.")
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting up base urls that contain the same versions of components will cause stack upgrade to fail.") >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r45.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r51)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : specialinvoke $r45.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : throw $r45
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r32 = (org.apache.ambari.server.state.OperatingSystemInfo) $r31
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r32 = (org.apache.ambari.server.state.OperatingSystemInfo) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r33 = virtualinvoke r32.<org.apache.ambari.server.state.OperatingSystemInfo: java.lang.String getOsType()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r33 = virtualinvoke r32.<org.apache.ambari.server.state.OperatingSystemInfo: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r28.<java.util.Set: boolean add(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r28.<java.util.Set: boolean add(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r19 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r11 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r19
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r11 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r20 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r20 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r12 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r12 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z2 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r21 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r21 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r13 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r21
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r13 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r22 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r22 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r14 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r14 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z3 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r23 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r23 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r15 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r23
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : r15 = (org.apache.ambari.server.orm.entities.RepositoryEntity) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z4 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.RepositoryEntity: boolean isUnique()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z4 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.RepositoryEntity: boolean isUnique()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z4 == 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r24 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r24 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z5 = virtualinvoke $r24.<java.lang.Long: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $z5 = virtualinvoke $r24.<java.lang.Long: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z5 != 0
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r26 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getBaseUrl()>()
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : $r26 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.RepositoryEntity: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryVersionResourceProvider.validateRepositoryVersion : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
