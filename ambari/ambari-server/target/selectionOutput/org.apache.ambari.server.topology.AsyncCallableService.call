org.apache.ambari.server.topology.AsyncCallableService.call : $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>()
org.apache.ambari.server.topology.AsyncCallableService.call : l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Task execution started at: {}", $r5)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Task execution started at: {}", $r5) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService>
org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task>
org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r2 = interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r7)
org.apache.ambari.server.topology.AsyncCallableService.call : r2 = interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r7) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $z1 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean taskCompleted(java.util.concurrent.Future)>(r2)
org.apache.ambari.server.topology.AsyncCallableService.call : $z1 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean taskCompleted(java.util.concurrent.Future)>(r2) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $z1 != 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean timeoutExceeded(long)>(l0)
org.apache.ambari.server.topology.AsyncCallableService.call : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r17 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r17 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r18 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.Object serviceResult>
org.apache.ambari.server.topology.AsyncCallableService.call : $r18 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.Object serviceResult> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Exiting Async task execution with the result: [ {} ]", $r18)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Exiting Async task execution with the result: [ {} ]", $r18) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r19 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.Object serviceResult>
org.apache.ambari.server.topology.AsyncCallableService.call : $r19 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.Object serviceResult> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : return $r19
org.apache.ambari.server.topology.AsyncCallableService.call : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean timeoutExceeded(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $z2 != 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r12 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r12 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>("Timout exceeded, cancelling task ... ")
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>("Timout exceeded, cancelling task ... ") >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $z3 = interfaceinvoke r2.<java.util.concurrent.Future: boolean isDone()>()
org.apache.ambari.server.topology.AsyncCallableService.call : $z3 = interfaceinvoke r2.<java.util.concurrent.Future: boolean isDone()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $z3 != 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : z0 = interfaceinvoke r2.<java.util.concurrent.Future: boolean cancel(boolean)>(1)
org.apache.ambari.server.topology.AsyncCallableService.call : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("Task already done.")
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>("Task already done.") >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r16 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r16 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Timeout exceeded, task execution won\'t be retried!")
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>("Timeout exceeded, task execution won\'t be retried!") >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r17 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r17 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r17 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : z0 = interfaceinvoke r2.<java.util.concurrent.Future: boolean cancel(boolean)>(1) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r13 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task cancelled: {}", $r14)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task cancelled: {}", $r14) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r16 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r16 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r16 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l1 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long delay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l1 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long delay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Retrying task execution in [ {} ] milliseconds.", $r9)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Retrying task execution in [ {} ] milliseconds.", $r9) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService>
org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task>
org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long delay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long delay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r2 = interfaceinvoke $r10.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r11, $l2, $r3)
org.apache.ambari.server.topology.AsyncCallableService.call : r2 = interfaceinvoke $r10.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r11, $l2, $r3) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $z1 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean taskCompleted(java.util.concurrent.Future)>(r2)]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $z1 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean taskCompleted(java.util.concurrent.Future)>(r2)] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $z1 = specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: boolean taskCompleted(java.util.concurrent.Future)>(r2)
