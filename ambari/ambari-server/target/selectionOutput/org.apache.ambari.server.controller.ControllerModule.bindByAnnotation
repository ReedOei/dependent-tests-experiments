org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[0] = class "org/apache/ambari/server/EagerSingleton"
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[0] = class "org/apache/ambari/server/EagerSingleton" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[1] = class "org/apache/ambari/server/StaticallyInject"
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[1] = class "org/apache/ambari/server/StaticallyInject" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[2] = class "org/apache/ambari/server/AmbariService"
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10[2] = class "org/apache/ambari/server/AmbariService" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i0 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r11.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>(0)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r11.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r3 = $r11
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r3 = $r11 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 == 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r1 = virtualinvoke r3.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>("org.apache.ambari.server")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r1 = virtualinvoke r3.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>("org.apache.ambari.server") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i1 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No instances of {} found to register", r2)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No instances of {} found to register", r2) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : return r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i1 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i1 != 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r15 = new java.util.HashSet
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r15.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r15.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r16 = $r15
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r16 = $r15 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r17 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r17 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r39 = new com.google.common.util.concurrent.ServiceManager
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r39 = new com.google.common.util.concurrent.ServiceManager >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r39.<com.google.common.util.concurrent.ServiceManager: void <init>(java.lang.Iterable)>(r16)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r39.<com.google.common.util.concurrent.ServiceManager: void <init>(java.lang.Iterable)>(r16) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r40 = $r39
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r40 = $r39 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r41 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "com/google/common/util/concurrent/ServiceManager")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r41 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "com/google/common/util/concurrent/ServiceManager") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r40)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r40) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : return r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r19 = (org.springframework.beans.factory.config.BeanDefinition) $r18
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r19 = (org.springframework.beans.factory.config.BeanDefinition) $r18 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r6 = interfaceinvoke r19.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r6 = interfaceinvoke r19.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getBeanClassName()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r20 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r20 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r7 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r6, $r20)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r7 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r6, $r20) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r21 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/EagerSingleton")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r21 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/EagerSingleton") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r21
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r21 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r21 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/StaticallyInject")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/StaticallyInject") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r24
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r24 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 = newarray (java.lang.Class)[1]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r24 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r27 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/AmbariService")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r27 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/AmbariService") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r27
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r27 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r28 = class "com/google/common/util/concurrent/Service"
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r27 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r28 = class "com/google/common/util/concurrent/Service" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z2 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z2 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z2 != 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r29 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : n0 = null
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : n0 = null >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r32 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : n0 = null >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r9 = $r36 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r37 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r37 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to register {} as a service", r7, r9)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to register {} as a service", r7, r9) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r38 = new java.lang.RuntimeException
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r38 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r9) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : throw $r38
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r32 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r32
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r32 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r32 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r32 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r34 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r33)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r35 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r35 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering service {} ", r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r35 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering service {} ", r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= (branch)]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering service {} ", r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r36 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r29 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r29[0] = r7
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r29[0] = r7 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to register service {0} because it is not a Service which can be scheduled", $r29)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r8 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to register service {0} because it is not a Service which can be scheduled", $r29) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r30 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r30 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>(r8)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r31 = new java.lang.RuntimeException
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r31 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>(r8)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : throw $r31
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25[0] = r7
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25[0] = r7 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: void requestStaticInjection(java.lang.Class[])>($r25)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: void requestStaticInjection(java.lang.Class[])>($r25) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r26 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r26 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Statically injecting {} ", r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Statically injecting {} ", r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r27 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/AmbariService")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void asEagerSingleton()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void asEagerSingleton()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r23 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r23 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Binding singleton {} eagerly", r7)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Binding singleton {} eagerly", r7) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = virtualinvoke r7.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/StaticallyInject")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r5 = (java.lang.Class) $r12
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r5 = (java.lang.Class) $r12 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r13 = new org.springframework.core.type.filter.AnnotationTypeFilter
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r13 = new org.springframework.core.type.filter.AnnotationTypeFilter >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r13.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>(r5)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r13.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>(r5) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r3.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>($r13)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r3.<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>($r13) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i0 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = new org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r1
