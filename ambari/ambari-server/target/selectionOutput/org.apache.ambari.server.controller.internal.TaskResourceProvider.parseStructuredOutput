org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if null == r1 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if null == r1 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = null >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper>
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = null >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r3 = $r6 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r7 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r7 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to parse task structured output: {}", r1)
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to parse task structured output: {}", r1) >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return r2
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "java/util/Map")
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "java/util/Map") >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = (java.util.Map) $r5
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "java/util/Map") >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : goto [?= return r2]
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r2 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : goto [?= return r2] >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return r2
