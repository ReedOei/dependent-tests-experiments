org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r14 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r14 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r6 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r6 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("HIVE")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("HIVE") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-interactive-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-interactive-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r15 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("hive.llap.task.scheduler.locality.delay")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r15 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("hive.llap.task.scheduler.locality.delay") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r9 = (java.lang.String) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r9 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r9 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r9 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $i1 = virtualinvoke r9.<java.lang.String: int length()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if r9 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r20, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r20, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r21 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("tez.session.am.dag.submit.timeout.secs", "1209600")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r21 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("tez.session.am.dag.submit.timeout.secs", "1209600") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("tez-interactive-site", $r21, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("tez-interactive-site", $r21, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $i1 = virtualinvoke r9.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $i1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $i1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $i1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if $i1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r17 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : r18 = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.task.scheduler.locality.delay", "8000")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.task.scheduler.locality.delay", "8000") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r19, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r19, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if i0 != -1
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r17 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if i0 != -1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.task.scheduler.locality.delay", "8000")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if i0 != -1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : if i0 != -1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r17 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.task.scheduler.locality.delay", "8000") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r16, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.task.scheduler.locality.delay", "8000") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r17 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r16, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : goto [?= $r20 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.mapjoin.hybridgrace.hashtable", "true")]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r16, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHiveLlapConfigs : $r17 := @caughtexception
