org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r3 = $r2
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r3 = $r2 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return r3
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return r3
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r14 = <org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.FilenameFilter FILENAME_FILTER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r14 = <org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.FilenameFilter FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r4 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r14)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r4 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r14) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r5 = r4
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r5 = r4 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i0 = lengthof r5
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i1 >= i0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r6 = r5[i1]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r28 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map stackMap>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r28 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map stackMap> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z3 = interfaceinvoke $r28.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z3 = interfaceinvoke $r28.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r29 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : return r3
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r29 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find extension definitions under extensionRoot = ")
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find extension definitions under extensionRoot = ") >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r32 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r32 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r29.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r34)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r29.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : throw $r29
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r6 = r5[i1] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z1 = virtualinvoke r6.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z1 = virtualinvoke r6.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i1 = i1 + 1]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r15 = <org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.FilenameFilter FILENAME_FILTER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r15 = <org.apache.ambari.server.api.services.AmbariMetaInfo: java.io.FilenameFilter FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r15)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r15) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = lengthof r7
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i2 = lengthof r7 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i2
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i2 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r8 = r7[i3]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i2 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = i1 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i1 >= i0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r8 = r7[i3] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z2 = virtualinvoke r8.<java.io.File: boolean isFile()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $z2 = virtualinvoke r8.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i3 = i3 + 1]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r9 = virtualinvoke r6.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r9 = virtualinvoke r6.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r10 = virtualinvoke r8.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r10 = virtualinvoke r8.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r16 = new org.apache.ambari.server.stack.ExtensionModule
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r16 = new org.apache.ambari.server.stack.ExtensionModule >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r11 = new org.apache.ambari.server.stack.ExtensionDirectory
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r11 = new org.apache.ambari.server.stack.ExtensionDirectory >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r17 = virtualinvoke r8.<java.io.File: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r17 = virtualinvoke r8.<java.io.File: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r11.<org.apache.ambari.server.stack.ExtensionDirectory: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r11.<org.apache.ambari.server.stack.ExtensionDirectory: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r18 = r0.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.stack.StackContext stackContext>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r18 = r0.<org.apache.ambari.server.stack.StackManager: org.apache.ambari.server.stack.StackContext stackContext> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r16.<org.apache.ambari.server.stack.ExtensionModule: void <init>(org.apache.ambari.server.stack.ExtensionDirectory,org.apache.ambari.server.stack.StackContext)>($r11, $r18)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r16.<org.apache.ambari.server.stack.ExtensionModule: void <init>(org.apache.ambari.server.stack.ExtensionDirectory,org.apache.ambari.server.stack.StackContext)>($r11, $r18) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r12 = $r16
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r12 = $r16 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r21 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r21 = <org.apache.ambari.server.stack.StackManager: java.lang.String PATH_DELIMITER> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r13 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : r13 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r12)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r12) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r25 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map extensionMap>
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r25 = r0.<org.apache.ambari.server.stack.StackManager: java.util.Map extensionMap> >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r26 = virtualinvoke r12.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : $r26 = virtualinvoke r12.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r26)
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r26) >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)]
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : if i3 >= i2
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i3 = i3 + 1] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i3 = i3 + 1
org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.stack.StackManager.parseExtensionDirectory : i1 = i1 + 1
