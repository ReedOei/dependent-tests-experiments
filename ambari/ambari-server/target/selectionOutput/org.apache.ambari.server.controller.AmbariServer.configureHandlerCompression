org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r4 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $z0 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: boolean isApiGzipped()>()
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $z0 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: boolean isApiGzipped()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : if $z0 == 0
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r2 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST>
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : return
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r2 = <javax.servlet.DispatcherType: javax.servlet.DispatcherType REQUEST> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r2)
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : r3 = virtualinvoke r1.<org.eclipse.jetty.servlet.ServletContextHandler: org.eclipse.jetty.servlet.FilterHolder addFilter(java.lang.Class,java.lang.String,java.util.EnumSet)>(class "org/eclipse/jetty/servlets/GzipFilter", "/*", $r5)
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : r3 = virtualinvoke r1.<org.eclipse.jetty.servlet.ServletContextHandler: org.eclipse.jetty.servlet.FilterHolder addFilter(java.lang.Class,java.lang.String,java.util.EnumSet)>(class "org/eclipse/jetty/servlets/GzipFilter", "/*", $r5) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("methods", "GET,POST,PUT,DELETE")
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("methods", "GET,POST,PUT,DELETE") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("excludePathPatterns", ".*(\\.woff|\\.ttf|\\.woff2|\\.eot|\\.svg)")
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("excludePathPatterns", ".*(\\.woff|\\.ttf|\\.woff2|\\.eot|\\.svg)") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("mimeTypes", "text/html,text/plain,text/xml,text/css,application/x-javascript,application/xml,application/x-www-form-urlencoded,application/javascript,application/json")
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("mimeTypes", "text/html,text/plain,text/xml,text/css,application/x-javascript,application/xml,application/x-www-form-urlencoded,application/javascript,application/json") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r6 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r6 = r0.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.lang.String getApiGzipMinSize()>()
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: java.lang.String getApiGzipMinSize()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("minGzipSize", $r7)
org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : virtualinvoke r3.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>("minGzipSize", $r7) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.configureHandlerCompression : return
