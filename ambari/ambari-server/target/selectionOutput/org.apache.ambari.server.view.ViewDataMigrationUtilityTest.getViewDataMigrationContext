org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r0 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("MyEntityClass", class "java/lang/Object") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/view/ViewDataMigrationContextImpl")
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/view/ViewDataMigrationContextImpl") >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r1 = (org.apache.ambari.server.view.ViewDataMigrationContextImpl) $r2
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : r1 = (org.apache.ambari.server.view.ViewDataMigrationContextImpl) $r2 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i2 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i2 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getOriginDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r6 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i3 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $i3 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: int getCurrentDataVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r9 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r11 = interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r13 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getOriginEntityClasses()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r13 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getOriginEntityClasses()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r15 = interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r17 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentEntityClasses()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r17 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentEntityClasses()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r21 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentInstanceDataByUser()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r21 = virtualinvoke r1.<org.apache.ambari.server.view.ViewDataMigrationContextImpl: java.util.Map getCurrentInstanceDataByUser()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r23 = new java.util.HashMap
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r23 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : specialinvoke $r23.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : specialinvoke $r23.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25[0] = r1
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : $r25[0] = r1 >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25)
org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25) >>>>>>>> org.apache.ambari.server.view.ViewDataMigrationUtilityTest.getViewDataMigrationContext : return r1
