org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r1 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> = $r1
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> = $r1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null == $r7
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null == $r7 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null == $r7 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : return
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : return
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r9 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List processing> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : return
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) $r10
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r3 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingService) $r10 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r12 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r12 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = (java.util.Map) $r13
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r4
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r14 = new java.util.LinkedHashMap
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if null != r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r18 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r18 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r5 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r5 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r19 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r6 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent) $r19
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r6 = (org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent) $r19 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r6 == null
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r6 == null >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r20 = r6.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : if r6 == null >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r22 = <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r22 = <org.apache.ambari.server.state.stack.UpgradePack: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r23 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r23 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r24 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r24 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $i0 = interfaceinvoke $r24.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $i0 = interfaceinvoke $r24.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("ProcessingService {} has null amongst it\'s values (total {} components)", $r23, $r25)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("ProcessingService {} has null amongst it\'s values (total {} components)", $r23, $r25) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r20 = r6.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r6)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r6) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= (branch)]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r14 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = $r14
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : r4 = $r14 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r15 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.Map m_process> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r16 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name>
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r16 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r4)
org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.initializeProcessingComponentMappings : $r18 = r3.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingService: java.util.List components>
