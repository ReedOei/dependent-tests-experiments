org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_groups") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r2 = (java.util.Collection) $r5
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r2 = (java.util.Collection) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if r2 == null
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r6 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r6 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : specialinvoke $r6.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("\'host_groups\' element must be included in cluster create body")
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : specialinvoke $r6.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("\'host_groups\' element must be included in cluster create body") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : throw $r6
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z0 == 0
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r6 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z1 == 0
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : return
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r4 = (java.util.Map) $r7
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : r4 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processHostGroup(java.util.Map)>(r4)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processHostGroup(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.parseHostGroupInfo : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
