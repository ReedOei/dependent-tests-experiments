org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r13 = $r12 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r14 = <org.apache.ambari.server.topology.ClusterTopologyImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r14 = <org.apache.ambari.server.topology.ClusterTopologyImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ")
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r17 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r17 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r19, r13)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r19, r13) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r20 = new java.lang.RuntimeException
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r20 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : throw $r20
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r2 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.String getHostGroupForHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r5 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r2 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.String getHostGroupForHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r5 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r3 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r2)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r5 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r3 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r6 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r3 = interfaceinvoke $r5.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r6 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r4 = interfaceinvoke r3.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r6)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r6 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r4 = interfaceinvoke r3.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r6) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r7 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : r4 = interfaceinvoke r3.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r6) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r7 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r8 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r7 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r8 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r9 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r8 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r9 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r9 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r10 = virtualinvoke $r8.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r10 = virtualinvoke $r8.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r11 = virtualinvoke $r7.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.RequestStatusResponse startHost(java.lang.String,java.lang.String,java.util.Collection,boolean)>(r1, $r10, r4, z0)
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r10 = virtualinvoke $r8.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r11 = virtualinvoke $r7.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.RequestStatusResponse startHost(java.lang.String,java.lang.String,java.util.Collection,boolean)>(r1, $r10, r4, z0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : return $r11
org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r11 = virtualinvoke $r7.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.RequestStatusResponse startHost(java.lang.String,java.lang.String,java.util.Collection,boolean)>(r1, $r10, r4, z0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.startHost : $r12 := @caughtexception
