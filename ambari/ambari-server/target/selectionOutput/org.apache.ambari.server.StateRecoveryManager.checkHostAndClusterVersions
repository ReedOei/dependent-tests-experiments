org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r7 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r1 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r1 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r20 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r20 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findAll()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r21 = virtualinvoke $r20.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r22 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r22 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : return
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r24 = (org.apache.ambari.server.orm.entities.ClusterVersionEntity) $r23
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r24 = (org.apache.ambari.server.orm.entities.ClusterVersionEntity) $r23 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r25 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r25 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r26 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r26 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z3 = virtualinvoke $r25.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r26)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z3 = virtualinvoke $r25.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z3 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z3 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z3 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r27)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r27) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28 = newarray (java.lang.Object)[4]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r29 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r29 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[0] = $r30
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[0] = $r30 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r31 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.ClusterEntity getClusterEntity()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r31 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.ClusterEntity getClusterEntity()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r32 = virtualinvoke $r31.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[1] = $r32
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[1] = $r32 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[2] = $r33
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[2] = $r33 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r34 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r34 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[3] = $r34
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28[3] = $r34 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of cluster version %s for cluster %s from %s to %s", $r28)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of cluster version %s for cluster %s from %s to %s", $r28) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r35 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r35 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r35.<org.slf4j.Logger: void warn(java.lang.String)>(r6)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r35.<org.slf4j.Logger: void warn(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r36 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r36 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r36.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.lang.Object merge(java.lang.Object)>(r24)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r36.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: java.lang.Object merge(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r3 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r8
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r3 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r8 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r4 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r4 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z1 = virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z1 = virtualinvoke $r9.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r10 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r10 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r10)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r10) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11 = newarray (java.lang.Object)[4]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r13 = virtualinvoke $r12.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r13 = virtualinvoke $r12.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[0] = $r13
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[0] = $r13 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[1] = $r14
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[1] = $r14 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r15 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r15 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[2] = $r15
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[2] = $r15 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r16 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r16 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[3] = $r16
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[3] = $r16 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of host version %s on host %s from %s to %s", $r11)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of host version %s on host %s from %s to %s", $r11) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r17 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r17 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>(r5)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r18 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r18 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r18.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r3)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r18.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
