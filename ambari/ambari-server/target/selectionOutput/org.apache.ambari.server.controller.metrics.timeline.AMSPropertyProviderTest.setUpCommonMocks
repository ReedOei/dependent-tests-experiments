org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariServer")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void mockStatic(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariServer") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r9 = staticinvoke <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r9 = staticinvoke <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r11 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r2 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r13
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r2 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r13 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r3 = (org.apache.ambari.server.state.Clusters) $r14
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r3 = (org.apache.ambari.server.state.Clusters) $r14 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r4 = (org.apache.ambari.server.state.Cluster) $r15
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r4 = (org.apache.ambari.server.state.Cluster) $r15 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ComponentInfo")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ComponentInfo") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r5 = (org.apache.ambari.server.state.ComponentInfo) $r16
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r5 = (org.apache.ambari.server.state.ComponentInfo) $r16 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r17 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r17 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.2")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : specialinvoke $r17.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>("HDP", "2.2") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r6 = $r17
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r6 = $r17 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r18 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r18 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : r7 = $r28 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : virtualinvoke r7.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r33 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r33 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r38 = (java.lang.String) $r37
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r38 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r40 = (java.lang.String) $r39
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r40 = (java.lang.String) $r39 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r42 = (java.lang.String) $r41
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r43 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getComponentToService(java.lang.String,java.lang.String,java.lang.String)>($r38, $r40, $r42)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r43 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getComponentToService(java.lang.String,java.lang.String,java.lang.String)>($r38, $r40, $r42) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r44 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r45 = interfaceinvoke $r44.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r48 = (java.lang.String) $r47
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r48 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r50 = (java.lang.String) $r49
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r50 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r52 = (java.lang.String) $r51
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r52 = (java.lang.String) $r51 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r54 = (java.lang.String) $r53
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r54 = (java.lang.String) $r53 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r55 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r48, $r50, $r52, $r54)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r55 = virtualinvoke r2.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r48, $r50, $r52, $r54) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r57 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r57 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r57.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r59 = virtualinvoke r5.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getTimelineAppid()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r59 = virtualinvoke r5.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getTimelineAppid()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r60 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r61 = interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[0] = r1
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[0] = r1 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[1] = r3
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[1] = r3 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[2] = r4
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[2] = r4 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[3] = r2
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[3] = r2 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[4] = r5
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r63[4] = r5 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r63)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r63) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r64 = newarray (java.lang.Object)[0]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r64 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void replayAll(java.lang.Object[])>($r64)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void replayAll(java.lang.Object[])>($r64) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : return
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r23 = (java.lang.String) $r22
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r23)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r24 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : goto [?= $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r28 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : goto [?= $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProviderTest.setUpCommonMocks : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
