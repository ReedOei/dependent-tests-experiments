org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r6 = staticinvoke <org.apache.ambari.server.actionmanager.Stage: java.lang.String getSafeHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r4 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : r4 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r7 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r7 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r8 != null
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r8 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r9 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r8 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r11 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r11 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r13 = (java.util.List) $r12
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r13 = (java.util.List) $r12 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r14 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r6, r4)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r14 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r6, r4) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r15 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r15 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r16 != null
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r16 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r17 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : if $r16 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r20 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r20 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r22 = (java.util.Map) $r21
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r22 = (java.util.Map) $r21 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r23 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>(r6, r4)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r23 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>(r6, r4) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r23) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : return
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r17 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r18 = new java.util.LinkedHashMap
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r18 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r18.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r18.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r18)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r18) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r20 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r9 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r5 = new java.util.ArrayList
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r5)
org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r5) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addExecutionCommandWrapper : $r11 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
