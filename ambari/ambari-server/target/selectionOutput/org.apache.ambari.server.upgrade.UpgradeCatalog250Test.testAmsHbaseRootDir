org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r3 = new org.apache.ambari.server.upgrade.UpgradeCatalog250Test$8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r3.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$8: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>(r0)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r3.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$8: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>(r0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r4 = $r3
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r4 = $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r13 = new org.easymock.EasyMockSupport
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r13 = new org.easymock.EasyMockSupport >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r13.<org.easymock.EasyMockSupport: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r13.<org.easymock.EasyMockSupport: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r5 = $r13
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r5 = $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r14 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Config")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r14 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Config") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r6 = (org.apache.ambari.server.state.Config) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r6 = (org.apache.ambari.server.state.Config) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r15 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Config")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r15 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Config") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r7 = (org.apache.ambari.server.state.Config) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r7 = (org.apache.ambari.server.state.Config) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r17 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16[0] = $r17
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16[0] = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16[1] = $r18
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r16[1] = $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r16)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r19 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r22 = new org.apache.ambari.server.upgrade.UpgradeCatalog250Test$9
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r22 = new org.apache.ambari.server.upgrade.UpgradeCatalog250Test$9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r22.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$9: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>(r0)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r22.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$9: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>(r0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r25 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r25 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r34 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r34 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r35 = interfaceinvoke $r34.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r35 = interfaceinvoke $r34.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r37 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r37 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r39 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r39 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r40 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r41 = interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43 = newarray (java.lang.Object)[4]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r44 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r44 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[0] = $r44
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[0] = $r44 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[1] = r6
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[1] = r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[2] = r7
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[2] = r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r45 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r45 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[3] = $r45
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r43[3] = $r45 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r43)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r43) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementControllerImpl")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementControllerImpl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r47 = interfaceinvoke $r46.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("createConfiguration")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r47 = interfaceinvoke $r46.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("createConfiguration") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r48 = newarray (java.lang.Class)[0]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r48 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r49 = interfaceinvoke $r47.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String,java.lang.Class[])>("getClusters", $r48)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r49 = interfaceinvoke $r47.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String,java.lang.Class[])>("getClusters", $r48) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r50 = interfaceinvoke $r49.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("createConfig")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r50 = interfaceinvoke $r49.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("createConfig") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r52 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.actionmanager.ActionManager actionManager>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r52 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.actionmanager.ActionManager actionManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[0] = $r52
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[0] = $r52 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[1] = $r53
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[1] = $r53 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r54 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r54 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[2] = $r54
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r51[2] = $r54 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r55 = interfaceinvoke $r50.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r51)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r55 = interfaceinvoke $r50.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r51) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r56 = interfaceinvoke $r55.<org.easymock.IMockBuilder: java.lang.Object createNiceMock()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r56 = interfaceinvoke $r55.<org.easymock.IMockBuilder: java.lang.Object createNiceMock()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r8 = (org.apache.ambari.server.controller.AmbariManagementControllerImpl) $r56
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r8 = (org.apache.ambari.server.controller.AmbariManagementControllerImpl) $r56 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r57 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "com/google/inject/Injector")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r57 = virtualinvoke r5.<org.easymock.EasyMockSupport: java.lang.Object createNiceMock(java.lang.Class)>(class "com/google/inject/Injector") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r9 = (com.google.inject.Injector) $r57
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r9 = (com.google.inject.Injector) $r57 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r10 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r10 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r58 = interfaceinvoke r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r58 = interfaceinvoke r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r62 = virtualinvoke r8.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r62 = virtualinvoke r8.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r64 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r64 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r68 = (org.apache.ambari.server.state.Cluster) $r67
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r68 = (org.apache.ambari.server.state.Cluster) $r67 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r69 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r10)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r71 = (java.util.Map) $r70
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r71 = (java.util.Map) $r70 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.String anyString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r73 = (java.util.Map) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r73 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r74 = virtualinvoke r8.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>($r68, $r69, $r71, $r72, $r73)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r74 = virtualinvoke r8.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>($r68, $r69, $r71, $r72, $r73) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r76 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Config config>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r76 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.Config config> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79[0] = r8
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79[0] = r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79[1] = r9
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r79[1] = r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r79)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r79) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r80 = new org.apache.ambari.server.upgrade.UpgradeCatalog250
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r80 = new org.apache.ambari.server.upgrade.UpgradeCatalog250 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r80.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void <init>(com.google.inject.Injector)>(r9)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : specialinvoke $r80.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void <init>(com.google.inject.Injector)>(r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : virtualinvoke $r80.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAMSConfigs()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : virtualinvoke $r80.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateAMSConfigs()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : virtualinvoke r5.<org.easymock.EasyMockSupport: void verifyAll()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : virtualinvoke r5.<org.easymock.EasyMockSupport: void verifyAll()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r81 = virtualinvoke r10.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r81 = virtualinvoke r10.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r12 = (java.util.Map) $r81
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : r12 = (java.util.Map) $r81 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r82 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r2, r12)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $r82 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r2, r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $z0 = interfaceinvoke $r82.<com.google.common.collect.MapDifference: boolean areEqual()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : $z0 = interfaceinvoke $r82.<com.google.common.collect.MapDifference: boolean areEqual()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.testAmsHbaseRootDir : return
