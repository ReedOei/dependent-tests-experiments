org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r3 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAmbariEvents> >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : r2 = (java.util.List) $r5
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : r2 = (java.util.List) $r5 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : if null != r2
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : if null != r2 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r6 = new java.util.ArrayList
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : if null != r2 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : return
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : r2 = $r6
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : r2 = $r6 >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r7 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAmbariEvents>
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r7 = r0.<org.apache.ambari.server.events.MockEventListener: java.util.Map m_receivedAmbariEvents> >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2)
org.apache.ambari.server.events.MockEventListener.onAmbariEvent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2) >>>>>>>> org.apache.ambari.server.events.MockEventListener.onAmbariEvent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1)
