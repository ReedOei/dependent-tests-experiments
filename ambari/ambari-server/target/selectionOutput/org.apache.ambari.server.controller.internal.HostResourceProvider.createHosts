org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Request: java.util.Set getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if r2 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r15 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r15 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String)>("Received a create host request with no associated property sets")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String)>("Received a create host request with no associated property sets") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r15 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r4 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r4 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r16 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r16.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r16.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r5 = $r16
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r5 = $r16 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r17 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r17 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r17.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r17.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r6 = $r17
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r6 = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r18 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r18 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r18.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r18.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r7 = $r18
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r7 = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r19 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r8 = $r19
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r8 = $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r9 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r9 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r20 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z4 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z4 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z4 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z7 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z7 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z7 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r34 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r47 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r47 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r47.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r47.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r48 = $r47
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r48 = $r47 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r49 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r49 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r49.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r49.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r50 = $r49
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r50 = $r49 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r51 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r51 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r51.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r51.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r52 = $r51
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r52 = $r51 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r53 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r53 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z10 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void updateHostWithClusterAndAttributes(java.util.Map,java.util.Map)>(r48, r50)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: void updateHostWithClusterAndAttributes(java.util.Map,java.util.Map)>(r48, r50) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r68 = interfaceinvoke r52.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r68 = interfaceinvoke r52.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z15 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z15 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z15 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r70 = (java.lang.String) $r69
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r70 = (java.lang.String) $r69 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r71 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r70)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r71 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r70) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke $r71.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke $r71.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z15 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z15 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z15 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r54 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r13 = (org.apache.ambari.server.controller.HostRequest) $r54
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r13 = (org.apache.ambari.server.controller.HostRequest) $r54 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r55 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r55 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r55 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r55 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r56 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r55 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r56 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z11 = virtualinvoke $r56.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z11 = virtualinvoke $r56.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z11 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r57 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r57 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r57 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r57 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r58 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r57 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r58 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z12 = virtualinvoke $r58.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z12 = virtualinvoke $r58.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z12 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r59 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r59 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r59.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r59.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r14 = $r59
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r14 = $r59 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r60 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r60 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r61 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r61 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r52.<java.util.Set: boolean add(java.lang.Object)>($r61)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r52.<java.util.Set: boolean add(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r62 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r62 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, r14)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, r14) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r64 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r64 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r64 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r64 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r65 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $r64 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r65 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r66 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r66 = virtualinvoke r13.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r66)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z10 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r35 = $r34
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r35 = $r34 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z8 = 1
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z8 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r36 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r36 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z9 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z9 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z9 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r41 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r41 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r42 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r42 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r42.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add unknown hosts to a cluster.  These hosts have not been registered with the server: ")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add unknown hosts to a cluster.  These hosts have not been registered with the server: ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r44 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r44 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : throw $r41
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r38 = (java.lang.String) $r37
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r38 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z8 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z8 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z8 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z9 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z9 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z9 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z8 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r23 = $r22
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r23 = $r22 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z5 = 1
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z5 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r24 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r24 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z6 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z6 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z6 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r28 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r28 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid request contains duplicate hostnames, hostnames=")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid request contains duplicate hostnames, hostnames=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r31 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r31 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : throw $r28
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r12 = (java.lang.String) $r25
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r12 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z5 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z5 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z5 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z6 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z6 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z6 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : z5 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r20 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r10 = (java.util.Map) $r20
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r10 = (java.util.Map) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.HostRequest getRequest(java.util.Map)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.HostRequest getRequest(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r21 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOSTGROUP_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $r21 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOSTGROUP_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z3 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHostResource(org.apache.ambari.server.state.Clusters,java.util.Set,java.util.Set,java.util.Set,org.apache.ambari.server.controller.HostRequest)>(r4, r5, r6, r7, r11)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHostResource(org.apache.ambari.server.state.Clusters,java.util.Set,java.util.Set,java.util.Set,org.apache.ambari.server.controller.HostRequest)>(r4, r5, r6, r7, r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHosts : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
