org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r2 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.orm.entities.RepositoryVersionEntity entity> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r9 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r3 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r3 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r9 == $r3
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r9 == $r3 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : return
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r9 == $r3 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r10 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r10 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r4 = virtualinvoke $r10.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>($r11)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r4 = virtualinvoke $r10.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStack(org.apache.ambari.server.state.StackId)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r18.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r18.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r5 = $r18
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r5 = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r19 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r19 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r20 = $r19.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r20 = $r19.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r21 = $r20.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r21 = $r20.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r21)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z7 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z7 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z7 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r29 = "No versions matched pattern %s"
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i3 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i3 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i3 <= 1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i3 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r41 = new java.util.HashSet
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i3 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r52 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r52 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r53 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r52
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r53 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r52 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setParent(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r53)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setParent(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r53) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : return
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r41 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r41.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r41.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r42 = $r41
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r42 = $r41 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r43 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r43 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z8 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r47 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r47 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r49 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r49 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48[0] = $r49
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48[0] = $r49 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r50 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r42, ", ")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r50 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r42, ", ") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48[1] = $r50
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48[1] = $r50 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("More than one repository matches patch %s: %s", $r48)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("More than one repository matches patch %s: %s", $r48) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r51)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r47
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r45 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r44
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r45 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r46 = virtualinvoke r45.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r46 = virtualinvoke r45.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r42.<java.util.Set: boolean add(java.lang.Object)>($r46)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r42.<java.util.Set: boolean add(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z8 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r29 = "No versions matched pattern %s" >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $b2 = 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $b2 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r38 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r38 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r39 = $r38.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r39 = $r38.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = $r39.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = $r39.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33[$b2] = $r37
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33[$b2] = $r37 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r29, $r33)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r29, $r33) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r30
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r36 = $r35.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r36 = $r35.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = $r36.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = $r36.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $r33[$b2] = $r37]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $r33[$b2] = $r37] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33[$b2] = $r37
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r7 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r22
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r7 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i0 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(45)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i0 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(45) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= -1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= -1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i1 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(45)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= -1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r23 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r26 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r26 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r27 = $r26.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r27 = $r26.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r28 = $r27.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r28 = $r27.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z5 = virtualinvoke r8.<java.lang.String: boolean matches(java.lang.String)>($r28)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z5 = virtualinvoke r8.<java.lang.String: boolean matches(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r23 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24 = $r23.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24 = $r23.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r25 = $r24.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r25 = $r24.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i1 = virtualinvoke r8.<java.lang.String: int lastIndexOf(int)>(45) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r12 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r14 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r14 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13[0] = $r14
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r15 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r15 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13[1] = $r16
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13[1] = $r16 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was uploaded, but there are no repositories for %s", $r13)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was uploaded, but there are no repositories for %s", $r13) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r12
