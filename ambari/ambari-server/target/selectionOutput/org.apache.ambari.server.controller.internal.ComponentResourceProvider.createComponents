org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r14 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r2 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r2 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r3 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r3 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r4 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ServiceComponentFactory getServiceComponentFactory()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r4 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ServiceComponentFactory getServiceComponentFactory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r18 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r5 = $r18
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r5 = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r19 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r6 = $r19
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r6 = $r19 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $i0 = interfaceinvoke r5.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $i0 = interfaceinvoke r5.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z11, "Invalid arguments, updates allowed on only one cluster at a time")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z11, "Invalid arguments, updates allowed on only one cluster at a time") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z12 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z12 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r70 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r76 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r76 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z13 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z13 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z13 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r77 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : return
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r77 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r78 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r77
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r78 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r77 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r79 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r79 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r80 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r79)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r80 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r79) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r81 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r81 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r82 = interfaceinvoke r80.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r81)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r82 = interfaceinvoke r80.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r83 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r83 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r84 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r82, $r83)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r84 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r82, $r83) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r85 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r85 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r85)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r86 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r86 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z14 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r86)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z14 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z14 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r87 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r89 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r89 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r89)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r89) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r90 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r90 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r90)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r91 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r95 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r95 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r97 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r97 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r98 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r98 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r99 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r99 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r13 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r96, $r97, $r98, $r99)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r13 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r96, $r97, $r98, $r99) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r13 != null
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r100 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>($z17)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>($z17) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r112 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r112 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r113 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r113 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z18 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z18 = virtualinvoke r13.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r114 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r114 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r112.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from stack definition:{}", $r113, $r114)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r112.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from stack definition:{}", $r113, $r114) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r82.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r84)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r82.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r84) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z13 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z13 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z13 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r100 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r101 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r101 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r101.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r101.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get component information from stack definition: Stack=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get component information from stack definition: Stack=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r103 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r103 = virtualinvoke r95.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Service=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r106 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r106 = interfaceinvoke r82.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Component=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Component=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r109 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r109 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r100.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r111)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r100.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r111) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r100
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r91 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : z16 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r91)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : z16 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>(z16)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>(z16) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r92 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r92 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r93 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r93 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z16)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r94 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z16) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r92.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from request: {}", $r93, $r94)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r92.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from request: {}", $r93, $r94) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= interfaceinvoke r82.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r84)]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= interfaceinvoke r82.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r84)] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r82.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r84)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r87 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r88 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r87)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r88 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>(r88)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r84.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>(r88) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r90 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r90 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r90 = virtualinvoke r78.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r70 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r71 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r71 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create one or more components which already exist:")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create one or more components which already exist:") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r73 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ",")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r73 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ",") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r70.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r75)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r70.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r70
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z11, "Invalid arguments, updates allowed on only one cluster at a time")]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z11, "Invalid arguments, updates allowed on only one cluster at a time")] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z11, "Invalid arguments, updates allowed on only one cluster at a time")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r8 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r20
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r8 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r21 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r21 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>($r21, "component name should be non-empty")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>($r21, "component name should be non-empty") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Cluster getClusterForRequest(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Clusters)>(r8, r2)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r9 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Cluster getClusterForRequest(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Clusters)>(r8, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: java.util.Set getRequiredCreateAuthorizations()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r22 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: java.util.Set getRequiredCreateAuthorizations()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void isAuthorized(org.apache.ambari.server.state.Cluster,java.util.Set)>(r9, $r22)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void isAuthorized(org.apache.ambari.server.state.Cluster,java.util.Set)>(r9, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void setServiceNameIfAbsent(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r8, r9, r3)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void setServiceNameIfAbsent(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r8, r9, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23[0] = r8
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23[0] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void debug(java.lang.String,java.lang.Object[])>("Received a createComponent request: {}", $r23)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void debug(java.lang.String,java.lang.Object[])>("Received a createComponent request: {}", $r23) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r24 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r24 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r25 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r28 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r28 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r29 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r29 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r10 = (java.util.Map) $r29
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r10 = (java.util.Map) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r30 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r30 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z3 = interfaceinvoke r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r31 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r34 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r34 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r35 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r35 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r36 = (java.util.Set) $r35
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r36 = (java.util.Set) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r37 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r37 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z4 = interfaceinvoke $r36.<java.util.Set: boolean contains(java.lang.Object)>($r37)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z4 = interfaceinvoke $r36.<java.util.Set: boolean contains(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r38 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r39 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r39 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r40 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r40 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r41 = (java.util.Set) $r40
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r41 = (java.util.Set) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r42 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r42 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>($r42)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r43 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r43 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z7 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r43)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z7 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r44 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r8, r9)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r8, r9) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r52 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r8, r9) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r55 = $r54 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r56 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r56 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r57 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r57 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r58 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r58 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r59 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r59 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r60 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r60 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z10 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidServiceComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r57, $r58, $r59, $r60)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z10 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidServiceComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r57, $r58, $r59, $r60) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z10 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r61 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r61 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r62 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r62 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid component in stack stackInfo=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid component in stack stackInfo=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r64 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r64 = virtualinvoke r56.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r67 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r67 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r61.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r69)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r61.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r61
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r52 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r52)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r52 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r12 == null
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= r56 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= r56 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r56 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r53)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r44 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r45 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r45 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r46 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r45)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r46 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r44 != $r46
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r44 != $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r44 != $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r47 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r49 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r49 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z8, $r51)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z8, $r51) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r11 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r8, r9)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r47 = new java.lang.StringBuilder]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r47 = new java.lang.StringBuilder] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r47 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r38 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r31 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r32 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r32)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r32) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r34 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r25 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r26 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r26 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r28 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r14 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : return
