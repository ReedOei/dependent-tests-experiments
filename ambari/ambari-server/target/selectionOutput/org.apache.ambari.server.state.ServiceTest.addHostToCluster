org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r5 = r0.<org.apache.ambari.server.state.ServiceTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r1)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r6 = r0.<org.apache.ambari.server.state.ServiceTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r6 = r0.<org.apache.ambari.server.state.ServiceTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : r3 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : r3 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipv4")
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipv4") >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setIPv4(java.lang.String)>($r10)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setIPv4(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipv6")
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ipv6") >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setIPv6(java.lang.String)>($r14)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setIPv6(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r15 = new java.util.HashMap
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ServiceTest.addHostToCluster : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : r4 = $r15
org.apache.ambari.server.state.ServiceTest.addHostToCluster : r4 = $r15 >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r4)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r18 = r0.<org.apache.ambari.server.state.ServiceTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.ServiceTest.addHostToCluster : $r18 = r0.<org.apache.ambari.server.state.ServiceTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.ServiceTest.addHostToCluster : interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.ServiceTest.addHostToCluster : return
