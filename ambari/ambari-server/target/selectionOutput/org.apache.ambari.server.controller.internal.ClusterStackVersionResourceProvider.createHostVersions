org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r7 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r7 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r12 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r12 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r8 = virtualinvoke $r12.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r6, r3, r4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r8 = virtualinvoke $r12.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r6, r3, r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if r8 != null
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, r7, r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if r8 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r9 = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r15 = new org.apache.ambari.server.controller.spi.SystemException
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r15 = new org.apache.ambari.server.controller.spi.SystemException >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16[0] = r4
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16[0] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16[1] = r6
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r16[1] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not create cluster stack version %s for cluster %s", $r16)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not create cluster stack version %s for cluster %s", $r16) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : specialinvoke $r15.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r9)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : specialinvoke $r15.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : throw $r15
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionHosts(org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r8, r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionHosts(org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r8, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r18 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r18 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z0 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r10 = (org.apache.ambari.server.state.Host) $r19
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r10 = (org.apache.ambari.server.state.Host) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $z1 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: boolean hasComponentsAdvertisingVersions(org.apache.ambari.server.state.StackId)>(r3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $z1 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: boolean hasComponentsAdvertisingVersions(org.apache.ambari.server.state.StackId)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z1 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r20 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : goto [?= $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : goto [?= $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r20 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: void transitionHostVersionToNotRequired(org.apache.ambari.server.state.Host,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r10, r1, $r20)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: void transitionHostVersionToNotRequired(org.apache.ambari.server.state.Host,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r10, r1, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : goto [?= $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, r7, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r13 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, r7, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r13 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r8 = virtualinvoke $r13.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r6, r3, r4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r13 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r8 = virtualinvoke $r13.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r6, r3, r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : goto [?= interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionHosts(org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r8, r5)]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : r8 = virtualinvoke $r13.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r6, r3, r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : goto [?= interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionHosts(org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r8, r5)] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void transitionHosts(org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>(r8, r5)
