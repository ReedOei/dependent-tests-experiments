org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r42
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r42 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r43
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r43 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r44
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r44 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r45
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r45 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r46
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r46 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r47
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r47 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r48
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r48 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r49
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r49 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r50
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r50 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarInputStream")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarInputStream") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r51
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r51 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarEntry")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarEntry") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r52
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r52 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "java/io/FileOutputStream")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "java/io/FileOutputStream") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r53
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r53 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r13 = $r54
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r13 = $r54 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r55)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r55) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r16 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r16 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r62 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r61)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r62 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r61) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l2 = 99L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l2 = 99L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r63 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r63 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r67.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r67.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r68 = $r67
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r68 = $r67 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r69.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r69.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r82.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r82.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r83 = $r82
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r83 = $r82 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r85.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r85.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r86 = $r85
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r86 = $r85 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r89 = virtualinvoke $r88.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r89 = virtualinvoke $r88.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r93 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r93 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke $r93.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke $r93.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z7 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z7 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z7 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r102.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r102.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i4 = virtualinvoke $r108.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i4 = virtualinvoke $r108.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r112 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r111)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r112 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = virtualinvoke $r114.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = virtualinvoke $r114.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r117 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r117 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r117)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r117) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r118.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r118.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = virtualinvoke $r120.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = virtualinvoke $r120.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r123)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128[0] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128[0] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke r3.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke $r134.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke $r134.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z9 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z9 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z9 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke $r148.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke $r148.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z11 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z11 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z11 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r157 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r157 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r159)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r159) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r162 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r162 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r162)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r162) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r164.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r164.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = interfaceinvoke $r163.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r164)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = interfaceinvoke $r163.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r164) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r8.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r8.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r203)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r203) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = interfaceinvoke $r204.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r205)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = interfaceinvoke $r204.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r205) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r210)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r210) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r213)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r213) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = interfaceinvoke $r214.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r215)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = interfaceinvoke $r214.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r215) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r218)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r218) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r220.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r220.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke $r219.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r220)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke $r219.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r220) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = virtualinvoke r7.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = virtualinvoke r7.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r223)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r223) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke $r224.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r225)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke $r224.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r225) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r228)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r228) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230[0] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230[0] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = interfaceinvoke $r229.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r230)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = interfaceinvoke $r229.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r230) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r231.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r231.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r235.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r235.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r236 = interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r236 = interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r236.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r236.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r238.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r238.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r239)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r239) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r241 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r241 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r241)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r241) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r22 = (org.apache.ambari.server.state.Cluster) $r244
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r22 = (org.apache.ambari.server.state.Cluster) $r244 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r23 = (org.apache.ambari.server.state.Service) $r245
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r23 = (org.apache.ambari.server.state.Service) $r245 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceEntity")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceEntity") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r246
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r246 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceDataEntity")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceDataEntity") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r26 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r247
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r26 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r247 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r250 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r250 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r250.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r250.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r254 = interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r254 = interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r254.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r254.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r256.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r256.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = $r256
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = $r256 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r259.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r259.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = $r259
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = $r259 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r260 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r295 = interfaceinvoke $r294.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r295 = interfaceinvoke $r294.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r295)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r295) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r297.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r297.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r296.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r297)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r296.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r297) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = newarray (java.lang.Object)[19] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r305 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r305 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[0] = $r305
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[0] = $r305 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[13] = $r306
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[13] = $r306 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[14] = $r307
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[14] = $r307 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[15] = $r308
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[15] = $r308 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r309 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r309 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[16] = $r309
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[16] = $r309 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[17] = r22
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[17] = r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[18] = r24
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[18] = r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r304)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r304) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r310.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r62, r68, r83, r86, z0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r310.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r62, r68, r83, r86, z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r311 = $r310
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r311 = $r310 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r313 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r313 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r314 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r314 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r315 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r315 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r316 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r316 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r317 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r317 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r318 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r318 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r34 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r312, $r313, $r314, $r315, $r316, $r317, $r318, $r30, $r31, null, r311, $r32, $r33)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r34 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r312, $r313, $r314, $r315, $r316, $r317, $r318, $r30, $r31, null, r311, $r32, $r33) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l10 + 10000L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l10 + 10000L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z20 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z20 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r35 == null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z20 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : b1 = $b13
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : b1 = $b13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r35)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r35)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r321, $r322)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r321, $r322) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r36 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getInstanceDefinitions(org.apache.ambari.server.orm.entities.ViewEntity)>(r35)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r36 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getInstanceDefinitions(org.apache.ambari.server.orm.entities.ViewEntity)>(r35) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = new java.util.ArrayList
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r323 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r323.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r323.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r37 = $r323
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r37 = $r323 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l14 = (long) b1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l14 = (long) b1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = interfaceinvoke r36.<java.util.Collection: int size()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i15 = interfaceinvoke r36.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l16 = (long) $i15
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l16 = (long) $i15 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l14, $l16)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l14, $l16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = virtualinvoke r25.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r38 = interfaceinvoke r36.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r38 = interfaceinvoke r36.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z23 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z23 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z23 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = virtualinvoke r37.<java.util.ArrayList: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r328 = virtualinvoke r37.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r329 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z26 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338 = newarray (java.lang.Object)[16]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338 = newarray (java.lang.Object)[16] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r339 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r339 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[0] = $r339
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[0] = $r339 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r340 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r340 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[13] = $r340
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[13] = $r340 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r341 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r341 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[14] = $r341
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[14] = $r341 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r342 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r342 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[15] = $r342
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338[15] = $r342 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r338)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r338) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : return
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r329 = interfaceinvoke r328.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r330 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r329
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r330 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r329 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r331 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r331 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r332 = virtualinvoke $r331.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r332 = virtualinvoke $r331.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("v1", $r332)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("v1", $r332) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r40 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection getEntities()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r40 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection getEntities()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = interfaceinvoke r40.<java.util.Collection: int size()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i17 = interfaceinvoke r40.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l18 = (long) $i17
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l18 = (long) $i17 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r333 = interfaceinvoke r40.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r333 = interfaceinvoke r40.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r334 = interfaceinvoke $r333.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r334 = interfaceinvoke $r333.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r41 = (org.apache.ambari.server.orm.entities.ViewEntityEntity) $r334
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r41 = (org.apache.ambari.server.orm.entities.ViewEntityEntity) $r334 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r335 = virtualinvoke r41.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long getId()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r335 = virtualinvoke r41.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l19 = virtualinvoke $r335.<java.lang.Long: long longValue()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l19 = virtualinvoke $r335.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(99L, $l19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(99L, $l19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r336 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r336 = virtualinvoke r330.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r337 = virtualinvoke r41.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String getViewInstanceName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r337 = virtualinvoke r41.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String getViewInstanceName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r336, $r337)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r336, $r337) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z26 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z26 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z26 = interfaceinvoke r328.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r326 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r39 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r326
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r39 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r326 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r327 = virtualinvoke r39.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z24 = virtualinvoke $r327.<java.lang.String: boolean equals(java.lang.Object)>("AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z24 = virtualinvoke $r327.<java.lang.String: boolean equals(java.lang.Object)>("AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z24 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z24 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r39)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z24 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r39) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z23 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r324 = virtualinvoke r25.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0", "AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r325 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewInstanceEntity getInstanceDefinition(java.lang.String,java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0", "AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r324, $r325)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r324, $r325) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r38 = interfaceinvoke r36.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z22 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z22) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r338 = newarray (java.lang.Object)[16]]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r338 = newarray (java.lang.Object)[16]] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r338 = newarray (java.lang.Object)[16]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= b1 = $b13]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= b1 = $b13] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : b1 = $b13
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r35 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r319 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r35 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b12 = $l11 cmp l0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b12 = $l11 cmp l0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b12 >= 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b12 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b12 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r319 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r319.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r320)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r319.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r320) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z21 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z21 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z21 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r299 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = virtualinvoke $r299.<org.apache.ambari.server.orm.dao.ViewDAO: java.util.List findAll()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r300 = virtualinvoke $r299.<org.apache.ambari.server.orm.dao.ViewDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r301 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r300)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r301 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r300) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r302 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r302 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r301.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r302)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r301.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r302) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r260 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r260.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r260.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r29 = $r260
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r29 = $r260 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r261 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r261 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r262 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r261)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r262 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r261) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r263 = interfaceinvoke $r262.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r263 = interfaceinvoke $r262.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r263.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r263.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r265 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r265 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r266 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r265)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r266 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r265) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r267 = interfaceinvoke $r266.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r267 = interfaceinvoke $r266.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r28) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r267.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r267.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r269 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r269 = interfaceinvoke r22.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r270 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r269)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r270 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r269) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = interfaceinvoke $r270.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r271 = interfaceinvoke $r270.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r27) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r271.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r271.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c1", r22)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("c1", r22) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r274 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = interfaceinvoke $r274.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r275 = interfaceinvoke $r274.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r276 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r275)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r276 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r275) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r276.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r29)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r276.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r29) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r278 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r279 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r25)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r279 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r25) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r279
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r280 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r279 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = virtualinvoke $r278.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity merge(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>($r280)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r281 = virtualinvoke $r278.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity merge(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>($r280) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r281)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r282 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r281) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r283 = interfaceinvoke $r282.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r283 = interfaceinvoke $r282.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r283.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r283.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r285 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = virtualinvoke $r285.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByName(java.lang.String,java.lang.String)>("MY_VIEW{1.0.0}", "AUTO-INSTANCE")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r286 = virtualinvoke $r285.<org.apache.ambari.server.orm.dao.ViewInstanceDAO: org.apache.ambari.server.orm.entities.ViewInstanceEntity findByName(java.lang.String,java.lang.String)>("MY_VIEW{1.0.0}", "AUTO-INSTANCE") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r287 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r286) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r288 = interfaceinvoke $r287.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r288.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r288.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r290 = virtualinvoke r24.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r290)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r291 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r290) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = interfaceinvoke $r291.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r26)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r292 = interfaceinvoke $r291.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r26) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r292.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r292.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r176 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r175)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r176 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r175) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r176.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r176.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r178)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r178) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r183 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r183 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = (byte[]) $r185
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = (byte[]) $r185 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i6 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r186)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i6 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r186) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r187)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r187) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r188.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r189)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r188.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r189) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = (byte[]) $r191
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = (byte[]) $r191 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r192)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r192) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r193)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r193) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r195)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r195) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = (byte[]) $r197
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = (byte[]) $r197 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i8 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i8 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r198, $i8, $i9)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r198, $i8, $i9) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = virtualinvoke $r199.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = virtualinvoke $r199.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r149 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r150 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r149) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r151 = interfaceinvoke $r150.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r135 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z10 = virtualinvoke r4.<java.io.File: boolean exists()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z10 = virtualinvoke r4.<java.io.File: boolean exists()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r94 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r95 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r94) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r96 = interfaceinvoke $r95.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("\\var\\lib\\ambari-server\\resources\\views\\work\\MY_VIEW{1.0.0}\\META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r82 = new java.util.HashMap]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $r82 = new java.util.HashMap] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r64
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r64 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r65 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r65 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r65.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r65.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = $r65
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = $r65 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r66)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r66) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r20.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r21)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r20.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r21) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r56
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r56 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r57.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r57.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = $r57
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = $r57 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = new org.apache.ambari.server.orm.entities.ViewEntityEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = new org.apache.ambari.server.orm.entities.ViewEntityEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r58.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r58.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = $r58
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = $r58 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r59)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r59) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r60 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r60 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r60)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>(r19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>(r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>(r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
