org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r9 = r0.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r5 = virtualinvoke $r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r5 = virtualinvoke $r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r10 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r10 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r6 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r20 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r20 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There were no suitable upgrade packs for stack ")
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There were no suitable upgrade packs for stack ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r30 = ""
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r30 = "" >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r32)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : throw $r20
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and upgrade type ")
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and upgrade type ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r7 = (org.apache.ambari.server.state.stack.UpgradePack) $r11
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r7 = (org.apache.ambari.server.state.stack.UpgradePack) $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r8 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getName()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : r8 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r12 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r13 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTarget()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r13 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTarget()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r13)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r14 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z2 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: boolean canBeApplied(java.lang.String)>(r3)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z2 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: boolean canBeApplied(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : return r8
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r14 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade pack ")
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade pack ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is corrupted, it should contain <target> node")
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is corrupted, it should contain <target> node") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r19)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r12 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $r12 == r4
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $r12 == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : if $r12 == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $r13 = virtualinvoke r7.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTarget()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getUpgradePackageName : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
