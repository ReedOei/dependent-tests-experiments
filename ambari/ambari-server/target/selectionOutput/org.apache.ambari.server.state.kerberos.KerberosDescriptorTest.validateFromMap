org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r13 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("realm") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = (java.lang.String) $r13
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r14)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("EXAMPLE.COM", $r14) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r15 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("some.property") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = (java.lang.String) $r15
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r16)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("Hello World", $r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Set getAuthToLocalProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i1 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r17 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = (java.lang.String) $r18
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r19)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("global.name.rules", $r19) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i2 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r20 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r4 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r33 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r33)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r33.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i6 = interfaceinvoke r33.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r34 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r34 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r34
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r35 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r34 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r35.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r36 = virtualinvoke r35.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r37 = virtualinvoke r35.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r37 = virtualinvoke r35.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r37)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("cluster-conf", $r37) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r36) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r36.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i7 = interfaceinvoke r36.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i7)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r38 = interfaceinvoke r36.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r38 = interfaceinvoke r36.<java.util.Map: java.lang.Object get(java.lang.Object)>("property1") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r39 = (java.lang.String) $r38
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r39)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("red", $r39) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : return
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r21 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r21
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r5 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) $r21 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r6 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor getComponent(java.lang.String)>("A_DIFFERENT_COMPONENT_NAME") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r7 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r7 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(1, null) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r8 = null
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r8 = null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r7)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i3 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i3)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r8)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r25 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r25 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: java.util.List getIdentities(boolean,java.util.Map)>(0, null) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r25)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r25.<java.util.List: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i4 = interfaceinvoke r25.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i4)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r26 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r26 = virtualinvoke r6.<org.apache.ambari.server.state.kerberos.KerberosComponentDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared_identity") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r26)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r26) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r11 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor getIdentity(java.lang.String)>("shared") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r11)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = virtualinvoke r26.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r27 = virtualinvoke r26.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r28 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor getKeytabDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r27, $r28) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r29 = virtualinvoke r11.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r29 = virtualinvoke r11.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor getPrincipalDescriptor()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r12 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r12 = virtualinvoke r5.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getConfigurations(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r12)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r12.<java.util.Map: int size()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $i5 = interfaceinvoke r12.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i5)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r31 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r31 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("service-site") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r31)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r32 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf")
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r32 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-conf") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r32)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r22 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r10 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r22
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r10 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r22 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = "/shared"
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r23 = "/shared" >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = virtualinvoke r10.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $r24 = virtualinvoke r10.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getReference()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24)
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r8 = r10
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : r8 = r10 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r8)]
org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : goto [?= staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r8)] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptorTest.validateFromMap : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r8)
