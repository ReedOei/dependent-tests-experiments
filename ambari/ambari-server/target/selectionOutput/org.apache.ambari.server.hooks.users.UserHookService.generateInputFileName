org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r3 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r3[0] = $r4
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r3[0] = $r4 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("user_hook_input_%s.csv", $r3)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("user_hook_input_%s.csv", $r3) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r5 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r5 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command input file name: {}", r2)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command input file name: {}", r2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r7 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r7 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerTempDir()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r10 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r10 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.generateInputFileName : return $r13
