org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r7 = "h1" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r14 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r8 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r8 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r16 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r16 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r17 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r9 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r9 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r18 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r10 = $r18
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r10 = $r18 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r21 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r21.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r11)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r23)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r23) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r24.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r3)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r26 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r26 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r26)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r26) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r27 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r27)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r27) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r28)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r28) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r29)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r29) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r30 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r30 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r30.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, r6)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r30.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r32 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r32 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r5, r6, "admin", $r32)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r5, r6, "admin", $r32) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r5, r6, $r33)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r5, r6, $r33) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r34 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r34 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r12 = $r34
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r12 = $r34 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r35 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r35 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r36 = virtualinvoke $r35.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r36 = virtualinvoke $r35.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r36)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r36) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r38 = virtualinvoke $r37.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r38 = virtualinvoke $r37.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r38)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r38) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r39 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r39 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r39)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r39) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r40 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r40 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r40.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r12)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r40.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r41 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r41 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r42 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r42 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r43 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r43 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r41, $r42, $r43)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r41, $r42, $r43) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r44 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r44 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r44.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : specialinvoke $r44.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r13 = $r44
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : r13 = $r44 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r45 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r45 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r46 = virtualinvoke $r45.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r46 = virtualinvoke $r45.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r46)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r46) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r47 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r47 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r48 = virtualinvoke $r47.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, r6)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r48 = virtualinvoke $r47.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r5, r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r48)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r48) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r49 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r49 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r49)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r49) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r50 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : $r50 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r50.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r13)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : virtualinvoke $r50.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r13) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeTwoUpgradesWhereLastDidNotComplete : return
