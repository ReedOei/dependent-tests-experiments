org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r5 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r2 = virtualinvoke $r5.<org.apache.ambari.server.orm.dao.HostRoleCommandDAO: java.util.List findByPKs(java.util.Collection)>(r1)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r2 = virtualinvoke $r5.<org.apache.ambari.server.orm.dao.HostRoleCommandDAO: java.util.List findByPKs(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z0 == 0
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z1 != 0
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z1 != 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r11 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : if $z1 != 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r13 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: com.google.common.cache.Cache hostRoleCommandCache>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r13 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: com.google.common.cache.Cache hostRoleCommandCache> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : interfaceinvoke $r13.<com.google.common.cache.Cache: void invalidateAll(java.lang.Iterable)>(r1)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : interfaceinvoke $r13.<com.google.common.cache.Cache: void invalidateAll(java.lang.Iterable)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : return
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r11 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke $r11.<org.apache.ambari.server.orm.dao.HostRoleCommandDAO: java.util.List mergeAll(java.util.Collection)>(r2)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke $r11.<org.apache.ambari.server.orm.dao.HostRoleCommandDAO: java.util.List mergeAll(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r13 = r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: com.google.common.cache.Cache hostRoleCommandCache>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r4 = (org.apache.ambari.server.orm.entities.HostRoleCommandEntity) $r6
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : r4 = (org.apache.ambari.server.orm.entities.HostRoleCommandEntity) $r6 >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r7 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus PENDING>
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r7 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus PENDING> >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r7)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setStatus(org.apache.ambari.server.actionmanager.HostRoleStatus)>($r7) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setStartTime(java.lang.Long)>($r8)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setStartTime(java.lang.Long)>($r8) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setEndTime(java.lang.Long)>($r9)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: void setEndTime(java.lang.Long)>($r9) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: java.lang.Long getRequestId()>()
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $r10 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.HostRoleCommandEntity: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : specialinvoke r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: void auditLog(org.apache.ambari.server.orm.entities.HostRoleCommandEntity,java.lang.Long)>(r4, $r10)
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : specialinvoke r0.<org.apache.ambari.server.actionmanager.ActionDBAccessorImpl: void auditLog(org.apache.ambari.server.orm.entities.HostRoleCommandEntity,java.lang.Long)>(r4, $r10) >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.actionmanager.ActionDBAccessorImpl.resubmitTasks : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
