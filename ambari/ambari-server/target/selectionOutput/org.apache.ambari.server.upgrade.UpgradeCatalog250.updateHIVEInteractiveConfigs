org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r9 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r9 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r10
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-interactive-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-interactive-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.tez.container.size", "SET_ON_FIRST_INVOCATION")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.tez.container.size", "SET_ON_FIRST_INVOCATION") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.auto.convert.join.noconditionaltask.size", "1000000000")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.auto.convert.join.noconditionaltask.size", "1000000000") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r12, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r12, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r13 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.execution.mode", "only")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : $r13 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("hive.llap.execution.mode", "only") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r13, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("hive-interactive-site", $r13, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHIVEInteractiveConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
