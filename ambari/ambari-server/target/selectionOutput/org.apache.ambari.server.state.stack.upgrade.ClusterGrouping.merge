org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r7 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $r7 != null
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $r7 != null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r2 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $r7 != null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r8 = new java.util.HashMap
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r3 = $r8
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : return
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r9
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z2 = r4 instanceof org.apache.ambari.server.state.stack.upgrade.ClusterGrouping
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z2 = r4 instanceof org.apache.ambari.server.state.stack.upgrade.ClusterGrouping >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z2 != 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r5 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping) r4
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r5 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping) r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r18 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r18 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r19 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r19 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : z0 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: boolean addGroupingStages(java.util.List,java.lang.String)>($r18, $r19)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : z0 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: boolean addGroupingStages(java.util.List,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if z0 == 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r20 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r21 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r21 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r21)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r22 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r25 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r25 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r26 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r26 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r22 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r23 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r23 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r6 = (java.util.List) $r23
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r6 = (java.util.List) $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r24 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r24 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r24)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r24) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r20 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: void addSkippedStages(java.util.Map,java.util.List)>(r3, $r20)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: void addSkippedStages(java.util.Map,java.util.List)>(r3, $r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid group type ")
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid group type ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected cluster group")
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected cluster group") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : throw $r10
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> = $r2
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> = $r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping.merge : $r8 = new java.util.HashMap
