org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProviderTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Host") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r7 = (org.apache.ambari.server.state.Host) $r12
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r7 = (org.apache.ambari.server.state.Host) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r13 = new org.apache.ambari.server.state.HostHealthStatus
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r13 = new org.apache.ambari.server.state.HostHealthStatus >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r8 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r8 = <org.apache.ambari.server.state.HostHealthStatus$HealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus HEALTHY> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : specialinvoke $r13.<org.apache.ambari.server.state.HostHealthStatus: void <init>(org.apache.ambari.server.state.HostHealthStatus$HealthStatus,java.lang.String)>($r8, "")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : specialinvoke $r13.<org.apache.ambari.server.state.HostHealthStatus: void <init>(org.apache.ambari.server.state.HostHealthStatus$HealthStatus,java.lang.String)>($r8, "") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r9 = $r13
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r9 = $r13 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r14 = new org.apache.ambari.server.controller.HostResponse
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r14 = new org.apache.ambari.server.controller.HostResponse >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : specialinvoke $r14.<org.apache.ambari.server.controller.HostResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,long,long,java.util.List,long,long,java.lang.String,java.util.Map,org.apache.ambari.server.state.AgentVersion,org.apache.ambari.server.state.HostHealthStatus,java.lang.String,java.lang.String)>(r1, r2, null, null, 1, 1, null, "centos6", null, 1024L, 1024L, null, 1L, 1L, null, null, null, r9, "HEALTHY", r4)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : specialinvoke $r14.<org.apache.ambari.server.controller.HostResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,long,long,java.util.List,long,long,java.lang.String,java.util.Map,org.apache.ambari.server.state.AgentVersion,org.apache.ambari.server.state.HostHealthStatus,java.lang.String,java.lang.String)>(r1, r2, null, null, 1, 1, null, "centos6", null, 1024L, 1024L, null, 1L, 1L, null, null, null, r9, "HEALTHY", r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r10 = $r14
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r10 = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : virtualinvoke r10.<org.apache.ambari.server.controller.HostResponse: void setRecoverySummary(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : virtualinvoke r10.<org.apache.ambari.server.controller.HostResponse: void setRecoverySummary(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : virtualinvoke r10.<org.apache.ambari.server.controller.HostResponse: void setRecoveryReport(org.apache.ambari.server.agent.RecoveryReport)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : virtualinvoke r10.<org.apache.ambari.server.controller.HostResponse: void setRecoveryReport(org.apache.ambari.server.agent.RecoveryReport)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.controller.HostResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : r11 = $r27 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r28 = virtualinvoke r11.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r28 = virtualinvoke r11.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r28)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r33 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r34 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("rackInfo")
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r35 = interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("rackInfo") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r38 = (java.lang.String) $r37
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r38 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke r7.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke r7.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r39 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : return r7
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r20 = (org.apache.ambari.server.state.Cluster) $r19
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r20 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r20 = (org.apache.ambari.server.state.Cluster) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r22 = (java.util.Map) $r21
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r22 = (java.util.Map) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r23 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>($r20, $r22)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r22 = (java.util.Map) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r23 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>($r20, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r23 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.util.Map getDesiredHostConfigs(org.apache.ambari.server.state.Cluster,java.util.Map)>($r20, $r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r25 = interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : goto [?= $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()]
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r27 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : goto [?= $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createMockHost : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
