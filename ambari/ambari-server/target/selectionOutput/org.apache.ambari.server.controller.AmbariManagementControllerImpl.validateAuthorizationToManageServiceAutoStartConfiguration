org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r4 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r5 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r5 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r4, $r6, $r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r4, $r6, $r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z0 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r7 = "cluster-env"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r7 = "cluster-env" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z2 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("recovery_enabled")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $z2 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("recovery_enabled") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r8 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : $r8 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : specialinvoke $r8.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to set service user and groups")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : specialinvoke $r8.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to set service user and groups") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToManageServiceAutoStartConfiguration : throw $r8
