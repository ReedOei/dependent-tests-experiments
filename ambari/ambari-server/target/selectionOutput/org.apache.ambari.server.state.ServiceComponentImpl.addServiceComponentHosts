org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z0 == 0
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z2 == 0
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : return
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r14
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r15 = (org.apache.ambari.server.state.ServiceComponentHost) $r14 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r15)
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : virtualinvoke r0.<org.apache.ambari.server.state.ServiceComponentImpl: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r15) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : goto [?= $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : goto [?= $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r3 = (java.util.Map$Entry) $r5
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : r3 = (java.util.Map$Entry) $r5 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r7 = (java.lang.String) $r6
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r9 = (org.apache.ambari.server.state.ServiceComponentHost) $r8
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r9 = (org.apache.ambari.server.state.ServiceComponentHost) $r8 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10)
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z1 != 0
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r11 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : $r11 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments in map, hostname does not match the key in map")
org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments in map, hostname does not match the key in map") >>>>>>>> org.apache.ambari.server.state.ServiceComponentImpl.addServiceComponentHosts : throw $r11
