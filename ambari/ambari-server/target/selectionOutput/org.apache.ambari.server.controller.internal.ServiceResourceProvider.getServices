org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r10 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r10 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r10 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r12 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r12 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r12.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments, cluster name cannot be null")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r12.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Invalid arguments, cluster name cannot be null") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r12
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z0 = virtualinvoke $r11.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z0 = virtualinvoke $r11.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r12 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r2 = interfaceinvoke $r13.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r2 = interfaceinvoke $r13.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r5 = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r15 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r15 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r15.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", r5)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r15.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Cluster resource doesn\'t exist", r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r15
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $r16 = new java.util.HashSet]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r4 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r14 := @caughtexception
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $r16 = new java.util.HashSet] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r16 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r16.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r16.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r17 = $r16
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r17 = $r16 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r18 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r18 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r19 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r18 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z2 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z2 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r7 = null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r7 = null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r21 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r21 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $r21 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r8 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r8 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r31 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : return r17
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r31 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r9 = (org.apache.ambari.server.state.Service) $r31
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r9 = (org.apache.ambari.server.state.Service) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z2 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r33 = interfaceinvoke r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r33 = interfaceinvoke r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke r17.<java.util.Set: boolean add(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke r17.<java.util.Set: boolean add(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r32 = interfaceinvoke r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r7 == $r32
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r7 == $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if r7 == $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r33 = interfaceinvoke r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z3 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z3 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r7 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r23)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r7 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z4 = virtualinvoke r7.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $z4 = virtualinvoke r7.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z4 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r24 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z2 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : z2 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r29 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r24 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r25 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : throw $r24
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r19 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke r17.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : interfaceinvoke r17.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.getServices : return r17
