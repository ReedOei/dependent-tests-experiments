org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r2 = staticinvoke <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : if $r2 != null
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : if $r2 != null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : return
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : if $r2 != null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>()
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : r3 = $r5
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : r3 = $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : entermonitor $r5
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r6 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : r4 = $r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : r4 = $r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : throw r4
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r6 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r6 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Hearbeat for host {} lost thus removing it from available hosts.", $r7)
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Hearbeat for host {} lost thus removing it from available hosts.", $r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Hearbeat for host {} lost thus removing it from available hosts.", $r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r8 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : $r9 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostHeartBeatLost : return
