org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r21 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r21 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r21 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r21 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r22 = interfaceinvoke r21.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r21 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r28 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r28 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r29 = interfaceinvoke r28.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r28 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r54 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r54 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r54 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r54 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r55 = interfaceinvoke r54.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if r54 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r55 = interfaceinvoke r54.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r56 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r56 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r56.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r56.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r11 = $r56
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r11 = $r56 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r57 = interfaceinvoke r55.<java.util.Map: java.lang.Object get(java.lang.Object)>("zookeeper.session.timeout.localHBaseCluster")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r57 = interfaceinvoke r55.<java.util.Map: java.lang.Object get(java.lang.Object)>("zookeeper.session.timeout.localHBaseCluster") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r12 = (java.lang.String) $r57
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r12 = (java.lang.String) $r57 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r58 = "20000"
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r58 = "20000" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z4 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>(r12)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z4 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper.session.timeout.localHBaseCluster", "120000")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z5 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z5 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z5 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r60 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z5 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z6 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.period")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z6 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.period") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z6 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r63 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z7 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.master.normalizer.class")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z7 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.master.normalizer.class") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z7 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z7 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r66 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z7 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r66 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r66.<org.slf4j.Logger: void info(java.lang.String)>("Updating hbase.master.normalizer.class")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r66.<org.slf4j.Logger: void info(java.lang.String)>("Updating hbase.master.normalizer.class") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.master.normalizer.class", "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.master.normalizer.class", "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r63 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r63.<org.slf4j.Logger: void info(java.lang.String)>("Updating hbase.normalizer.period")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r63.<org.slf4j.Logger: void info(java.lang.String)>("Updating hbase.normalizer.period") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(600000)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(600000) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.period", $r64)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.period", $r64) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z7 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.master.normalizer.class")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r60 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r60.<org.slf4j.Logger: void info(java.lang.String)>("Enabling hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r60.<org.slf4j.Logger: void info(java.lang.String)>("Enabling hbase.normalizer.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.enabled", $r61)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.normalizer.enabled", $r61) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z6 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.period")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zookeeper.session.timeout.localHBaseCluster", "120000") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z5 = interfaceinvoke r55.<java.util.Map: boolean containsKey(java.lang.Object)>("hbase.normalizer.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r29 = interfaceinvoke r28.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r30 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r30 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r30.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r30.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r31 = $r30
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r31 = $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z2 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.service.default.result.limit")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z2 = interfaceinvoke r29.<java.util.Map: boolean containsKey(java.lang.Object)>("timeline.metrics.service.default.result.limit") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r32 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.default.result.limit")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(120)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(120) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.interval", $r38)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.interval", $r38) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.minute.interval", $r40)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.minute.interval", $r40) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r42 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r42 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(300) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.host.aggregator.minute.interval", $r42)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.host.aggregator.minute.interval", $r42) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2592000)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2592000) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl", $r44)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.ttl", $r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r46 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(7776000)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r46 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(7776000) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.minute.ttl", $r46)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.minute.ttl", $r46) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r48 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r48 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier", $r48)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier", $r48) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r50 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r50 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.disabled", $r50)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.cluster.aggregator.second.disabled", $r50) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r52 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.hbase.fifo.compaction.enabled", $r52)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.hbase.fifo.compaction.enabled", $r52) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r31, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-site", r31, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r54 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r32 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.default.result.limit") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r33 = (java.lang.String) $r32
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(5760)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(5760) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z3 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $z3 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r35 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(120)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r35 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>("Updating timeline.metrics.service.default.result.limit to 15840")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>("Updating timeline.metrics.service.default.result.limit to 15840") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(15840)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(15840) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.service.default.result.limit", $r36)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeline.metrics.service.default.result.limit", $r36) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(120)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r22 = interfaceinvoke r21.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r23 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r23 = interfaceinvoke r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r24 = (java.lang.String) $r23
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r25 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r25 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r25.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r25.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r10 = $r25
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r10 = $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r26 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.lang.String updateAmsEnvContent(java.lang.String)>(r24)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r26 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.lang.String updateAmsEnvContent(java.lang.String)>(r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r26)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r26) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-env", r10, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-env", r10, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r17 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r17 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r8 = (java.lang.String) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r8 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r18 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r9 = $r18
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r9 = $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r19 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.lang.String updateAmsHbaseEnvContent(java.lang.String)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : $r19 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.lang.String updateAmsHbaseEnvContent(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-env", r9, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateAMSConfigs : r21 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env")
