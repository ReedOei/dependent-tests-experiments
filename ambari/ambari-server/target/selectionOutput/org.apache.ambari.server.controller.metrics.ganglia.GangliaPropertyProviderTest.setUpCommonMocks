org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r6
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r6 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r7 = class "org/apache/ambari/server/controller/AmbariServer"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r7 = class "org/apache/ambari/server/controller/AmbariServer" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusterController")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("clusterController") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r2.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r1)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r2.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(null, r1) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r3 = (org.apache.ambari.server.state.Clusters) $r8
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r3 = (org.apache.ambari.server.state.Clusters) $r8 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r4 = (org.apache.ambari.server.state.Cluster) $r9
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r4 = (org.apache.ambari.server.state.Cluster) $r9 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r10 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r10 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r12 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r14 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r14 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r15 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r15 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r19 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r19 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r20 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r22 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r22 = interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : r5 = $r30 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r5.<org.apache.ambari.server.AmbariException: void printStackTrace()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : virtualinvoke r5.<org.apache.ambari.server.AmbariException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[0] = r1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[0] = r1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[1] = r3
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[1] = r3 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[2] = r4
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31[2] = r4 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r31) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r32 = newarray (java.lang.Object)[0]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r32 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void replayAll(java.lang.Object[])>($r32)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : staticinvoke <org.powermock.api.easymock.PowerMock: void replayAll(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : return
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r25 = (java.lang.String) $r24
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r26 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : goto [?= $r31 = newarray (java.lang.Object)[3]]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r30 := @caughtexception
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : goto [?= $r31 = newarray (java.lang.Object)[3]] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.setUpCommonMocks : $r31 = newarray (java.lang.Object)[3]
