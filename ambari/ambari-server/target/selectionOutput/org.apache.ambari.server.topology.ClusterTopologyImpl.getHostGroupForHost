org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r4 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Map hostGroupInfoMap> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : return null
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : r3 = (org.apache.ambari.server.topology.HostGroupInfo) $r6
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : r3 = (org.apache.ambari.server.topology.HostGroupInfo) $r6 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r7 = virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r7 = virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $z1 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $z1 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z1 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r8 = virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : $r8 = virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupForHost : return $r8
