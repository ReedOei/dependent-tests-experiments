org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r7 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r3 = virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>($r7)
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r3 = virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>($r7) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r4 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: java.util.Set getAdditionalForeignKeys()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r4 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: java.util.Set getAdditionalForeignKeys()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : if $z0 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r10 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r10 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addPrimaryKey(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>($r10, r2)
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addPrimaryKey(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>($r10, r2) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r11 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r11 = virtualinvoke r1.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>($r11, r2)
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : virtualinvoke r0.<org.apache.ambari.server.api.query.render.BaseRenderer: void addKeys(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set)>($r11, r2) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : return
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r6 = (org.apache.ambari.server.controller.spi.Resource$Type) $r8
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : r6 = (org.apache.ambari.server.controller.spi.Resource$Type) $r8 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r9 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6)
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $r9 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.populateSubResourceDefaults : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
