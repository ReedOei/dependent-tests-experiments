org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : return
