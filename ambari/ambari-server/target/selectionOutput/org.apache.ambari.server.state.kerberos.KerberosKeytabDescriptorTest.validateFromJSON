org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getFile()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("/etc/security/keytabs/${host}/subject.service.keytab", $r1)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("/etc/security/keytabs/${host}/subject.service.keytab", $r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("subject", $r2)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("subject", $r2) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getOwnerAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("rw", $r3)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("rw", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("hadoop", $r4)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("hadoop", $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getGroupAccess()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("r", $r5)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("r", $r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service.component.keytab.file", $r6)
org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>("service-site/service.component.keytab.file", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosKeytabDescriptorTest.validateFromJSON : return
