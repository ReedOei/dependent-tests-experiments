org.apache.ambari.server.stageplanner.RoleGraph.build : if r1 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = new java.lang.IllegalArgumentException
org.apache.ambari.server.stageplanner.RoleGraph.build : if r1 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = new java.util.TreeMap
org.apache.ambari.server.stageplanner.RoleGraph.build : $r10 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r10.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r10.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r10
org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> = $r10 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.Stage initialStage> = r1
org.apache.ambari.server.stageplanner.RoleGraph.build : r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.Stage initialStage> = r1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r2 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getHostRoleCommands()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r2 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: java.util.Map getHostRoleCommands()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r11 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r30 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.actionmanager.CommandExecutionType commandExecutionType> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r31 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r30 != $r31
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r30 != $r31 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r30 != $r31 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r50 = <org.apache.ambari.server.stageplanner.RoleGraph: org.slf4j.Logger LOG>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r50 = <org.apache.ambari.server.stageplanner.RoleGraph: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r51 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getRequestContext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r51 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getRequestContext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r50.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Build stage with DEPENDENCY_ORDERED commandExecutionType: {} ", $r51)
org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r50.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Build stage with DEPENDENCY_ORDERED commandExecutionType: {} ", $r51) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r32 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r32
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r32 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r33 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if null == $r32 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r33 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= return]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= return] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : return
org.apache.ambari.server.stageplanner.RoleGraph.build : $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r37 = (java.lang.String) $r36
org.apache.ambari.server.stageplanner.RoleGraph.build : r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r38 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r38 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r40 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r42 = (java.lang.String) $r41
org.apache.ambari.server.stageplanner.RoleGraph.build : r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>(r42)
org.apache.ambari.server.stageplanner.RoleGraph.build : $z4 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>(r42) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r43 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z4 != 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r43 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>(r37)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r45 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r44
org.apache.ambari.server.stageplanner.RoleGraph.build : r45 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r44 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r46 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r46 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r48 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r47
org.apache.ambari.server.stageplanner.RoleGraph.build : r48 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r47 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r49 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r49 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.metadata.RoleCommandOrder roleDependencies> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r49.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r45, r48)
org.apache.ambari.server.stageplanner.RoleGraph.build : i0 = virtualinvoke $r49.<org.apache.ambari.server.metadata.RoleCommandOrder: int order(org.apache.ambari.server.stageplanner.RoleGraphNode,org.apache.ambari.server.stageplanner.RoleGraphNode)>(r45, r48) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r45.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r48)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != -1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r48.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r45)
org.apache.ambari.server.stageplanner.RoleGraph.build : if i0 != 1 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r48.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r45) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r45.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addEdge(org.apache.ambari.server.stageplanner.RoleGraphNode)>(r48) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r4 = (java.lang.String) $r12
org.apache.ambari.server.stageplanner.RoleGraph.build : r4 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = (java.util.Map) $r13
org.apache.ambari.server.stageplanner.RoleGraph.build : $r14 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r6 = (java.lang.String) $r16
org.apache.ambari.server.stageplanner.RoleGraph.build : r6 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = (java.util.Map) $r17
org.apache.ambari.server.stageplanner.RoleGraph.build : $r18 = (java.util.Map) $r17 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r7 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r19
org.apache.ambari.server.stageplanner.RoleGraph.build : r7 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r19 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r20 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : if $r21 != null
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r21 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = new org.apache.ambari.server.stageplanner.RoleGraphNode
org.apache.ambari.server.stageplanner.RoleGraph.build : if $r21 != null >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r27 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r27 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r28 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r29 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r28
org.apache.ambari.server.stageplanner.RoleGraph.build : r29 = (org.apache.ambari.server.stageplanner.RoleGraphNode) $r28 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r29.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r4)
org.apache.ambari.server.stageplanner.RoleGraph.build : virtualinvoke r29.<org.apache.ambari.server.stageplanner.RoleGraphNode: void addHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stageplanner.RoleGraph.build : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r22 = new org.apache.ambari.server.stageplanner.RoleGraphNode >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>()
org.apache.ambari.server.stageplanner.RoleGraph.build : $r23 = virtualinvoke r7.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>() >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r24 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r7)
org.apache.ambari.server.stageplanner.RoleGraph.build : $r24 = specialinvoke r0.<org.apache.ambari.server.stageplanner.RoleGraph: org.apache.ambari.server.RoleCommand getRoleCommand(org.apache.ambari.server.actionmanager.HostRoleCommand)>(r7) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r22.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r23, $r24)
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r22.<org.apache.ambari.server.stageplanner.RoleGraphNode: void <init>(org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand)>($r23, $r24) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : r8 = $r22
org.apache.ambari.server.stageplanner.RoleGraph.build : r8 = $r22 >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r25 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph> >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8)
org.apache.ambari.server.stageplanner.RoleGraph.build : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8) >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : $r27 = r0.<org.apache.ambari.server.stageplanner.RoleGraph: java.util.Map graph>
org.apache.ambari.server.stageplanner.RoleGraph.build : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null stage")
org.apache.ambari.server.stageplanner.RoleGraph.build : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null stage") >>>>>>>> org.apache.ambari.server.stageplanner.RoleGraph.build : throw $r9
