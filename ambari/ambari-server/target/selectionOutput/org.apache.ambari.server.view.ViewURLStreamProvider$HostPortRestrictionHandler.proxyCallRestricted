org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : $r1 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : if $r1 != null
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : if $r1 != null >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: void initializeAllowedHostPorts()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : if $r1 != null >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : $r2 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : $r2 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : return $r2
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: void initializeAllowedHostPorts()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.proxyCallRestricted : $r2 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted>
