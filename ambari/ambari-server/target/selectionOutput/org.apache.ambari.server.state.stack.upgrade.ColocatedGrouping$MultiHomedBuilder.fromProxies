org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r3 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r4 = $r3
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r4 = $r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r13 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r13 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r13.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r13.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r5 = $r13
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r5 = $r13 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r14 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r14 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r6 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r6 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z8 = virtualinvoke r1.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z8 = virtualinvoke r1.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z8 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z9 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: boolean m_serviceCheck>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : return r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z9 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: boolean m_serviceCheck> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z9 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i1 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : return r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i1 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i1 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r29 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : return r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r29 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r29.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r29.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r30 = $r29
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r30 = $r29 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r31 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r31 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r31.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r31.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r32 = $r31
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r32 = $r31 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r33 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r33 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z10 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z10 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z10 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r39 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r39 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r40 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r40 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r41 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r41 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r43 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r32, ", ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r43 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r32, ", ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i2 = interfaceinvoke r30.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i2 = interfaceinvoke r30.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r46 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i2]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r46 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r47 = interfaceinvoke r30.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r46)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r47 = interfaceinvoke r30.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r46) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r48 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r47
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r48 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r47 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r39.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r40, $r45, $r48)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r39.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r40, $r45, $r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r49 = $r39
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r49 = $r39 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r49)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r49) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : return r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r35 = (java.lang.String) $r34
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r36 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r36 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r37 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r37 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r38 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r38 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r12 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r12 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r12.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r12.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r38[0] = $r12
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r38[0] = $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r36.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r35, "", $r37, $r38)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r36.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r35, "", $r37, $r38) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r30.<java.util.List: boolean add(java.lang.Object)>($r36)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r30.<java.util.List: boolean add(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r32.<java.util.Set: boolean add(java.lang.Object)>(r35)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r32.<java.util.Set: boolean add(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z10 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z10 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z10 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r7 = (java.util.Map$Entry) $r15
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r7 = (java.util.Map$Entry) $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r8 = null
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r8 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r16 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r9 = $r16
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r9 = $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r18 = (java.util.List) $r17
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r18 = (java.util.List) $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r10 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r10 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r19 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null == r8
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null == r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null == r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i0 = interfaceinvoke r9.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i0 = interfaceinvoke r9.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i0 <= 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r9)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r9) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $i0 = interfaceinvoke r9.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r19 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r11 = (org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy) $r19
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r11 = (org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy) $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z2 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$200(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z2 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$200(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z2 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r20 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$500(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z4 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$800(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z4 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$800(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z4 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null != r8
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r25 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r25 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r26 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r26 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type RESTART> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r27 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$300(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r27 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$300(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r28 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.TaskWrapper[] access$1000(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r28 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.TaskWrapper[] access$1000(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r26, $r27, $r28)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r26, $r27, $r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null != r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r21 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : if null != r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r21 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r22 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$700(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r22 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type access$700(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r23 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$300(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r23 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$300(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r24 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.TaskWrapper[] access$1000(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r24 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: org.apache.ambari.server.state.stack.upgrade.TaskWrapper[] access$1000(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r22, $r23, $r24)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : specialinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r22, $r23, $r24) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r8 = $r21
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : r8 = $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $r20 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.lang.String access$500(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.fromProxies : $z4 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: boolean access$800(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy)>(r11)
