org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request> >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r3 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r4 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r23 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r23 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r5 = (org.apache.ambari.server.state.Cluster) $r23
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r5 = (org.apache.ambari.server.state.Cluster) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r27 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r29 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r29 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r32 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r32 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r34 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r34 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r6 = (org.apache.ambari.server.state.Clusters) $r34
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r6 = (org.apache.ambari.server.state.Clusters) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r35 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r35 = interfaceinvoke r6.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r36 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r37 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r37 = interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r39 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r39 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r39
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r7 = (org.apache.ambari.server.controller.AmbariManagementController) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r40 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r40 = staticinvoke <org.powermock.api.easymock.PowerMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r40
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r8 = (org.apache.ambari.server.controller.RequestStatusResponse) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r41 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r41 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r46 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r45
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r46 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r45 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r48 = (java.util.Map) $r47
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r48 = (java.util.Map) $r47 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r49 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r46, $r48)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r49 = interfaceinvoke r7.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse createAction(org.apache.ambari.server.controller.ExecuteActionRequest,java.util.Map)>($r46, $r48) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r50 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r51 = interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r53 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r53 = virtualinvoke r8.<org.apache.ambari.server.controller.RequestStatusResponse: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r54 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r55 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r55 = interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Message") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[0] = r5
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[0] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[1] = r6
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[1] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[2] = r7
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[2] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[3] = r8
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r57[3] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r57)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.powermock.api.easymock.PowerMock: void replay(java.lang.Object[])>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r58 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke $r58.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r59 = new java.util.LinkedHashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r59 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r59.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r59.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r9 = $r59
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r9 = $r59 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r60 = new java.util.LinkedHashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r60 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r60.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r60.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r10 = $r60
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r10 = $r60 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r11 = "c1"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r11 = "c1" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r12 = "HOST_COMPONENT"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r12 = "HOST_COMPONENT" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r13 = "HDFS"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r13 = "HDFS" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r14 = "Namenode"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r14 = "Namenode" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r15 = "host1"
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r15 = "host1" >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/cluster_name", r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r62 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r62 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r62.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r62.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r16 = $r62
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r16 = $r62 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r63 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r63 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r63.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r63.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r17 = $r63
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r17 = $r63 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_name", r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", r15)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hosts", r15) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r17)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r16)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Requests/resource_filters", r16) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r67 = new java.util.HashMap
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r67 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r67.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : specialinvoke $r67.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r18 = $r67
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r18 = $r67 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "RESTART")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command", "RESTART") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/level", r12)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/level", r12) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/cluster_name", r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/cluster_name", r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/service_name", r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/service_name", r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/hostcomponent_name", r14)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/hostcomponent_name", r14) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/host_name", r15)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/host_name", r15) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r19 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r18)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r19 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r9, r18) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r74 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r74 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r75 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r75 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getKeyPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r20 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r74, $r75, r7)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r20 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractControllerResourceProvider: org.apache.ambari.server.controller.spi.ResourceProvider getResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,java.util.Map,org.apache.ambari.server.controller.AmbariManagementController)>(r2, $r74, $r75, r7) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/cluster_name", r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("operation_level/cluster_name", r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r20.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r19)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : interfaceinvoke r20.<org.apache.ambari.server.controller.spi.ResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(org.apache.ambari.server.controller.spi.Request)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $z2 = virtualinvoke r3.<org.easymock.Capture: boolean hasCaptured()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r78 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r78 = virtualinvoke r3.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r21 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r78
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r21 = (org.apache.ambari.server.controller.ExecuteActionRequest) $r78 >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r22 = virtualinvoke r21.<org.apache.ambari.server.controller.ExecuteActionRequest: org.apache.ambari.server.controller.internal.RequestOperationLevel getOperationLevel()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : r22 = virtualinvoke r21.<org.apache.ambari.server.controller.ExecuteActionRequest: org.apache.ambari.server.controller.internal.RequestOperationLevel getOperationLevel()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r79 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r79 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r80 = virtualinvoke $r79.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r80 = virtualinvoke $r79.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, "HostComponent")
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r80, "HostComponent") >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r81 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r81 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r81, r11)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r81, r11) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r82 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r82 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, r13)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r83 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getHostComponentName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r83 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getHostComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r83, r14)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r83, r14) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r84 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : $r84 = virtualinvoke r22.<org.apache.ambari.server.controller.internal.RequestOperationLevel: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r84, r15)
org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r84, r15) >>>>>>>> org.apache.ambari.server.controller.internal.RequestResourceProviderTest.testCreateResourcesForCommandsWithOpLvl : return
