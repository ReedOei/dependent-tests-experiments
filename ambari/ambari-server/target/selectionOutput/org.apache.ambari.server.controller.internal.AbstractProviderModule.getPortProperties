org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = r2
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = r2 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r10 = $r9
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r10 = $r9 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("NAMENODE")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r20 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r20 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r22 = (java.util.Map) $r21
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r22 = (java.util.Map) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r24 = (java.lang.String[]) $r23
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r24 = (java.lang.String[]) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : return $r24
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r20 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HA")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HA") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r5 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r5 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r15 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r15 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r16 = (java.util.Map) $r15
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r16 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r18 = (java.lang.String[]) $r17
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r18 = (java.lang.String[]) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r19 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.lang.String[] getNamenodeHaProperty(java.util.Map,java.lang.String[],java.lang.String)>(r4, $r18, r3)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r19 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.lang.String[] getNamenodeHaProperty(java.util.Map,java.lang.String[],java.lang.String)>(r4, $r18, r3) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : return $r19
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HTTPS")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HTTPS") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : goto [?= r10 = $r9]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : goto [?= r10 = $r9] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r10 = $r9
