org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : $r5 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : if $z0 == 0
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : return "primary"
org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor$2.updateForBlueprintExport : return r2
