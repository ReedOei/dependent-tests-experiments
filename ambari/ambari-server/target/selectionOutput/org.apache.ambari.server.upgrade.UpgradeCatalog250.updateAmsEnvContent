org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if r1 != null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : return null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if r1 != null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $r5 = new java.util.ArrayList
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r2 = $r5
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r2 = $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("\n# HBase normalizer enabled\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("\n# HBase normalizer enabled\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("\n# HBase compaction policy enabled\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("\n# HBase compaction policy enabled\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export HBASE_NORMALIZATION_ENABLED={{ams_hbase_normalizer_enabled}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export HBASE_NORMALIZATION_ENABLED={{ams_hbase_normalizer_enabled}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export HBASE_FIFO_COMPACTION_POLICY_ENABLED={{ams_hbase_fifo_compaction_policy_enabled}}\n")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("export HBASE_FIFO_COMPACTION_POLICY_ENABLED={{ams_hbase_fifo_compaction_policy_enabled}}\n") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : return r1
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r4 = (java.lang.String) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r4 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $z7 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $z7 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r4, "")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : goto [?= $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : goto [?= $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r4, "") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmsEnvContent : goto [?= $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
