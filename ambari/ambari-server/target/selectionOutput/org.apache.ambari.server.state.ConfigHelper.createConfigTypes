org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r7 = $r6
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r7 = $r6 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r8 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r8 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z0 == 0
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r26 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r26 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z3 == 0
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : return
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r29 = (java.util.Set) $r28
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r29 = (java.util.Set) $r28 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z4 = interfaceinvoke r29.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z4 = interfaceinvoke r29.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z4 != 0
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set,java.lang.String)>(r4, r29, r5)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set,java.lang.String)>(r4, r29, r5) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r9 = (java.util.Map$Entry) $r16
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r9 = (java.util.Map$Entry) $r16 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r17 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r17 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r10 = (java.lang.String) $r17
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r10 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r18 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r18 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r11 = (java.util.Map) $r18
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r11 = (java.util.Map) $r18 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r12 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r12 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r13 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelper: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, r2, r10, "version1", r11, $r12)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r13 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelper: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, r2, r10, "version1", r11, $r12) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if null == r13
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if null == r13 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r10)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if null == r13 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if null == r13 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r25 = $r24 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r19)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r14)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z1 != 0
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r20 = new java.util.HashSet
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r23 = (java.util.Set) $r22
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r23 = (java.util.Set) $r22 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r23 = (java.util.Set) $r22 >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= (branch)]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r20 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : specialinvoke $r20.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r20 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : specialinvoke $r20.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r20)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : specialinvoke $r20.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r20) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r22 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.state.ConfigHelper.createConfigTypes : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r20) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigTypes : $r24 := @caughtexception
