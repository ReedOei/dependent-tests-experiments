org.apache.ambari.server.actionmanager.ActionScheduler.stop : r0.<org.apache.ambari.server.actionmanager.ActionScheduler: boolean shouldRun> = 0 >>>>>>>> org.apache.ambari.server.actionmanager.ActionScheduler.stop : $r1 = r0.<org.apache.ambari.server.actionmanager.ActionScheduler: java.lang.Thread schedulerThread>
org.apache.ambari.server.actionmanager.ActionScheduler.stop : $r1 = r0.<org.apache.ambari.server.actionmanager.ActionScheduler: java.lang.Thread schedulerThread> >>>>>>>> org.apache.ambari.server.actionmanager.ActionScheduler.stop : virtualinvoke $r1.<java.lang.Thread: void interrupt()>()
org.apache.ambari.server.actionmanager.ActionScheduler.stop : virtualinvoke $r1.<java.lang.Thread: void interrupt()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionScheduler.stop : $r2 = r0.<org.apache.ambari.server.actionmanager.ActionScheduler: org.apache.ambari.server.serveraction.ServerActionExecutor serverActionExecutor>
org.apache.ambari.server.actionmanager.ActionScheduler.stop : $r2 = r0.<org.apache.ambari.server.actionmanager.ActionScheduler: org.apache.ambari.server.serveraction.ServerActionExecutor serverActionExecutor> >>>>>>>> org.apache.ambari.server.actionmanager.ActionScheduler.stop : virtualinvoke $r2.<org.apache.ambari.server.serveraction.ServerActionExecutor: void stop()>()
org.apache.ambari.server.actionmanager.ActionScheduler.stop : virtualinvoke $r2.<org.apache.ambari.server.serveraction.ServerActionExecutor: void stop()>() >>>>>>>> org.apache.ambari.server.actionmanager.ActionScheduler.stop : return
