org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : r1 = (org.apache.ambari.server.controller.logging.LogLineResult) $r2
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : r1 = (org.apache.ambari.server.controller.logging.LogLineResult) $r2 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cluster name not parsed properly", "clusterone", $r3)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Cluster name not parsed properly", "clusterone", $r3) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogMethod()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogMethod()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Method Name not parsed properly", "putMetrics", $r4)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Method Name not parsed properly", "putMetrics", $r4) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r5 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogLevel()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r5 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogLevel()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Log Level not parsed properly", "WARN", $r5)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Log Level not parsed properly", "WARN", $r5) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r6 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getEventCount()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r6 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getEventCount()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("event_count not parsed properly", "1", $r6)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("event_count not parsed properly", "1", $r6) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getIpAddress()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getIpAddress()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("ip address not parsed properly", "192.168.1.1", $r7)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("ip address not parsed properly", "192.168.1.1", $r7) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r8 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getComponentType()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r8 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getComponentType()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("component type not parsed properly", "yarn_resourcemanager", $r8)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("component type not parsed properly", "yarn_resourcemanager", $r8) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSequenceNumber()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSequenceNumber()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("sequence number not parsed properly", "10583", $r9)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("sequence number not parsed properly", "10583", $r9) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFilePath()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log file path not parsed properly", "/var/log/hadoop-yarn/yarn/yarn-yarn-resourcemanager-c6401.ambari.apache.org.log", $r10)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log file path not parsed properly", "/var/log/hadoop-yarn/yarn/yarn-yarn-resourcemanager-c6401.ambari.apache.org.log", $r10) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSourceFile()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSourceFile()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log src file name not parsed properly", "HadoopTimelineMetricsSink.java", $r11)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log src file name not parsed properly", "HadoopTimelineMetricsSink.java", $r11) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSourceFileLineNumber()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getSourceFileLineNumber()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log src line number not parsed properly", "262", $r12)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log src line number not parsed properly", "262", $r12) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getHostName()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r13 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("host name not parsed properly", "c6401.ambari.apache.org", $r13)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("host name not parsed properly", "c6401.ambari.apache.org", $r13) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r14 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogMessage()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r14 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogMessage()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log message not parsed properly", "Unable to send metrics to collector by address:http://c6401.ambari.apache.org:6188/ws/v1/timeline/metrics", $r14)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log message not parsed properly", "Unable to send metrics to collector by address:http://c6401.ambari.apache.org:6188/ws/v1/timeline/metrics", $r14) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r15 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLoggerName()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r15 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLoggerName()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("logger name not parsed properly", "timeline.HadoopTimelineMetricsSink", $r15)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("logger name not parsed properly", "timeline.HadoopTimelineMetricsSink", $r15) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getId()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r16 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("id not parsed properly", "8361c5a9-5b1c-4f44-bc8f-4c6f07d94228", $r16)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("id not parsed properly", "8361c5a9-5b1c-4f44-bc8f-4c6f07d94228", $r16) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r17 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getMessageMD5()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r17 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getMessageMD5()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("message MD5 not parsed properly", "5942185045779825717", $r17)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("message MD5 not parsed properly", "5942185045779825717", $r17) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogTime()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogTime()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log time not parsed properly", "1458148746937", $r18)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("log time not parsed properly", "1458148746937", $r18) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r19 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getEventMD5()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r19 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getEventMD5()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("event MD5 not parsed properly", "14581487469371427138486123628676", $r19)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("event MD5 not parsed properly", "14581487469371427138486123628676", $r19) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r20 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFileLineNumber()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r20 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getLogFileLineNumber()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("logfile line number not parsed properly", "549", $r20)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("logfile line number not parsed properly", "549", $r20) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getTtl()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getTtl()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("ttl not parsed properly", "+7DAYS", $r21)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("ttl not parsed properly", "+7DAYS", $r21) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getExpirationTime()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getExpirationTime()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("expire at not parsed properly", "1458753550322", $r22)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("expire at not parsed properly", "1458753550322", $r22) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getVersion()>()
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.logging.LogLineResult: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("version not parsed properly", "1528979784022884357", $r23)
org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("version not parsed properly", "1528979784022884357", $r23) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingRequestHelperImplTest.verifySecondLine : return
