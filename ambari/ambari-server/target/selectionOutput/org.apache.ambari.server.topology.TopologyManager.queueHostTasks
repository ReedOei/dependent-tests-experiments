org.apache.ambari.server.topology.TopologyManager.queueHostTasks : $r4 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.queueHostTasks : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.processAcceptedHostOffer: queueing tasks for host = {}", r3)
org.apache.ambari.server.topology.TopologyManager.queueHostTasks : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.processAcceptedHostOffer: queueing tasks for host = {}", r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.queueHostTasks : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.concurrent.Executor taskExecutor>
org.apache.ambari.server.topology.TopologyManager.queueHostTasks : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.concurrent.Executor taskExecutor> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.queueHostTasks : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.queueHostTasks : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.queueHostTasks : virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: void executeTasks(java.util.concurrent.Executor,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.AmbariContext)>($r5, r3, r1, $r6)
org.apache.ambari.server.topology.TopologyManager.queueHostTasks : virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: void executeTasks(java.util.concurrent.Executor,java.lang.String,org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.AmbariContext)>($r5, r3, r1, $r6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.queueHostTasks : return
