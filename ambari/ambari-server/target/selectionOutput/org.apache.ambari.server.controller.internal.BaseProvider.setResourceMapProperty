org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z0 = r2 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r3 = (java.util.Map) r2
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : return 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r3 = (java.util.Map) r2 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z1 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void addCategory(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z2 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : return 1
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r5 = (java.util.Map$Entry) $r9
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r5 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r6 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r1, $r11)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r6 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r1, $r11) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z3 = staticinvoke <org.apache.ambari.server.controller.internal.BaseProvider: boolean setResourceMapProperty(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.Object)>(r0, r6, r7)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z3 = staticinvoke <org.apache.ambari.server.controller.internal.BaseProvider: boolean setResourceMapProperty(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.Object)>(r0, r6, r7) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z3 != 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r6, r7)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r6, r7) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void addCategory(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= return 1]
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= return 1] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : return 1
