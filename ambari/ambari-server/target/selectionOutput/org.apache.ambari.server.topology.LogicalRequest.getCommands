org.apache.ambari.server.topology.LogicalRequest.getCommands : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getCommands : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : r2 = $r1
org.apache.ambari.server.topology.LogicalRequest.getCommands : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $r5 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests>
org.apache.ambari.server.topology.LogicalRequest.getCommands : $r5 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getCommands : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getCommands : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.getCommands : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getCommands : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : return r2
org.apache.ambari.server.topology.LogicalRequest.getCommands : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : r4 = (org.apache.ambari.server.topology.HostRequest) $r6
org.apache.ambari.server.topology.LogicalRequest.getCommands : r4 = (org.apache.ambari.server.topology.HostRequest) $r6 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $r7 = new java.util.ArrayList
org.apache.ambari.server.topology.LogicalRequest.getCommands : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $r8 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: java.util.Collection getLogicalTasks()>()
org.apache.ambari.server.topology.LogicalRequest.getCommands : $r8 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: java.util.Collection getLogicalTasks()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)
org.apache.ambari.server.topology.LogicalRequest.getCommands : specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r7)
org.apache.ambari.server.topology.LogicalRequest.getCommands : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getCommands : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getCommands : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
