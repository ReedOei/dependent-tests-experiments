org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTarget()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r2 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "\\\\.")
org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r2 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "\\\\.") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r4 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\\\.\\*", "(\\\\\\.\\\\d+)?")
org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r4 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\\\.\\*", "(\\\\\\.\\\\d+)?") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r5 = virtualinvoke r4.<java.lang.String: java.lang.String concat(java.lang.String)>("(-\\d+)?")
org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : r5 = virtualinvoke r4.<java.lang.String: java.lang.String concat(java.lang.String)>("(-\\d+)?") >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : $z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r5, r1)
org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : $z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r5, r1) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.canBeApplied : return $z0
