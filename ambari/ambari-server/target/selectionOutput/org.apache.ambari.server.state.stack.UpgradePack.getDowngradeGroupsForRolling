org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r2 = $r1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i2 = interfaceinvoke $r6.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i2 = interfaceinvoke $r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i2 != 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i2 != 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i2 != 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i0 = 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i0 = 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r8 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : return r2
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r9
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r9 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r10 = class "org/apache/ambari/server/state/stack/upgrade/ClusterGrouping"
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r10 = class "org/apache/ambari/server/state/stack/upgrade/ClusterGrouping" >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z1 = virtualinvoke $r10.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z1 = virtualinvoke $r10.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i3 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i3 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r11 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i4 = interfaceinvoke $r11.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i4 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i3 >= $i4
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i3 >= $i4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $i3 >= $i4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i5 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $i5 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i5)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i5) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r5 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r13
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : r5 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r13 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r14 = class "org/apache/ambari/server/state/stack/upgrade/ServiceCheckGrouping"
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r14 = class "org/apache/ambari/server/state/stack/upgrade/ServiceCheckGrouping" >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z3 = virtualinvoke $r14.<java.lang.Class: boolean isInstance(java.lang.Object)>(r5)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $z3 = virtualinvoke $r14.<java.lang.Class: boolean isInstance(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z3 == 0
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, r4)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, $r15)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, $r15) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, r4)
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: void add(int,java.lang.Object)>(i0, r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i1 = i1 + 1]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i0 = i0 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i1 = i1 + 1]
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : i1 = i1 + 1
org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : $r7 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getDowngradeGroupsForRolling : return $r7
