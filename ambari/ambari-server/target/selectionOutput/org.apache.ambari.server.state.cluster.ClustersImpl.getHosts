org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : $r2 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : $r2 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHosts : return $r1
