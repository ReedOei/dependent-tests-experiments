org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r26 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r4 = interfaceinvoke $r26.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r4 = interfaceinvoke $r26.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r27 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r27 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r27.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r5 = $r27
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r5 = $r27 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r28 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r28 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r28.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r28.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r6 = $r28
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r6 = $r28 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r29 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r29 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r29.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r29.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r7 = $r29
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r7 = $r29 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r30 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r30 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r30.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r30.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r8 = $r30
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r8 = $r30 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r31 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r9 = $r31
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r9 = $r31 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.spi.Resource$Type determineOperationLevel(java.util.Map)>(r3)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r10 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.spi.Resource$Type determineOperationLevel(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r32 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("operation_level/cluster_name")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r32 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("operation_level/cluster_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r11 = (java.lang.String) $r32
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r11 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z1 = virtualinvoke r11.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z3 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r33 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void doDirectTransitions(java.util.Map)>(r9)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void doDirectTransitions(java.util.Map)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r157 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r157 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r158 = interfaceinvoke $r157.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r158 = interfaceinvoke $r157.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r159 = (java.lang.String) $r158
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r159 = (java.lang.String) $r158 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r160 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r159)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r160 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r159) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r161 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r161 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r162 = interfaceinvoke $r161.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r160, r3, null, null, null, r5, r6, z0, 0)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r162 = interfaceinvoke $r161.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r160, r3, null, null, null, r5, r6, z0, 0) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : return $r162
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r33 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r13 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r33
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r13 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void validateServiceComponentHostRequest(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r13)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void validateServiceComponentHostRequest(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r34 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r34 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r34)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if z0 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r35 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r38 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r38 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z5 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r39 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r42 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r42 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r43 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r43 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r44 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r44 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String,java.lang.String,java.lang.String)>($r42, $r43, $r44)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String,java.lang.String,java.lang.String)>($r42, $r43, $r44) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void logRequestInfo(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest)>("Received a updateHostComponent request", r13)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: void logRequestInfo(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest)>("Received a updateHostComponent request", r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z6 = virtualinvoke r11.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r11 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r45 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r45 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r45 == null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r45 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r46 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r45 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $i0 = interfaceinvoke r7.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $i0 = interfaceinvoke r7.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $i0 <= 1
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r48 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r49 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r49 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r50 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r50 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r17 = (java.util.Map) $r50
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r17 = (java.util.Map) $r50 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r17 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r17 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r51 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r17 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r54 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r54 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r55 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r55 = interfaceinvoke r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r18 = (java.util.Map) $r55
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r18 = (java.util.Map) $r55 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r18 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r18 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r56 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r18 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r59 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r59 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r60 = interfaceinvoke r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r59)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r60 = interfaceinvoke r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r19 = (java.util.Set) $r60
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r19 = (java.util.Set) $r60 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r19 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r19 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r61 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r19 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r64 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r64 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z9 = interfaceinvoke r19.<java.util.Set: boolean contains(java.lang.Object)>($r64)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z9 = interfaceinvoke r19.<java.util.Set: boolean contains(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z9 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r65 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r66 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r66 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r19.<java.util.Set: boolean add(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r19.<java.util.Set: boolean add(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r67 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r67 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r20 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>($r67)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r20 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>($r67) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r21 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r21 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r22 = null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r22 = null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r68 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r68 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r68 == null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r68 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r69 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $r68 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r76 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r76 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if null == $r76
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if null == $r76 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r77 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if null == $r76 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r89 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r91 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r91 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r92 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r92 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r93 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r93 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r94 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r94 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r95 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r95 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r96 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r96 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r97 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>($r93, $r94, $r95, $r96)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r97 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>($r93, $r94, $r95, $r96) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z15 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r91, $r92, $r97)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z15 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r91, $r92, $r97) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z15 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r98 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z16 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z16 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z16 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r99 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z19 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z19 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z19 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z20 = virtualinvoke r22.<org.apache.ambari.server.state.State: boolean isValidClientComponentState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r106 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r106 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != r106
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != r106 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z21 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != r106 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r111 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r111 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z24 = virtualinvoke $r111.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.ServiceComponentHost)>(r10, r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z24 = virtualinvoke $r111.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.ServiceComponentHost)>(r10, r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z24 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z26 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: boolean isValidStateTransition(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State,org.apache.ambari.server.state.ServiceComponentHost)>(r1, r106, r22, r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z26 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: boolean isValidStateTransition(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State,org.apache.ambari.server.state.ServiceComponentHost)>(r1, r106, r22, r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z26 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z26 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r114 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z26 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z27 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: boolean isDirectTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r106, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z27 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: boolean isDirectTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r106, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z27 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z27 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r135 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z27 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r138 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r138 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z28 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r138)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z28 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r138) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z28 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z28 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r139 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z28 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r142 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r142 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r143 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r142)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r143 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r142) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r144 = (java.util.Map) $r143
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r144 = (java.util.Map) $r143 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z29 = interfaceinvoke $r144.<java.util.Map: boolean containsKey(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z29 = interfaceinvoke $r144.<java.util.Map: boolean containsKey(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z29 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r145 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r150 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r150 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r151 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Handling update to host component", r13, r21, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r151 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Handling update to host component", r13, r21, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r150.<org.slf4j.Logger: void info(java.lang.String)>($r151)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r150.<org.slf4j.Logger: void info(java.lang.String)>($r151) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r152 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r152 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r153 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r152)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r153 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r152) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r154 = (java.util.Map) $r153
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r154 = (java.util.Map) $r153 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r155 = interfaceinvoke $r154.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r155 = interfaceinvoke $r154.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r156 = (java.util.List) $r155
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r156 = (java.util.List) $r155 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r156.<java.util.List: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r156.<java.util.List: boolean add(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r145 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r146 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r145)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r146 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r147 = (java.util.Map) $r146
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r147 = (java.util.Map) $r146 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r148 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r148 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r148.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r148.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r147.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r148)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r147.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r148) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r150 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r139 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r140 = new java.util.EnumMap
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r140 = new java.util.EnumMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r140.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r140.<java.util.EnumMap: void <init>(java.lang.Class)>(class "org/apache/ambari/server/state/State") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r139, $r140)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r139, $r140) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r142 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r135 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r136 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Handling direct transition update to host component", r13, r21, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r136 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Handling direct transition update to host component", r13, r21, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r135.<org.slf4j.Logger: void info(java.lang.String)>($r136)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r135.<org.slf4j.Logger: void info(java.lang.String)>($r136) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r114 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r115 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r115 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r115.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r115.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state transition for host component, clusterName=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid state transition for host component, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r117 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r117 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $l1 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $l1 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r122 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r122 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r125 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r125 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r126 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r126 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostname=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hostname=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r128 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r128 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r129 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r129 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentState=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentState=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r106)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r106) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r114.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r134)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r114.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r134) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r114
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r112 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r112 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r113 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as operation is not allowed", r13, r21, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r113 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as operation is not allowed", r13, r21, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r112.<org.slf4j.Logger: void info(java.lang.String)>($r113)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r112.<org.slf4j.Logger: void info(java.lang.String)>($r113) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z21 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z21 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z21 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r107 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z21 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r111 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r107 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r108 = virtualinvoke $r107.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r108 = virtualinvoke $r107.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z22 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r108)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z22 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r108) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z22 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r111 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r109 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r109 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r110 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as the current state matches the new desired state", r13, r21, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r110 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as the current state matches the new desired state", r13, r21, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r109.<org.slf4j.Logger: void info(java.lang.String)>($r110)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r109.<org.slf4j.Logger: void info(java.lang.String)>($r110) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z20 = virtualinvoke r22.<org.apache.ambari.server.state.State: boolean isValidClientComponentState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z20 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r105 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r106 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r105 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid desired state for a client component")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid desired state for a client component") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r105
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r99 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != $r99
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != $r99 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r100 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != $r99 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z19 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r100 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r101 = virtualinvoke $r100.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r101 = virtualinvoke $r100.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z17 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r101)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z17 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z17 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z19 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r102 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r102 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r103 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r103 = interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r104 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as STARTED new desired state for client components is not valid", r13, $r103, r22)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r104 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Ignoring ServiceComponentHost as STARTED new desired state for client components is not valid", r13, $r103, r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r102.<org.slf4j.Logger: void info(java.lang.String)>($r104)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r102.<org.slf4j.Logger: void info(java.lang.String)>($r104) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r98 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r98.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to change the state of service components")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r98.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to change the state of service components") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r98
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r89 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r90 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Nothing to do for new updateServiceComponentHost", r13, r21, null)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r90 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: java.lang.String getServiceComponentRequestInfoLogMessage(java.lang.String,org.apache.ambari.server.controller.ServiceComponentHostRequest,org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>("Nothing to do for new updateServiceComponentHost", r13, r21, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r89.<org.slf4j.Logger: void info(java.lang.String)>($r90)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke $r89.<org.slf4j.Logger: void info(java.lang.String)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r77 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r23 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r77)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r23 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r78 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r78 = r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r24 = virtualinvoke $r78.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.MaintenanceState getEffectiveState(org.apache.ambari.server.state.ServiceComponentHost)>(r20)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r24 = virtualinvoke $r78.<org.apache.ambari.server.controller.MaintenanceStateHelper: org.apache.ambari.server.state.MaintenanceState getEffectiveState(org.apache.ambari.server.state.ServiceComponentHost)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r23 == r24
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r23 == r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z12 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r23 == r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z12 = interfaceinvoke r16.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z12 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r79 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r80 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r80 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z13 = virtualinvoke r23.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r80)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z13 = virtualinvoke r23.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z13 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r81 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r82 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r82 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r83 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r83 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r83.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r83.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r85 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r85 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r25 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r25 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r86 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r85, $r25)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r86 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r85, $r25) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r88)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r82
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r81 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z14 = virtualinvoke r23.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r81)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z14 = virtualinvoke r23.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z14 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r82 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r23)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r20.<org.apache.ambari.server.state.ServiceComponentHost: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if r22 != null
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r79 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r79.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cannot set maintenance state on a client component")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r79.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cannot set maintenance state on a client component") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r79
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r69 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r22 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r69)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r22 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z11 = virtualinvoke r22.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z11 = virtualinvoke r22.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z11 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r70 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r76 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r70 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r71 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r71 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r73 = virtualinvoke r22.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r73 = virtualinvoke r22.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r75)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r70
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r65 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r65.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate hostcomponents")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r65.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate hostcomponents") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r65
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r61 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r61.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r61.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r19 = $r61
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r19 = $r61 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r62 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r62 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, r19)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r64 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r56 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r56.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r56.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r18 = $r56
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r18 = $r56 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r57 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r57 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r18)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r59 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r51 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r51.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r51.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r17 = $r51
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r17 = $r51 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r52 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r52 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, r17)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r54 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r48 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r48
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r46 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z7 = virtualinvoke $r46.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z7 = virtualinvoke $r46.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z7 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r47 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $i0 = interfaceinvoke r7.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r47 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $i0 = interfaceinvoke r7.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z6 = virtualinvoke r11.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z6 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r45 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $i0 = interfaceinvoke r7.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r39 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r40 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r40 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r41 = interfaceinvoke $r39.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r14, $r40)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r41 = interfaceinvoke $r39.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r14, $r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void setServiceName(java.lang.String)>($r41)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: void setServiceName(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r42 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r35 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r36 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r36 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r35, $r36, $r15)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r35, $r36, $r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z4 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r37 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r38 = virtualinvoke r13.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $r37 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r37.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to run service checks")
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : specialinvoke $r37.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to run service checks") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : throw $r37
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : $z1 = virtualinvoke r11.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z1 != 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.updateHostComponents : r12 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
