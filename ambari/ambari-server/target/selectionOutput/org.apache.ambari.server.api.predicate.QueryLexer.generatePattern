org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r2 = $r1
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r3 = <org.apache.ambari.server.api.predicate.QueryLexer: java.lang.String[] ALL_DELIMS>
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r3 = <org.apache.ambari.server.api.predicate.QueryLexer: java.lang.String[] ALL_DELIMS> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i0 = lengthof r3
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i1 = 0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i1 = 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i1 >= i0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r4 = r3[i1]
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r10)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : return $r11
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>()
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i2 == 1
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i2 == 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if $i2 == 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i1 = i1 + 1
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : goto [?= (branch)]
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : if i1 >= i0
org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer.generatePattern : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)
