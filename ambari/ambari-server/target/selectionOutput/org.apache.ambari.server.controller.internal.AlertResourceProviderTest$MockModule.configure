org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r6 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r7 = r0.<org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r7 = r0.<org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.AlertResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.apache.ambari.server.controller.internal.AlertResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO access$100(org.apache.ambari.server.controller.internal.AlertResourceProviderTest)>($r7)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.apache.ambari.server.controller.internal.AlertResourceProviderTest: org.apache.ambari.server.orm.dao.AlertsDAO access$100(org.apache.ambari.server.controller.internal.AlertResourceProviderTest)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r9 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessorImpl")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessorImpl") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r13
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Clusters) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r14
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r15 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r15 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r16 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r17 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUrl()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r17 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUrl()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: java.lang.String JDBC_IN_MEMORY_URL>
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: java.lang.String JDBC_IN_MEMORY_URL> >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r20 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r22 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseDriver()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r22 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseDriver()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r23 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("org.apache.derby.jdbc.EmbeddedDriver")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r24 = interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("org.apache.derby.jdbc.EmbeddedDriver") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r26 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUser()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r26 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseUser()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("test")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r28 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("test") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r30 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabasePassword()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r30 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabasePassword()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("test")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("test") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS>
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r36 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty ALERTS_EXECUTION_SCHEDULER_THREADS> >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r37 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r37 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r38 = (java.lang.Integer) $r37
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r38 = (java.lang.Integer) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $i1 = virtualinvoke $r38.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $i1 = virtualinvoke $r38.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r40 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r40 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r40.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r42 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r42 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r43 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r44 = new java.io.File
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r44 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : specialinvoke $r44.<java.io.File: void <init>(java.lang.String)>("/test")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : specialinvoke $r44.<java.io.File: void <init>(java.lang.String)>("/test") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r45 = interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r45 = interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $l2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: long getTemporaryKeyStoreRetentionMinutes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $l2 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: long getTemporaryKeyStoreRetentionMinutes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r48 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r50 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r50 = interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isActivelyPurgeTemporaryKeyStore()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isActivelyPurgeTemporaryKeyStore()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r57 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r57 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ambari")
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r59 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("ambari") >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r61 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r61 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r61[0] = r3
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : $r61[0] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r61)
org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r61) >>>>>>>> org.apache.ambari.server.controller.internal.AlertResourceProviderTest$MockModule.configure : return
