org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r7 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if null != $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if null != $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if null != $r7 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : return $r20
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r8 = new java.util.HashMap
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> = $r8
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap> = $r8 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r9 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r9 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r12 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r12 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z2 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r14 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r15 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r14
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r15 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r14 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r16 = r15.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r16 = r15.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r6 = (org.apache.ambari.server.state.repository.ManifestService) $r17
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r6 = (org.apache.ambari.server.state.repository.ManifestService) $r17 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r18 = r15.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r18 = r15.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.util.Set components> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void addToAvailable(org.apache.ambari.server.state.repository.ManifestService,org.apache.ambari.server.state.StackInfo,java.util.Set)>(r6, r1, $r18)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void addToAvailable(org.apache.ambari.server.state.repository.ManifestService,org.apache.ambari.server.state.StackInfo,java.util.Set)>(r6, r1, $r18) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r10 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r19 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map m_availableMap>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r4 = (org.apache.ambari.server.state.repository.ManifestService) $r11
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : r4 = (org.apache.ambari.server.state.repository.ManifestService) $r11 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void addToAvailable(org.apache.ambari.server.state.repository.ManifestService,org.apache.ambari.server.state.StackInfo,java.util.Set)>(r4, r1, $r5)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: void addToAvailable(org.apache.ambari.server.state.repository.ManifestService,org.apache.ambari.server.state.StackInfo,java.util.Set)>(r4, r1, $r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServices : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
