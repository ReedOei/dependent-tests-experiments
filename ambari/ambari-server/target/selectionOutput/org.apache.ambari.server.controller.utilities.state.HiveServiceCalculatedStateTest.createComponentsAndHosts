org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r11 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r1 = interfaceinvoke $r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_METASTORE")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r1 = interfaceinvoke $r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_METASTORE") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r12 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r12 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r2 = interfaceinvoke $r12.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r2 = interfaceinvoke $r12.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_SERVER") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r13 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r13 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("WEBHCAT_SERVER")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r3 = interfaceinvoke $r13.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("WEBHCAT_SERVER") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r14 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r14 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r4 = interfaceinvoke $r14.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("MYSQL_SERVER")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r4 = interfaceinvoke $r14.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("MYSQL_SERVER") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r15 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r15 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Service service> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r5 = interfaceinvoke $r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_CLIENT")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r5 = interfaceinvoke $r15.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent addServiceComponent(java.lang.String)>("HIVE_CLIENT") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r6 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: java.lang.String[] hosts>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r6 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: java.lang.String[] hosts> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i0 = lengthof r6
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i0 = lengthof r6 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i1 = 0
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r7 = r6[i1]
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : return
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r7 = r6[i1] >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r16 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r16 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r17 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r17 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r8 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r8 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r18 = new java.util.HashMap
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r9 = $r18
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r9 = $r18 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r8.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r9)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r8.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r9) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r21 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r21 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r8.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r21)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r8.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r21) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r22 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r22 = r0.<org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r7, "c1")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r7, "c1") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r10 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r10 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r23 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r23 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r23)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r23) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r24 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r24 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r24.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r24.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r25 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r25 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r24.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r25)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r24.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r25) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r26 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r26 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r26.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r26.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r27 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r27 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r26.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r27)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r26.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r27) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r28 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r28 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r28.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r28.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r28.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r29)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r28.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r29) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r30 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : r30 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost addServiceComponentHost(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r30.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0")
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r30.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>("2.1.1.0") >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r30.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r31)
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : interfaceinvoke r30.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r31) >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i1 = i1 + 1
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.state.HiveServiceCalculatedStateTest.createComponentsAndHosts : if i1 >= i0
