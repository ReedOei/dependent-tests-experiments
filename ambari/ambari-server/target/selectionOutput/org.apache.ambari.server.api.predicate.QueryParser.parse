org.apache.ambari.server.api.predicate.QueryParser.parse : r2 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: org.apache.ambari.server.api.predicate.QueryParser$ParseContext parseExpressions(org.apache.ambari.server.api.predicate.Token[])>(r1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : r3 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List getExpressions()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : r3 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: java.util.List getExpressions()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: void changeHostNameToLowerCase(java.util.List)>(r3)
org.apache.ambari.server.api.predicate.QueryParser.parse : specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: void changeHostNameToLowerCase(java.util.List)>(r3) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $i0 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getMaxPrecedence()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : $i0 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryParser$ParseContext: int getMaxPrecedence()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : r4 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: java.util.List mergeExpressions(java.util.List,int)>(r3, $i0)
org.apache.ambari.server.api.predicate.QueryParser.parse : r4 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: java.util.List mergeExpressions(java.util.List,int)>(r3, $i0) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : if $z0 == 0
org.apache.ambari.server.api.predicate.QueryParser.parse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $r5 = null
org.apache.ambari.server.api.predicate.QueryParser.parse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.api.predicate.QueryParser.parse : $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $r7 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r6
org.apache.ambari.server.api.predicate.QueryParser.parse : $r7 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r6 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : $r5 = interfaceinvoke $r7.<org.apache.ambari.server.api.predicate.expressions.Expression: org.apache.ambari.server.controller.spi.Predicate toPredicate()>()
org.apache.ambari.server.api.predicate.QueryParser.parse : $r5 = interfaceinvoke $r7.<org.apache.ambari.server.api.predicate.expressions.Expression: org.apache.ambari.server.controller.spi.Predicate toPredicate()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : return $r5
org.apache.ambari.server.api.predicate.QueryParser.parse : $r5 = null >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : goto [?= return $r5]
org.apache.ambari.server.api.predicate.QueryParser.parse : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.parse : return $r5
