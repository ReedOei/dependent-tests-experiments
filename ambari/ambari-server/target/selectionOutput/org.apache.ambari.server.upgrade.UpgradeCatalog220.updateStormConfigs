org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r10
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r11 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r11 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r12 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r11)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r12 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r2 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r2 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r3 = (org.apache.ambari.server.state.Cluster) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r3 = (org.apache.ambari.server.state.Cluster) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("storm-site")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("storm-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r4 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r15 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r5 = $r15
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r5 = $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("nimbus.monitor.freq.secs")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("nimbus.monitor.freq.secs") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r6 = (java.lang.String) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r6 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("10")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("AMBARI_METRICS")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r19 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r8 = $r19 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r20 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r20 = <org.apache.ambari.server.upgrade.UpgradeCatalog220: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("AMBARI_METRICS service not found in cluster while updating storm-site properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>("AMBARI_METRICS service not found in cluster while updating storm-site properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r21 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r21 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("metrics.reporter.register")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("metrics.reporter.register") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r23 = (java.lang.String) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r23)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "storm-site", r5, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "storm-site", r5, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r23) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("metrics.reporter.register", "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "storm-site", r5, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("metrics.reporter.register", "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "storm-site", r5, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : goto [?= $r21 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("AMBARI_METRICS") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r19 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : goto [?= $r21 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $r21 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("10") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nimbus.monitor.freq.secs", "120")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nimbus.monitor.freq.secs", "120") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateStormConfigs : r7 = null
