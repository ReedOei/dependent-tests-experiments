org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r8 = virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getStack()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r9 = virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getService()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r9 = virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void calculateDirectories(java.lang.String,java.lang.String)>($r8, $r9)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void calculateDirectories(java.lang.String,java.lang.String)>($r8, $r9) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void parseMetaInfoFile()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : virtualinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void parseMetaInfoFile()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r10 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r10 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r11 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r11 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "alerts.json")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "alerts.json") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r1 = $r10
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r1 = $r10 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z0 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r13 = r1
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r13 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r13 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File alertsFile> = $r13
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File alertsFile> = $r13 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r14 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r14 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r15 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r15 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "kerberos.json")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "kerberos.json") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r2 = $r14
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r2 = $r14 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z1 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z1 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z1 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r17 = r2
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r17 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r17 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File kerberosDescriptorFile> = $r17
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File kerberosDescriptorFile> = $r17 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r18 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r18 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r19 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r19 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, "role_command_order.json")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, "role_command_order.json") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r3 = $r18
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r3 = $r18 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z2 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z2 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z2 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> = r3
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r20 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml metaInfoXml>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r20 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml metaInfoXml> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r21 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r21 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $r21 == null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $r21 == null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r22 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml metaInfoXml>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $r21 == null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r39 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r39 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r40 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r40 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r39.<java.io.File: void <init>(java.io.File,java.lang.String)>($r40, "service_advisor.py")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r39.<java.io.File: void <init>(java.io.File,java.lang.String)>($r40, "service_advisor.py") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r41 = $r39
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r41 = $r39 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z6 = virtualinvoke r41.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z6 = virtualinvoke r41.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z6 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r43 = r41
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z6 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r43 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r43 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File advisorFile> = $r43
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File advisorFile> = $r43 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r44 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r44 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r45 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r45 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r44.<java.io.File: void <init>(java.io.File,java.lang.String)>($r45, "theme.json")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r44.<java.io.File: void <init>(java.io.File,java.lang.String)>($r45, "theme.json") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r46 = $r44
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r46 = $r44 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z7 = virtualinvoke r46.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z7 = virtualinvoke r46.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z7 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r48 = r46
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z7 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r48 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r48 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r48
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r48 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r49 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r49 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r50 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r50 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r49.<java.io.File: void <init>(java.io.File,java.lang.String)>($r50, "theme.json")
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r49.<java.io.File: void <init>(java.io.File,java.lang.String)>($r50, "theme.json") >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r51 = $r49
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r51 = $r49 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z8 = virtualinvoke r46.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z8 = virtualinvoke r46.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z8 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z8 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r53 = r46
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z8 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r53 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r53 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r53
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r53 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : return
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r53 = r46 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r53]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r53] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r53
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r48 = r46 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r48]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r48] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File themeFile> = $r48
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r43 = r41 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File advisorFile> = $r43]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File advisorFile> = $r43] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File advisorFile> = $r43
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r22 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml metaInfoXml> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r4 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r4 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z3 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r24 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r39 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r24 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r5 = (org.apache.ambari.server.state.ServiceInfo) $r24
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r5 = (org.apache.ambari.server.state.ServiceInfo) $r24 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r25 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r25 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r26 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r26 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r27 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getMetricsFileName()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r27 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getMetricsFileName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r27)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r25.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r27) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r6 = $r25
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r6 = $r25 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r28 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.util.Map metricsFileMap>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r28 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.util.Map metricsFileMap> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r29 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r29 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z4 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z4 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z4 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r30 = r6
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r30 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r30 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r32 = new java.io.File
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r32 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r33 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r33 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getWidgetsFileName()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getWidgetsFileName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r32.<java.io.File: void <init>(java.io.File,java.lang.String)>($r33, $r34)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke $r32.<java.io.File: void <init>(java.io.File,java.lang.String)>($r33, $r34) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r7 = $r32
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r7 = $r32 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r35 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.util.Map widgetsDescriptorFileMap>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r35 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.util.Map widgetsDescriptorFileMap> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r36 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r36 = virtualinvoke r5.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z5 = virtualinvoke r7.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z5 = virtualinvoke r7.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z5 == 0
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r37 = r7
org.apache.ambari.server.stack.ServiceDirectory.parsePath : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r37 = null
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r37 = null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r37 = r7 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37)]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37)] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r30 = r6 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> = r3 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void parseRoleCommandOrder()>()
org.apache.ambari.server.stack.ServiceDirectory.parsePath : specialinvoke r0.<org.apache.ambari.server.stack.ServiceDirectory: void parseRoleCommandOrder()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r20 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml metaInfoXml>
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r17 = r2 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File kerberosDescriptorFile> = $r17]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File kerberosDescriptorFile> = $r17] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File kerberosDescriptorFile> = $r17
org.apache.ambari.server.stack.ServiceDirectory.parsePath : $r13 = r1 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File alertsFile> = $r13]
org.apache.ambari.server.stack.ServiceDirectory.parsePath : goto [?= r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File alertsFile> = $r13] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parsePath : r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File alertsFile> = $r13
