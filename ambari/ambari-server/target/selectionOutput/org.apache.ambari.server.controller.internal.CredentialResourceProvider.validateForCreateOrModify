org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r2 = r0.<org.apache.ambari.server.controller.internal.CredentialResourceProvider: org.apache.ambari.server.security.encryption.CredentialStoreService credentialStoreService> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $z0 = interfaceinvoke $r2.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r1)
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $z0 = interfaceinvoke $r2.<org.apache.ambari.server.security.encryption.CredentialStoreService: boolean isInitialized(org.apache.ambari.server.security.encryption.CredentialStoreType)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $z0 != 0
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED>
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : return
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r3 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType PERSISTED> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r3 != r1
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r3 != r1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r4 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r3 != r1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r5 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY>
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r5 = <org.apache.ambari.server.security.encryption.CredentialStoreType: org.apache.ambari.server.security.encryption.CredentialStoreType TEMPORARY> >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r5 != r1
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r5 != r1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r6 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : if $r5 != r1 >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : return
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r6 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials cannot be stored in Ambari\'s temporary secure credential store since secure temporary storage has not yet be configured.")
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials cannot be stored in Ambari\'s temporary secure credential store since secure temporary storage has not yet be configured.") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : throw $r6
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials cannot be stored in Ambari\'s persistent secure credential store since secure persistent storage has not yet be configured.  Use ambari-server setup-security to enable this feature.")
org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials cannot be stored in Ambari\'s persistent secure credential store since secure persistent storage has not yet be configured.  Use ambari-server setup-security to enable this feature.") >>>>>>>> org.apache.ambari.server.controller.internal.CredentialResourceProvider.validateForCreateOrModify : throw $r4
