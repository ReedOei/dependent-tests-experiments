org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r1 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Initializing AmbariServer Metrics Service **********")
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Initializing AmbariServer Metrics Service **********") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r4 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("********* Initializing AmbariServer Metrics Service **********") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r3 = $r12 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r13 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r13 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unable to initialize MetricsService : ", $r14)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Unable to initialize MetricsService : ", $r14) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r4 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> = $r4
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r4 = staticinvoke <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration getMetricsConfiguration()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> = $r4 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r5 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> = $r4 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r5 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r5 != null
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r5 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.impl.MetricsConfiguration configuration> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r5 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r5 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r6 = new org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $r5 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r6 = new org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r7 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.controller.AmbariManagementController amc>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r6 = new org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r7 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r6.<org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl: void <init>(org.apache.ambari.server.controller.AmbariManagementController)>($r7)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r7 = r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.controller.AmbariManagementController amc> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r6.<org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl: void <init>(org.apache.ambari.server.controller.AmbariManagementController)>($r7) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> = $r6
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r6.<org.apache.ambari.server.metrics.system.impl.AmbariMetricSinkImpl: void <init>(org.apache.ambari.server.controller.AmbariManagementController)>($r7) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> = $r6 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricsSink()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> = $r6 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricsSink()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricSources()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricsSink()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricSources()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r8 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke r0.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: void initializeMetricSources()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r8 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $z0 = interfaceinvoke $r8.<org.apache.ambari.server.metrics.system.MetricsSink: boolean isInitialized()>()
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r8 = <org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl: org.apache.ambari.server.metrics.system.MetricsSink sink> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $z0 = interfaceinvoke $r8.<org.apache.ambari.server.metrics.system.MetricsSink: boolean isInitialized()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $z0 != 0
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $z0 = interfaceinvoke $r8.<org.apache.ambari.server.metrics.system.MetricsSink: boolean isInitialized()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $z0 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $z0 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : goto [?= return]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : if $z0 != 0 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : goto [?= return] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : return
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r10 = new org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r10 = new org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r10.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1: void <init>(org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl)>(r0)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r10 = new org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1 >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r10.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1: void <init>(org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl)>(r0) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : specialinvoke $r10.<org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl$1: void <init>(org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl)>(r0) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r9.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r10, 5L, 5L, $r2)
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r9.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r10, 5L, 5L, $r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : goto [?= return]
org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : interfaceinvoke $r9.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>($r10, 5L, 5L, $r2) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsServiceImpl.start : $r12 := @caughtexception
