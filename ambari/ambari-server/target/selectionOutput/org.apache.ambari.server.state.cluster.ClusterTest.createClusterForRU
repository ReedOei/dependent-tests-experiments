org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r40 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r1, r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r40.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r41 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r41 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r4 = interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r4 = interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r1, $r42)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>(r1, $r42) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(long,long)>(1L, $l0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(long,long)>(1L, $l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r43 = new org.apache.ambari.server.state.cluster.ClusterTest$2
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r43 = new org.apache.ambari.server.state.cluster.ClusterTest$2 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r43.<org.apache.ambari.server.state.cluster.ClusterTest$2: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r43.<org.apache.ambari.server.state.cluster.ClusterTest$2: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r5 = $r43
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r5 = $r43 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r44 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r45 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r45 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r49 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r49 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r50 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r50 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r51 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r54 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r55 = interfaceinvoke $r54.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "HDFS")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r55 = interfaceinvoke $r54.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "HDFS") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r56 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r57 = interfaceinvoke $r56.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "ZOOKEEPER")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r57 = interfaceinvoke $r56.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "ZOOKEEPER") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r58 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r58 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r8 = interfaceinvoke $r58.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "GANGLIA")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r8 = interfaceinvoke $r58.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, "GANGLIA") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r55)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r55) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r57)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r57) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r8)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r59 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r59 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r9 = interfaceinvoke $r59.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "NAMENODE")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r9 = interfaceinvoke $r59.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "NAMENODE") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r60 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r10 = interfaceinvoke $r60.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "DATANODE")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r10 = interfaceinvoke $r60.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "DATANODE") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r61 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r61 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r11 = interfaceinvoke $r61.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "HDFS_CLIENT")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r11 = interfaceinvoke $r61.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r55, "HDFS_CLIENT") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r9)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r10)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r10) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r11)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r55.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r62 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r62 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r12 = interfaceinvoke $r62.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r57, "ZOOKEEPER_SERVER")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r12 = interfaceinvoke $r62.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r57, "ZOOKEEPER_SERVER") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r63 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r63 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r13 = interfaceinvoke $r63.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r57, "ZOOKEEPER_CLIENT")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r13 = interfaceinvoke $r63.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r57, "ZOOKEEPER_CLIENT") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r57.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r12)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r57.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r57.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r13)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r57.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r13) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r64 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r64 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r14 = interfaceinvoke $r64.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r8, "GANGLIA_SERVER")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r14 = interfaceinvoke $r64.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r8, "GANGLIA_SERVER") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r65 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r65 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r15 = interfaceinvoke $r65.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r8, "GANGLIA_MONITOR")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r15 = interfaceinvoke $r65.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r8, "GANGLIA_MONITOR") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r14)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r15)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r8.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r66 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r66 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r16 = interfaceinvoke $r66.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r9, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r16 = interfaceinvoke $r66.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r9, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r67 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r67 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r17 = interfaceinvoke $r67.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r10, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r17 = interfaceinvoke $r67.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r10, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r68 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r68 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r18 = interfaceinvoke $r68.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r11, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r18 = interfaceinvoke $r68.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r11, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r69 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r69 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r19 = interfaceinvoke $r69.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r19 = interfaceinvoke $r69.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r12, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r70 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r70 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r20 = interfaceinvoke $r70.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r20 = interfaceinvoke $r70.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r71 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r71 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r21 = interfaceinvoke $r71.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r21 = interfaceinvoke $r71.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r14, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r72 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r72 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r22 = interfaceinvoke $r72.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r22 = interfaceinvoke $r72.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r16)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r16) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r17)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r18)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r11.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r18) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r19)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r12.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r20)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r20) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r21)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r21) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r22)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r22) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r73 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r73 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r23 = interfaceinvoke $r73.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r23 = interfaceinvoke $r73.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r13, "h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r74 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r74 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r24 = interfaceinvoke $r74.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r24 = interfaceinvoke $r74.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r23)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r13.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r24)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r24) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r75 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r75 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r25 = interfaceinvoke $r75.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-3")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r25 = interfaceinvoke $r75.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, "h-3") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r25)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r25) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r26 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-1")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r26 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-1") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i1 = interfaceinvoke r26.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i1 = interfaceinvoke r26.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(7, $i1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-2")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-2") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i2 = interfaceinvoke r27.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i2 = interfaceinvoke r27.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(2, $i2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-3")
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>("h-3") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i3 = interfaceinvoke r28.<java.util.List: int size()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $i3 = interfaceinvoke r28.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r76 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r76 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r76.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r76.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r29 = $r76
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r29 = $r76 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r77 = new java.util.HashMap
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r77 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r77.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r77.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r30 = $r77
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r30 = $r77 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r78 = new org.apache.ambari.server.state.cluster.ClusterTest$3
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r78 = new org.apache.ambari.server.state.cluster.ClusterTest$3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r78.<org.apache.ambari.server.state.cluster.ClusterTest$3: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r78.<org.apache.ambari.server.state.cluster.ClusterTest$3: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r31 = $r78
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r31 = $r78 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r79 = new org.apache.ambari.server.state.cluster.ClusterTest$4
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r79 = new org.apache.ambari.server.state.cluster.ClusterTest$4 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r79.<org.apache.ambari.server.state.cluster.ClusterTest$4: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r79.<org.apache.ambari.server.state.cluster.ClusterTest$4: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r32 = $r79
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r32 = $r79 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r80 = new org.apache.ambari.server.state.cluster.ClusterTest$5
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r80 = new org.apache.ambari.server.state.cluster.ClusterTest$5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r80.<org.apache.ambari.server.state.cluster.ClusterTest$5: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke $r80.<org.apache.ambari.server.state.cluster.ClusterTest$5: void <init>(org.apache.ambari.server.state.cluster.ClusterTest)>(r0) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r33 = $r80
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r33 = $r80 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r31)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r31) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER", r32)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ZOOKEEPER", r32) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GANGLIA", r33)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : virtualinvoke r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GANGLIA", r33) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r84 = virtualinvoke r29.<java.util.HashMap: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r84 = virtualinvoke r29.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r34 = interfaceinvoke $r84.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r34 = interfaceinvoke $r84.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r85 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r91 = virtualinvoke r30.<java.util.HashMap: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r91 = virtualinvoke r30.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r92 = interfaceinvoke $r91.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r92 = interfaceinvoke $r91.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z6 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z6 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z6 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r93 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : return r4
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r93 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r94 = (java.lang.String) $r93
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r94 = (java.lang.String) $r93 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r95 = virtualinvoke r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r94)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r95 = virtualinvoke r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r94) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r96 = (java.util.Set) $r95
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r96 = (java.util.Set) $r95 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r97 = interfaceinvoke r96.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r97 = interfaceinvoke r96.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r98 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z6 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z6 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z6 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r98 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r99 = (java.lang.String) $r98
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r99 = (java.lang.String) $r98 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r100 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r100 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r101 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r101 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r102 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r102 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r103 = virtualinvoke $r100.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r101, $r102, r94, r99)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r103 = virtualinvoke $r100.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r101, $r102, r94, r99) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z8 = virtualinvoke r103.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z8 = virtualinvoke r103.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z8)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z7 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r85 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r35 = (java.lang.String) $r85
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r35 = (java.lang.String) $r85 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r86 = virtualinvoke r29.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r86 = virtualinvoke r29.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r36 = (java.util.Set) $r86
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r36 = (java.util.Set) $r86 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r37 = interfaceinvoke r36.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r37 = interfaceinvoke r36.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r87 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r87 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r38 = (java.lang.String) $r87
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r38 = (java.lang.String) $r87 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r88 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r88 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r89 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r89 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r90 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r90 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r39 = virtualinvoke $r88.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r89, $r90, r35, r38)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r39 = virtualinvoke $r88.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r89, $r90, r35, r38) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z5 = virtualinvoke r39.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z5 = virtualinvoke r39.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z5)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r51 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r52 = (org.apache.ambari.server.state.Host) $r51
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r52 = (org.apache.ambari.server.state.Host) $r51 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r53 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r53 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEALTHY> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r52.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r53)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke r52.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r53) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z2 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r47 = (java.lang.String) $r46
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r47 = (java.lang.String) $r46 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r48 = r0.<org.apache.ambari.server.state.cluster.ClusterTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r48.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r47, r1)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : interfaceinvoke $r48.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r47, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $r44 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r7 = (java.lang.String) $r44
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : r7 = (java.lang.String) $r44 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterTest: void addHost(java.lang.String,java.util.Map)>(r7, r3)
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterTest: void addHost(java.lang.String,java.util.Map)>(r7, r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterTest.createClusterForRU : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
