org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r16 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider clusters> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r18 = (org.apache.ambari.server.state.Clusters) $r17
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r18 = (org.apache.ambari.server.state.Clusters) $r17 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r7 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r7 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = r3
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = r3 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z0 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z0 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == r2
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider s_repoVersionDAO>
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider s_repoVersionDAO> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r20
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r20 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r10 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>($r22, r9)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r10 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>($r22, r9) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r10 != null
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r10 != null >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r23 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r10 != null >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r26 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_ambariMetaInfo>
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r26 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_ambariMetaInfo> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r27 = interfaceinvoke $r26.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r27 = interfaceinvoke $r26.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r28 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r27
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r28 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r27 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r29 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r29 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r11 = virtualinvoke $r28.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r29, $r30)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r11 = virtualinvoke $r28.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r29, $r30) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = null
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = null >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z2 = interfaceinvoke r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r13 = virtualinvoke $r32.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r13 = virtualinvoke $r32.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r33 = interfaceinvoke r11.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r33 = interfaceinvoke r11.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r14 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r14 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r34 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r43 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : return r12
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r43 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r45 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r45 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[0] = $r45
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[0] = $r45 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r46 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r46 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[1] = $r46
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[1] = $r46 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[2] = r9
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r44[2] = r9 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Could not locate %s upgrade pack for version %s", $r44)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Could not locate %s upgrade pack for version %s", $r44) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r43.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r47)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r43.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : throw $r43
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r34 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r15 = (org.apache.ambari.server.state.stack.UpgradePack) $r34
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r15 = (org.apache.ambari.server.state.stack.UpgradePack) $r34 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r35 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r35 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r35
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r35 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r36 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r35 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r36 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z4 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r13)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z4 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r37 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r37 = virtualinvoke r15.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r37
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r37 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r37 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = r15
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r38 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r38 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r40 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r40 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[0] = $r40
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[0] = $r40 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r41 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r41 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[1] = $r41
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[1] = $r41 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[2] = r9
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r39[2] = r9 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Found multiple upgrade packs for type %s and target version %s", $r39)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Found multiple upgrade packs for type %s and target version %s", $r39) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r38.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r42)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r38.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : throw $r38
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = r15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z2 = interfaceinvoke r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r31 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r31 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = (org.apache.ambari.server.state.stack.UpgradePack) $r31
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r12 = (org.apache.ambari.server.state.stack.UpgradePack) $r31 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r12
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r23 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24[0] = r9
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24[0] = r9 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Repository version %s was not found", $r24)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Repository version %s was not found", $r24) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r23.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r23.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : throw $r23
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == r2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = r2
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == r2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider s_repoVersionDAO>
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider s_repoVersionDAO>
