org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r9 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.LogicalRequestFactory logicalRequestFactory> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r10 = virtualinvoke r1.<org.apache.ambari.server.topology.PersistedTopologyRequest: org.apache.ambari.server.topology.TopologyRequest getRequest()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r10 = virtualinvoke r1.<org.apache.ambari.server.topology.PersistedTopologyRequest: org.apache.ambari.server.topology.TopologyRequest getRequest()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r4 = virtualinvoke $r9.<org.apache.ambari.server.topology.LogicalRequestFactory: org.apache.ambari.server.topology.LogicalRequest createRequest(java.lang.Long,org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology)>(r3, $r10, r2)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r4 = virtualinvoke $r9.<org.apache.ambari.server.topology.LogicalRequestFactory: org.apache.ambari.server.topology.LogicalRequest createRequest(java.lang.Long,org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology)>(r3, $r10, r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r11 = new org.apache.ambari.server.topology.TopologyManager$3
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r11 = new org.apache.ambari.server.topology.TopologyManager$3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : specialinvoke $r11.<org.apache.ambari.server.topology.TopologyManager$3: void <init>(org.apache.ambari.server.topology.TopologyManager,org.apache.ambari.server.topology.LogicalRequest,org.apache.ambari.server.topology.PersistedTopologyRequest)>(r0, r4, r1)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : specialinvoke $r11.<org.apache.ambari.server.topology.TopologyManager$3: void <init>(org.apache.ambari.server.topology.TopologyManager,org.apache.ambari.server.topology.LogicalRequest,org.apache.ambari.server.topology.PersistedTopologyRequest)>(r0, r4, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r11)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : staticinvoke <org.apache.ambari.server.utils.RetryHelper: java.lang.Object executeWithRetry(java.util.concurrent.Callable)>($r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $l0 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $l0 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r4)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r16 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r16 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $l1 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $l1 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.createLogicalRequest: created LogicalRequest with ID = {} and completed persistence of this request.", $r17)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.createLogicalRequest: created LogicalRequest with ID = {} and completed persistence of this request.", $r17) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r5 = $r18
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r5 = $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : entermonitor $r18
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : entermonitor $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r19 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : entermonitor $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r8 = $r23 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r8 = $r23 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : throw r8
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r19 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r19 = virtualinvoke r4.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : if $z0 == 0
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : goto [?= return r4]
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : exitmonitor r5 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : goto [?= return r4] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : return r4
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r7 = (java.lang.String) $r20
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r7 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : r7 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r4)
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.createLogicalRequest : $r23 := @caughtexception
