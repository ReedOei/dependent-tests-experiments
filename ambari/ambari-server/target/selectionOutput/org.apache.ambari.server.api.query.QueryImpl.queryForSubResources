org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r16 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r1 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r1 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r18 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : return
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r18 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r2 = (java.util.Map$Entry) $r18
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r2 = (java.util.Map$Entry) $r18 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r3 = (org.apache.ambari.server.api.query.QueryImpl) $r19
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r3 = (org.apache.ambari.server.api.query.QueryImpl) $r19 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r20 = virtualinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r20 = virtualinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r4 = interfaceinvoke $r20.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r4 = interfaceinvoke $r20.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r5 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r5 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r21 = new java.util.HashSet
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r21 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r21.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r21.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r6 = $r21
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r6 = $r21 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r22 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map populatedQueryResults>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r22 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map populatedQueryResults> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r7 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r7 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r47 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r47 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z5 = interfaceinvoke $r47.<org.apache.ambari.server.api.query.render.Renderer: boolean requiresPropertyProviderInput()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z5 = interfaceinvoke $r47.<org.apache.ambari.server.api.query.render.Renderer: boolean requiresPropertyProviderInput()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z5 == 0
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z5 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r48 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z5 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: void queryForSubResources()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: void queryForSubResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r48 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r49 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r49 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r48.<org.apache.ambari.server.controller.spi.ClusterController: java.util.Set populateResources(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r4, r6, r5, $r49)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r48.<org.apache.ambari.server.controller.spi.ClusterController: java.util.Set populateResources(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r4, r6, r5, $r49) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: void queryForSubResources()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r8 = (org.apache.ambari.server.api.query.QueryImpl$QueryResult) $r24
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r8 = (org.apache.ambari.server.api.query.QueryImpl$QueryResult) $r24 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r25 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: org.apache.ambari.server.controller.spi.QueryResponse getQueryResponse()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r25 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: org.apache.ambari.server.controller.spi.QueryResponse getQueryResponse()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r9 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r9 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z2 == 0
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r27 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r27 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r10 = (org.apache.ambari.server.controller.spi.Resource) $r27
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r10 = (org.apache.ambari.server.controller.spi.Resource) $r27 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r28 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r28 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r11 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap(org.apache.ambari.server.controller.spi.Resource,java.util.Map)>(r10, $r28)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r11 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap(org.apache.ambari.server.controller.spi.Resource,java.util.Map)>(r10, $r28) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r29 = r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r29 = r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r12 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>(r11, $r29)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r12 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>(r11, $r29) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r30 = new java.util.LinkedHashSet
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r30 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r30.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r30.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r13 = $r30
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r13 = $r30 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r32 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r13 = $r30 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r34 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r13 = $r30 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r31 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.QueryResponse doQuery(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,boolean)>(r4, r5, r12, 0)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r31 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.QueryResponse doQuery(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,boolean)>(r4, r5, r12, 0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r32 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r31 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.QueryResponse doQuery(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,boolean)>(r4, r5, r12, 0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r34 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r31 = specialinvoke r3.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.QueryResponse doQuery(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,boolean)>(r4, r5, r12, 0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r14 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r14 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r32 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r14 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r34 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r14 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.QueryResponse: java.util.Set getResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r14)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r32 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r34 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r13.<java.util.Set: boolean addAll(java.util.Collection)>(r14)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r13.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r32 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r13.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r34 := @caughtexception
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke r13.<java.util.Set: boolean addAll(java.util.Collection)>(r14) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>]
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r39 = new org.apache.ambari.server.api.query.QueryImpl$QueryResult
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r39 = new org.apache.ambari.server.api.query.QueryImpl$QueryResult >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r15 = new org.apache.ambari.server.controller.internal.QueryResponseImpl
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r15 = new org.apache.ambari.server.controller.internal.QueryResponseImpl >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r15.<org.apache.ambari.server.controller.internal.QueryResponseImpl: void <init>(java.util.Set)>(r13)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r15.<org.apache.ambari.server.controller.internal.QueryResponseImpl: void <init>(java.util.Set)>(r13) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r39.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: void <init>(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.spi.Predicate,java.util.Map,org.apache.ambari.server.controller.spi.QueryResponse,org.apache.ambari.server.api.query.QueryImpl$1)>(r5, r12, $r40, r11, $r15, null)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r39.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: void <init>(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.spi.Predicate,java.util.Map,org.apache.ambari.server.controller.spi.QueryResponse,org.apache.ambari.server.api.query.QueryImpl$1)>(r5, r12, $r40, r11, $r15, null) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r39)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r39) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r42 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map populatedQueryResults>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r42 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map populatedQueryResults> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r43 = new org.apache.ambari.server.api.query.QueryImpl$QueryResult
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r43 = new org.apache.ambari.server.api.query.QueryImpl$QueryResult >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r44 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r44 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r45 = new org.apache.ambari.server.controller.internal.QueryResponseImpl
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r45 = new org.apache.ambari.server.controller.internal.QueryResponseImpl >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r45.<org.apache.ambari.server.controller.internal.QueryResponseImpl: void <init>(java.util.Set)>(r13)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r45.<org.apache.ambari.server.controller.internal.QueryResponseImpl: void <init>(java.util.Set)>(r13) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r43.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: void <init>(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.spi.Predicate,java.util.Map,org.apache.ambari.server.controller.spi.QueryResponse,org.apache.ambari.server.api.query.QueryImpl$1)>(r5, r12, $r44, r11, $r45, null)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : specialinvoke $r43.<org.apache.ambari.server.api.query.QueryImpl$QueryResult: void <init>(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.spi.Predicate,java.util.Map,org.apache.ambari.server.controller.spi.QueryResponse,org.apache.ambari.server.api.query.QueryImpl$1)>(r5, r12, $r44, r11, $r45, null) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r43)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r43) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r35 = $r34 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r36 = <org.apache.ambari.server.api.query.QueryImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r36 = <org.apache.ambari.server.api.query.QueryImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r37 = virtualinvoke r4.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r37 = virtualinvoke r4.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("User does not have authorization to get {} resources. The data will not be added to the response.", $r37)
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("User does not have authorization to get {} resources. The data will not be added to the response.", $r37) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : r33 = $r32 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>]
org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : goto [?= $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForSubResources : $r38 = r3.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map queryResults>
