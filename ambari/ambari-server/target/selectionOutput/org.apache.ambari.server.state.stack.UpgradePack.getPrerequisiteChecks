org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : $r2 = r0.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteChecks prerequisiteChecks>
org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : $r2 = r0.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteChecks prerequisiteChecks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : $r3 = $r2.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteChecks: java.util.List checks>
org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : $r3 = $r2.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteChecks: java.util.List checks> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getPrerequisiteChecks : return $r1
