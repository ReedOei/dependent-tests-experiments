org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9 >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site")
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site") >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r11 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.allow.truncate")
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.allow.truncate") >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r6 = (java.lang.String) $r12
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r6 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r6)
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $z0 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : return
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke $r14.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HDFS")
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke $r14.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r7 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : r7 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>(r7)
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>(r7) >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r15)
org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.checks.ServicesNamenodeTruncateCheck.perform : return
