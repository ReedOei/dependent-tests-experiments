org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r16 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r16 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : z2 = 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : z2 = 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r22 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r22 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r22 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r23 = "distributed"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r22 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r26 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ams-hbase-site") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r26 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r26 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r10 = interfaceinvoke r26.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if r26 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r10 = interfaceinvoke r26.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r27 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.rootdir")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r27 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("hbase.rootdir") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r11 = (java.lang.String) $r27
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r11 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r11)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z5 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("hdfs://")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z5 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("hdfs://") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : i0 = virtualinvoke r11.<java.lang.String: int indexOf(java.lang.String,int)>("/", 7)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : i0 = virtualinvoke r11.<java.lang.String: int indexOf(java.lang.String,int)>("/", 7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r28 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r12 = $r28
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r12 = $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r13 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r13 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.rootdir", r13)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hbase.rootdir", r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r30 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r30 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r31 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changing ams-hbase-site rootdir to ")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changing ams-hbase-site rootdir to ") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>($r34)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke $r30.<org.slf4j.Logger: void info(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r12, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-hbase-site", r12, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r23 = "distributed" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r24 = interfaceinvoke r22.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r24 = interfaceinvoke r22.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.operation.mode")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("timeline.metrics.service.operation.mode") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : z2 = 1
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : z2 = 1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : if z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r18 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r18 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r8 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r8 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r19 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r9 = $r19
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : r9 = $r19 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r20 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: java.lang.String updateAmsEnvContent(java.lang.String)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : $r20 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: java.lang.String updateAmsEnvContent(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r20)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", $r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-env", r9, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "ams-env", r9, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAMSConfigs : z2 = 0
