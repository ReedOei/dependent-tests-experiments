org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r1 = new java.io.File >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir")
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r10 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r10 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view.xml")
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r13)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r3 = $r1
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r3 = $r1 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r3.<java.io.File: boolean createNewFile()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r3.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r14 = new java.io.FileInputStream
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r14 = new java.io.FileInputStream >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(r3)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r4 = $r14
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r4 = $r14 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r15 = new java.util.zip.ZipOutputStream
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r15 = new java.util.zip.ZipOutputStream >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r16 = new java.io.FileOutputStream
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r16 = new java.io.FileOutputStream >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r5 = new java.io.File
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r17 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcherTest: java.io.File testDir>
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r17 = r0.<org.apache.ambari.server.view.ViewDirectoryWatcherTest: java.io.File testDir> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r17, "file.jar")
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r17, "file.jar") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>($r5)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>($r5) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r15.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r16)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r15.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r16) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r6 = $r15
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r6 = $r15 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r18 = new java.util.zip.ZipEntry
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r18 = new java.util.zip.ZipEntry >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r18.<java.util.zip.ZipEntry: void <init>(java.lang.String)>("view.xml")
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : specialinvoke $r18.<java.util.zip.ZipEntry: void <init>(java.lang.String)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r18)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r18) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r7 = newarray (byte)[1024]
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : r7 = newarray (byte)[1024] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $i1 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r7)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $i1 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r7) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : i0 = $i1
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : i0 = $i1 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : if $i1 <= 0
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r19 = <java.lang.System: java.io.PrintStream out>
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void close()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r4.<java.io.FileInputStream: void close()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r4.<java.io.FileInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : return
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $r19 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke $r19.<java.io.PrintStream: void println()>()
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke $r19.<java.io.PrintStream: void println()>() >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r7, 0, i0)
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : virtualinvoke r6.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r7, 0, i0) >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : goto [?= $i1 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r7)]
org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : goto [?= $i1 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r7)] >>>>>>>> org.apache.ambari.server.view.ViewDirectoryWatcherTest.createZipFile : $i1 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r7)
