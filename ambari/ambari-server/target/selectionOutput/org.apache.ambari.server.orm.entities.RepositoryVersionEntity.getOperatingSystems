org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r2)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r3 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : r1 = $r8 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r9 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r9 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse operating systems json stored in database:")
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse operating systems json stored in database:") >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r12 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r14, r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r14, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : return $r15
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r3 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r3 = <org.apache.ambari.server.orm.entities.RepositoryVersionEntity: com.google.inject.Provider repositoryVersionHelperProvider> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r4
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r5 = (org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper) $r4 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = virtualinvoke $r5.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r6)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_operatingSystems()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = virtualinvoke $r5.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : return $r7
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r7 = virtualinvoke $r5.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.util.List parseOperatingSystems(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getOperatingSystems : $r8 := @caughtexception
