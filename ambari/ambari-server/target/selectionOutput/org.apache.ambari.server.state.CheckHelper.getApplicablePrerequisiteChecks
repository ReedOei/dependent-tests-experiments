org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r3 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r3.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r3.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r4 = $r3
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r4 = $r3 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z0 == 0
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : return r4
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r7 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r10
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r7 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r10 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r11 = new org.apache.ambari.server.state.stack.PrerequisiteCheck
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r11 = new org.apache.ambari.server.state.stack.PrerequisiteCheck >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r12 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r12 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r11.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void <init>(org.apache.ambari.server.checks.CheckDescription,java.lang.String)>($r12, r5)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r11.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void <init>(org.apache.ambari.server.checks.CheckDescription,java.lang.String)>($r12, r5) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r8 = $r11
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r8 = $r11 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z1 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r8 = $r11 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : r9 = $r14 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r15 = <org.apache.ambari.server.state.CheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r15 = <org.apache.ambari.server.state.CheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check ")
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check ") >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r18 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r18 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r19 = virtualinvoke $r18.<org.apache.ambari.server.checks.CheckDescription: java.lang.String name()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r19 = virtualinvoke $r18.<org.apache.ambari.server.checks.CheckDescription: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed")
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed") >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r22, r9)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r22, r9) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z1 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z1 == 0
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $z1 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r13 = new org.apache.ambari.server.state.DescriptorPreCheck
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= (branch)]
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r13 = new org.apache.ambari.server.state.DescriptorPreCheck >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r13.<org.apache.ambari.server.state.DescriptorPreCheck: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,org.apache.ambari.server.state.stack.PrerequisiteCheck)>(r7, r8)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r13 = new org.apache.ambari.server.state.DescriptorPreCheck >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r13.<org.apache.ambari.server.state.DescriptorPreCheck: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,org.apache.ambari.server.state.stack.PrerequisiteCheck)>(r7, r8) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : specialinvoke $r13.<org.apache.ambari.server.state.DescriptorPreCheck: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,org.apache.ambari.server.state.stack.PrerequisiteCheck)>(r7, r8) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : goto [?= (branch)]
org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.state.CheckHelper.getApplicablePrerequisiteChecks : $r14 := @caughtexception
