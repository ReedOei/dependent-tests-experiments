org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if null == r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if null == r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : return $r5
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r1 = $r6
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r1 = $r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = null
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = 0
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : return r1
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r4 = (org.apache.ambari.server.state.stack.upgrade.Task) $r7
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r4 = (org.apache.ambari.server.state.stack.upgrade.Task) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r8 = new org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 <= 0
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if i0 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r14 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: java.util.List access$200(org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket)>(r2)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r14 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: java.util.List access$200(org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = i0 + 1
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $i1 = i0 - 1
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $i1 = i0 - 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r11 = (org.apache.ambari.server.state.stack.upgrade.Task) $r10
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r11 = (org.apache.ambari.server.state.stack.upgrade.Task) $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r12 = virtualinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r12 = virtualinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $r9 == $r12
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $r9 == $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r13 = new org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : if $r9 == $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r14 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: java.util.List access$200(org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket)>(r2)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r13 = new org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: void <init>(org.apache.ambari.server.state.stack.upgrade.Task,org.apache.ambari.server.state.stack.upgrade.Grouping$1)>(r4, null)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: void <init>(org.apache.ambari.server.state.stack.upgrade.Task,org.apache.ambari.server.state.stack.upgrade.Grouping$1)>(r4, null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = $r13
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = $r13 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= i0 = i0 + 1]
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= i0 = i0 + 1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = i0 + 1
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : $r8 = new org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: void <init>(org.apache.ambari.server.state.stack.upgrade.Task,org.apache.ambari.server.state.stack.upgrade.Grouping$1)>(r4, null)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.Grouping$TaskBucket: void <init>(org.apache.ambari.server.state.stack.upgrade.Task,org.apache.ambari.server.state.stack.upgrade.Grouping$1)>(r4, null) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = $r8
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : r2 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= i0 = i0 + 1]
org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : goto [?= i0 = i0 + 1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping.buckets : i0 = i0 + 1
