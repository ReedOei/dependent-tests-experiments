org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n0 = null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n0 = null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r8 := @caughtexception
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r5 = $r8 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r9 = <org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.slf4j.Logger LOG>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r9 = <org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling service create, serviceName=")
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling service create, serviceName=") >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r13)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r14 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceFactory serviceFactory>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r14 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceFactory serviceFactory> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r1, r2)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.ServiceFactory: org.apache.ambari.server.state.Service createNew(org.apache.ambari.server.state.Cluster,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r7)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addService(org.apache.ambari.server.state.Service)>(r7) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n1 = null
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n1 = null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n1 = null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r16 := @caughtexception
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r6 = $r16 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r17 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r17 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentFactory serviceComponentFactory> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r15 = interfaceinvoke $r17.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, r3)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r15 = interfaceinvoke $r17.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r7, r3) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r15)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r15) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r18 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r18 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r19 = interfaceinvoke $r18.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, r4)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r19 = interfaceinvoke $r18.<org.apache.ambari.server.state.ServiceComponentHostFactory: org.apache.ambari.server.state.ServiceComponentHost createNew(org.apache.ambari.server.state.ServiceComponent,java.lang.String)>(r15, r4) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r20 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r21 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r21 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r20, $r21) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r22 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r22 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r23 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r23 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r22, $r23) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r24 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState UNSECURED>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r24 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState UNSECURED> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r25 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.SecurityState getSecurityState()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r25 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.SecurityState getSecurityState()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r24, $r25) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r26 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState UNSECURED>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r26 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState UNSECURED> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r27 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.SecurityState getDesiredSecurityState()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r27 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.SecurityState getDesiredSecurityState()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r26, $r27) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r28 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r29 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getClusterName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r29 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r28, $r29) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $l0 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $l0 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $l1 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: long getClusterId()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $l1 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l1)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l0, $l1) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r31 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r31 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r31) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r32 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r32 = interfaceinvoke r15.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r33 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r33 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r34 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r34 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r34)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r4, $r34) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r35 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>(r4)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r35 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r35)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r36 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r36 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r37 = virtualinvoke $r36.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r37 = virtualinvoke $r36.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $z0 = virtualinvoke $r37.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $z0 = virtualinvoke $r37.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r38 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getStackVersion()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r38 = interfaceinvoke r19.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.StackId getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r39 = virtualinvoke $r38.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $z1 = virtualinvoke $r39.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $z1 = virtualinvoke $r39.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : return r19
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : goto [?= $r18 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>]
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r16 := @caughtexception
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : goto [?= $r18 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>] >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r18 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest: org.apache.ambari.server.state.ServiceComponentHostFactory serviceComponentHostFactory>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : goto [?= n1 = null]
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : $r8 := @caughtexception
org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : goto [?= n1 = null] >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostTest.createNewServiceComponentHost : n1 = null
