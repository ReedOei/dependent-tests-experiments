org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r3 = $r2
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r3 = $r2 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("upgrades")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("upgrades") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r11 = new java.io.File
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r32 != null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r32 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r33 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r32 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z3 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z3 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 != 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.util.Map upgradePacks> = r3
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 == null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = r4
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r35 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r35 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r36 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r36 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain config upgrade pack file", $r36)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain config upgrade pack file", $r36) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : return
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = r4 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= return]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= return] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : return
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.util.Map upgradePacks> = r3 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 == null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r33 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r34 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r34 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain an upgrade directory ", $r34)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain an upgrade directory ", $r34) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z3 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r11 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r12 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r12 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r14 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r14 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("upgrades")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("upgrades") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r6 = $r11
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r6 = $r11 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z1 = virtualinvoke r6.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z1 = virtualinvoke r6.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r18 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r18 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> = $r18
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> = $r18 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r19 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter XML_FILENAME_FILTER>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r19 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter XML_FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r19)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r19) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i0 = lengthof r7
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i0 = lengthof r7 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r8 = r7[i1]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r8 = r7[i1] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r20 = virtualinvoke r8.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r20 = virtualinvoke r8.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z2 = virtualinvoke $r21.<java.lang.String: boolean startsWith(java.lang.String)>("config-upgrade.xml")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z2 = virtualinvoke $r21.<java.lang.String: boolean startsWith(java.lang.String)>("config-upgrade.xml") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 != null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r30 = virtualinvoke r8.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r30 = virtualinvoke r8.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r30)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r9 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r10 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.UpgradePack parseUpgradePack(java.lang.String,java.io.File)>(r9, r8)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r10 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.UpgradePack parseUpgradePack(java.lang.String,java.io.File)>(r9, r8) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : virtualinvoke r10.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r9)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : virtualinvoke r10.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= (branch)]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack parseConfigUpgradePack(java.io.File)>(r8)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r4 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r22 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r22 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are multiple files with name like %s")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are multiple files with name like %s") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r25 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r25 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r28 = newarray (java.lang.Object)[0]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r28 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r27, $r28)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r27, $r28) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r29)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : throw $r22
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack parseConfigUpgradePack(java.io.File)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= i1 = i1 + 1]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1
