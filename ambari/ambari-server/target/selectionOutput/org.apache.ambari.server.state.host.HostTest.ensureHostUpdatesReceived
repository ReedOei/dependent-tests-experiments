org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : $r2 = new org.apache.ambari.server.state.host.HostStatusUpdatesReceivedEvent >>>>>>>> org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : specialinvoke $r2.<org.apache.ambari.server.state.host.HostStatusUpdatesReceivedEvent: void <init>(java.lang.String,long)>($r4, 1L)
org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : specialinvoke $r2.<org.apache.ambari.server.state.host.HostStatusUpdatesReceivedEvent: void <init>(java.lang.String,long)>($r4, 1L) >>>>>>>> org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : r3 = $r2
org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : interfaceinvoke r1.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>(r3)
org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : interfaceinvoke r1.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>(r3) >>>>>>>> org.apache.ambari.server.state.host.HostTest.ensureHostUpdatesReceived : return
