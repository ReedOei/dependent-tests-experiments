org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r2 = "HDP" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r3 = "2.4"
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r3 = "2.4" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r4 = "NAMENODE"
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r4 = "NAMENODE" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r5 = "HDFS"
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r5 = "HDFS" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r6 = "hdfs_namenode"
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r6 = "hdfs_namenode" >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r21 = new org.easymock.EasyMockSupport
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r21 = new org.easymock.EasyMockSupport >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : specialinvoke $r21.<org.easymock.EasyMockSupport: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : specialinvoke $r21.<org.easymock.EasyMockSupport: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r7 = $r21
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r7 = $r21 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r22 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r22 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r8 = (org.apache.ambari.server.controller.spi.Resource) $r22
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r8 = (org.apache.ambari.server.controller.spi.Resource) $r22 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r23 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r23 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r24 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r23)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r24 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r28 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r28 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r29 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r28)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r29 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r31 = interfaceinvoke $r30.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r33 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r33 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r34 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r33)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r34 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r35 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterone")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r36 = interfaceinvoke $r35.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("clusterone") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r36.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r38 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r38 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Request") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r9 = (org.apache.ambari.server.controller.spi.Request) $r38
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r9 = (org.apache.ambari.server.controller.spi.Request) $r38 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r39 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Predicate")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r39 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Predicate") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r10 = (org.apache.ambari.server.controller.spi.Predicate) $r39
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r10 = (org.apache.ambari.server.controller.spi.Predicate) $r39 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r40 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r40 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r11 = (org.apache.ambari.server.controller.AmbariManagementController) $r40
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r11 = (org.apache.ambari.server.controller.AmbariManagementController) $r40 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r41 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r41 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r12 = (org.apache.ambari.server.state.Clusters) $r41
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r12 = (org.apache.ambari.server.state.Clusters) $r41 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r42 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r42 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r13 = (org.apache.ambari.server.state.Cluster) $r42
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r13 = (org.apache.ambari.server.state.Cluster) $r42 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r43 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LogSearchDataRetrievalService")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r43 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LogSearchDataRetrievalService") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r14 = (org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService) $r43
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r14 = (org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService) $r43 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r44 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LoggingRequestHelperFactory")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r44 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LoggingRequestHelperFactory") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r15 = (org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory) $r44
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r15 = (org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory) $r44 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : if z0 == 0
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r45 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r95 = interfaceinvoke r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r95 = interfaceinvoke r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r99 = interfaceinvoke r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("clusterone")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r99 = interfaceinvoke r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("clusterone") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r103 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r103 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r105 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r105 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r7.<org.easymock.EasyMockSupport: void replayAll()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r7.<org.easymock.EasyMockSupport: void replayAll()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer: void viewInstanceDAOReturningNull()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelperInitializer: void viewInstanceDAOReturningNull()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r108 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r108 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r108.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r108.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r109 = new org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r109 = new org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : specialinvoke $r109.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void <init>()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : specialinvoke $r109.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r110 = $r109
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r110 = $r109 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setAmbariManagementController(org.apache.ambari.server.controller.AmbariManagementController)>(r11)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setAmbariManagementController(org.apache.ambari.server.controller.AmbariManagementController)>(r11) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setLogSearchDataRetrievalService(org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService)>(r14)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setLogSearchDataRetrievalService(org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService)>(r14) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setLoggingRequestHelperFactory(org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory)>(r15)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: void setLoggingRequestHelperFactory(org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory)>(r15) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r111 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r111 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r112 = virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r111, r9, r10)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r112 = virtualinvoke r110.<org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r111, r9, r10) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $i0 = interfaceinvoke r112.<java.util.Set: int size()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $i0 = interfaceinvoke r112.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $l1 = (long) $i0
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Returned resource set was of an incorrect size", 1L, $l1)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Returned resource set was of an incorrect size", 1L, $l1) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r113 = interfaceinvoke r112.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r113 = interfaceinvoke r112.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r114 = interfaceinvoke $r113.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r114 = interfaceinvoke $r113.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Returned resource was not the expected instance.", r8, $r114)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : staticinvoke <org.junit.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>("Returned resource was not the expected instance.", r8, $r114) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r7.<org.easymock.EasyMockSupport: void verifyAll()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : virtualinvoke r7.<org.easymock.EasyMockSupport: void verifyAll()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : return
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r45 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r16 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r45
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r16 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r45 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r46 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r46 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r17 = (org.apache.ambari.server.state.StackId) $r46
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r17 = (org.apache.ambari.server.state.StackId) $r46 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r47 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/LogDefinition")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r47 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/LogDefinition") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r18 = (org.apache.ambari.server.state.LogDefinition) $r47
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r18 = (org.apache.ambari.server.state.LogDefinition) $r47 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r48 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ComponentInfo")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r48 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/state/ComponentInfo") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r19 = (org.apache.ambari.server.state.ComponentInfo) $r48
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r19 = (org.apache.ambari.server.state.ComponentInfo) $r48 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r49 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LoggingRequestHelper")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r49 = virtualinvoke r7.<org.easymock.EasyMockSupport: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/logging/LoggingRequestHelper") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r20 = (org.apache.ambari.server.controller.logging.LoggingRequestHelper) $r49
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : r20 = (org.apache.ambari.server.controller.logging.LoggingRequestHelper) $r49 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r50 = interfaceinvoke r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r50 = interfaceinvoke r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r52 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r54 = virtualinvoke r17.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r54 = virtualinvoke r17.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r55 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r56 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r56 = interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r58 = virtualinvoke r17.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r58 = virtualinvoke r17.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r59 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.4")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r60 = interfaceinvoke $r59.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.4") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r62 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r62 = interfaceinvoke r13.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r17)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r66 = virtualinvoke r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getComponentToService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.4", "NAMENODE")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r66 = virtualinvoke r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getComponentToService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.4", "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r70 = virtualinvoke r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.4", "HDFS", "NAMENODE")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r70 = virtualinvoke r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.4", "HDFS", "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r74 = virtualinvoke r14.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set getLogFileNames(java.lang.String,java.lang.String,java.lang.String)>("hdfs_namenode", "c6401.ambari.apache.org", "clusterone")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r74 = virtualinvoke r14.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set getLogFileNames(java.lang.String,java.lang.String,java.lang.String)>("hdfs_namenode", "c6401.ambari.apache.org", "clusterone") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r78 = virtualinvoke r19.<org.apache.ambari.server.state.ComponentInfo: java.util.List getLogs()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r78 = virtualinvoke r19.<org.apache.ambari.server.state.ComponentInfo: java.util.List getLogs()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r80 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r18)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r80 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r18) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r81 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r83 = virtualinvoke r18.<org.apache.ambari.server.state.LogDefinition: java.lang.String getLogId()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r83 = virtualinvoke r18.<org.apache.ambari.server.state.LogDefinition: java.lang.String getLogId()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r84 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r83) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("hdfs_namenode")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r85 = interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("hdfs_namenode") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r87 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r87 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r88 = (org.apache.ambari.server.controller.AmbariManagementController) $r87
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r88 = (org.apache.ambari.server.controller.AmbariManagementController) $r87 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r89 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r89 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r90 = (java.lang.String) $r89
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r90 = (java.lang.String) $r89 >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r91 = interfaceinvoke r15.<org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory: org.apache.ambari.server.controller.logging.LoggingRequestHelper getHelper(org.apache.ambari.server.controller.AmbariManagementController,java.lang.String)>($r88, $r90)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r91 = interfaceinvoke r15.<org.apache.ambari.server.controller.logging.LoggingRequestHelperFactory: org.apache.ambari.server.controller.logging.LoggingRequestHelper getHelper(org.apache.ambari.server.controller.AmbariManagementController,java.lang.String)>($r88, $r90) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20)
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.controller.logging.LoggingSearchPropertyProviderTest.testCheckWhenLogSearchNotAvailable : $r95 = interfaceinvoke r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
