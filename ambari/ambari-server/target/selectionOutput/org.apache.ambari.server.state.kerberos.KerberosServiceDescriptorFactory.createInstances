org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r3 = $r2
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r1 == null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("services")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r16 = newarray (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor)[$i0]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r16 = newarray (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor)[$i0] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r18 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor[]) $r17
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r18 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor[]) $r17 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : return $r18
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("services") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r4 != null
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r7 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if r4 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z0 = r4 instanceof java.util.Collection
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z0 = r4 instanceof java.util.Collection >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r8 = (java.util.Collection) r4
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r11 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r11 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r13 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r12[0] = $r14
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r12[0] = $r14 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected top-level \"services\" type in service-level Kerberos descriptor data: %s", $r12)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected top-level \"services\" type in service-level Kerberos descriptor data: %s", $r12) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r15)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r11.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r11
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r8 = (java.util.Collection) r4 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : goto [?= $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : goto [?= $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z2 = r6 instanceof java.util.Map
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z2 = r6 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z2 == 0
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r9 = new org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r9 = new org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r10 = (java.util.Map) r6
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r10 = (java.util.Map) r6 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void <init>(java.util.Map)>($r10)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: void <init>(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : $r7 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing top-level \"services\" property in service-level Kerberos descriptor data")
org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Missing top-level \"services\" property in service-level Kerberos descriptor data") >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosServiceDescriptorFactory.createInstances : throw $r7
