org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : r14 = $r13 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while validating if request is secure ")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while validating if request is secure ") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 = virtualinvoke r14.<java.lang.Exception: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 = virtualinvoke r14.<java.lang.Exception: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r20)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r21 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r21 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match any pattern.")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match any pattern.") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r21.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r26)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r21.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r2 = new java.net.URL >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r2 = new java.net.URL >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : r3 = $r2
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = "https"
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = "https" >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = "https" >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r9 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r9 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r9)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r9 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r9) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r9) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r10)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r10) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r10) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z5 = 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r11 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r11 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z6 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r11)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r11 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z6 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r11) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z6 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z6 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r11) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z7 = 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r12 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r12 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z8 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r12)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r12 = virtualinvoke r3.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z8 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r12) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z8 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z8 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r12) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z9 = 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : goto [?= $r21 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>]
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z8 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : goto [?= $r21 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r21 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z9 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return $z9
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z9 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z7 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return $z7
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z7 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z5 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return $z5
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z5 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return $z3
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = 1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = <org.apache.ambari.server.security.SecurityFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7[0] = r1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r7)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r7) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r8)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r7) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return $z1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 := @caughtexception
