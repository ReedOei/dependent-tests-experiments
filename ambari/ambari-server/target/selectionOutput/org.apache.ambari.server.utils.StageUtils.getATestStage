org.apache.ambari.server.utils.StageUtils.getATestStage : $r4 = <org.apache.ambari.server.utils.StageUtils: org.apache.ambari.server.actionmanager.StageFactory stageFactory> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r5 = interfaceinvoke $r4.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, "context", r1, r2, r3)
org.apache.ambari.server.utils.StageUtils.getATestStage : r5 = interfaceinvoke $r4.<org.apache.ambari.server.actionmanager.StageFactory: org.apache.ambari.server.actionmanager.Stage createNew(long,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(l0, "/tmp", "cluster1", 1L, "context", r1, r2, r3) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void setStageId(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r6 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role NAMENODE>
org.apache.ambari.server.utils.StageUtils.getATestStage : $r6 = <org.apache.ambari.server.Role: org.apache.ambari.server.Role NAMENODE> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r17 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.utils.StageUtils.getATestStage : $r17 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r18 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent
org.apache.ambari.server.utils.StageUtils.getATestStage : $r18 = new org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r18.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent: void <init>(java.lang.String,java.lang.String,long,java.lang.String)>("NAMENODE", r0, l2, "HDP-1.2.0")
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r18.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostInstallEvent: void <init>(java.lang.String,java.lang.String,long,java.lang.String)>("NAMENODE", r0, l2, "HDP-1.2.0") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,java.lang.String,java.lang.String,boolean,boolean)>(r0, $r6, $r17, $r18, "cluster1", "HDFS", 0, 0)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,java.lang.String,java.lang.String,boolean,boolean)>(r0, $r6, $r17, $r18, "cluster1", "HDFS", 0, 0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r19 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r0, "NAMENODE")
org.apache.ambari.server.utils.StageUtils.getATestStage : $r19 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r0, "NAMENODE") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r7 = virtualinvoke $r19.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : r7 = virtualinvoke $r19.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $l3 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: long getRequestId()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : $l3 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: long getRequestId()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $l4 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: long getStageId()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : $l4 = virtualinvoke r5.<org.apache.ambari.server.actionmanager.Stage: long getStageId()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l3, $l4)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l3, $l4) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r20 = new java.util.ArrayList
org.apache.ambari.server.utils.StageUtils.getATestStage : $r20 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r20.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r20.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r8 = $r20
org.apache.ambari.server.utils.StageUtils.getATestStage : r8 = $r20 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>("host2")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>("host2") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r21 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r21 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r21.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r21.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r9 = $r21
org.apache.ambari.server.utils.StageUtils.getATestStage : r9 = $r21 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "2560000000")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "2560000000") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r23 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r23 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r23.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r23.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r10 = $r23
org.apache.ambari.server.utils.StageUtils.getATestStage : r10 = $r23 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", r9)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfs-site", r9) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r10)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r25 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r25 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r25.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r25.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r11 = $r25
org.apache.ambari.server.utils.StageUtils.getATestStage : r11 = $r25 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r26 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r26 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r26.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r26.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r12 = $r26
org.apache.ambari.server.utils.StageUtils.getATestStage : r12 = $r26 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r27 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r27 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r27.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r27.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r13 = $r27
org.apache.ambari.server.utils.StageUtils.getATestStage : r13 = $r27 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "true")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.block.size", "true") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", r13)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("final", r13) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfsSite", r12)
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hdfsSite", r12) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r11)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r11) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r31 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r31 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r31.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r31.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r14 = $r31
org.apache.ambari.server.utils.StageUtils.getATestStage : r14 = $r31 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jdklocation", "/x/y/z")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jdklocation", "/x/y/z") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_version", "1.2.0")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_version", "1.2.0") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_name", "HDP")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stack_name", "HDP") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>(r14)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>(r14) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r35 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r35 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r35.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r35.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r15 = $r35
org.apache.ambari.server.utils.StageUtils.getATestStage : r15 = $r35 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("format", "false")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("format", "false") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>(r15)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>(r15) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : $r37 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getATestStage : $r37 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r37.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getATestStage : specialinvoke $r37.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : r16 = $r37
org.apache.ambari.server.utils.StageUtils.getATestStage : r16 = $r37 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", "600")
org.apache.ambari.server.utils.StageUtils.getATestStage : interfaceinvoke r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", "600") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r16)
org.apache.ambari.server.utils.StageUtils.getATestStage : virtualinvoke r7.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>(r16) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getATestStage : return r5
