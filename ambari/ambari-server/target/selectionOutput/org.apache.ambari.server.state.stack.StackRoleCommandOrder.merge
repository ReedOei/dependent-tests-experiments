org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r3 = $r2
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r4 = virtualinvoke r1.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap getContent()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r4 = virtualinvoke r1.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap getContent()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18 = newarray (java.lang.String)[5]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18 = newarray (java.lang.String)[5] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[0] = "general_deps"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[0] = "general_deps" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[1] = "optional_glusterfs"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[1] = "optional_glusterfs" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[2] = "optional_no_glusterfs"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[2] = "optional_no_glusterfs" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[3] = "namenode_optional_ha"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[3] = "namenode_optional_ha" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[4] = "resourcemanager_optional_ha"
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r18[4] = "resourcemanager_optional_ha" >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z1 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> = r3
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> = r3 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : return
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r7 = (java.lang.String) $r19
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r7 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z2 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z2 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z2 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r20 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content>
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r35 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content>
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r35 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z9 = virtualinvoke $r35.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z9 = virtualinvoke $r35.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z9 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r36 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content>
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z10 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z10 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z10 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r39 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r39 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r39)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r39) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r36 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r37 = virtualinvoke $r36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r37 = virtualinvoke $r36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r37)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r37) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r20 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z3 = virtualinvoke $r20.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z3 = virtualinvoke $r20.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z3 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r21 = new java.util.HashMap
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r35 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content>
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r8 = $r21
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r8 = $r21 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r22 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r22 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r9 = (java.util.Map) $r22
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r9 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r23 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content>
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r23 = r0.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: java.util.HashMap content> >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r10 = (java.util.Map) $r24
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r10 = (java.util.Map) $r24 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : n0 = null
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : n0 = null >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r25 = new org.apache.commons.collections.map.MultiValueMap
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r25 = new org.apache.commons.collections.map.MultiValueMap >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r25.<org.apache.commons.collections.map.MultiValueMap: void <init>()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r25.<org.apache.commons.collections.map.MultiValueMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r26 = $r25
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r26 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: void putAll(java.util.Map)>(r10)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: void putAll(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: void putAll(java.util.Map)>(r9)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: void putAll(java.util.Map)>(r9) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r27 = virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: java.util.Set keySet()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r27 = virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r11 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r11 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z4 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r28 = virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r28 = virtualinvoke r26.<org.apache.commons.collections.map.MultiValueMap: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r13 = (java.util.List) $r28
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r13 = (java.util.List) $r28 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r14 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r14 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if z0 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r29 = new java.util.ArrayList
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r32 = (java.lang.String) r12
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r32 = (java.lang.String) r12 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r14)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r14) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r29 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r29.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : specialinvoke $r29.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r15 = $r29
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r15 = $r29 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r16 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r16 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z5 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r14 = r15
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r14 = r15 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r32 = (java.lang.String) r12
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z6 = r17 instanceof java.util.List
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z6 = r17 instanceof java.util.List >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z6 == 0
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r30 = (java.util.List) r17
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r31 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r31 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r31)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : $r30 = (java.util.List) r17 >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r15.<java.util.List: boolean addAll(java.util.Collection)>($r30)
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : interfaceinvoke r15.<java.util.List: boolean addAll(java.util.Collection)>($r30) >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)]
org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.StackRoleCommandOrder.merge : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
