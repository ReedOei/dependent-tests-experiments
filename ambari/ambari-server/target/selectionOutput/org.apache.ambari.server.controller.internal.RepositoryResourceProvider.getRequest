org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r2 = new org.apache.ambari.server.controller.RepositoryRequest >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r3 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_STACK_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r3 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_STACK_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r9 = (java.lang.String) $r8
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r4 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_STACK_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r4 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_STACK_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r11 = (java.lang.String) $r10
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r5 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_OS_TYPE_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r5 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_OS_TYPE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r13 = (java.lang.String) $r12
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r6 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPO_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r6 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPO_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r15 = (java.lang.String) $r14
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : specialinvoke $r2.<org.apache.ambari.server.controller.RepositoryRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r11, $r13, $r15)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : specialinvoke $r2.<org.apache.ambari.server.controller.RepositoryRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r11, $r13, $r15) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : r7 = $r2
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : r7 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r16 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPOSITORY_VERSION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r16 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPOSITORY_VERSION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r16)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z0 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r17 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPOSITORY_VERSION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r21 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERSION_DEFINITION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r21 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERSION_DEFINITION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z1 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r22 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERSION_DEFINITION_ID_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r25 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_CLUSTER_STACK_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r25 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_CLUSTER_STACK_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z2 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r26 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_CLUSTER_STACK_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r30 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r30 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r30)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z3 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r31 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r39 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r39 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z6 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r39)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z6 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z6 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r40 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : return r7
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r40 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r41 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r41 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r42 = (java.lang.String) $r41
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setMirrorsList(java.lang.String)>($r42)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setMirrorsList(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : return r7
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r31 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r32 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r32 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r33 = (java.lang.String) $r32
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setBaseUrl(java.lang.String)>($r33)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setBaseUrl(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r34 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERIFY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r34 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERIFY_BASE_URL_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z4 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z4 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z4 == 0
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r35 = "true"
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r39 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r35 = "true" >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r36 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERIFY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r36 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERIFY_BASE_URL_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r37 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r37 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r38 = virtualinvoke $r37.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r38 = virtualinvoke $r37.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z5 = virtualinvoke $r35.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $z5 = virtualinvoke $r35.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setVerifyBaseUrl(boolean)>($z5)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setVerifyBaseUrl(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r39 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_MIRRORS_LIST_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r26 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_CLUSTER_STACK_VERSION_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r27 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r27 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setClusterVersionId(java.lang.Long)>($r29)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setClusterVersionId(java.lang.Long)>($r29) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r30 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r22 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERSION_DEFINITION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r23 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r23 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setVersionDefinitionId(java.lang.String)>($r24)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setVersionDefinitionId(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r25 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_CLUSTER_STACK_VERSION_PROPERTY_ID>
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r17 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_REPOSITORY_VERSION_ID_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setRepositoryVersionId(java.lang.Long)>($r20)
org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : virtualinvoke r7.<org.apache.ambari.server.controller.RepositoryRequest: void setRepositoryVersionId(java.lang.Long)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.RepositoryResourceProvider.getRequest : $r21 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_VERSION_DEFINITION_ID_PROPERTY_ID>
