org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterProtocol")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r6 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterProtocol") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r8 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r8 = class "java/lang/reflect/Field" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r7 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r7 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i0 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i0 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i1 = $i0 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i1 = $i0 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r7.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r6, $i1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r7.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r6, $i1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterHostname")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r9 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterHostname") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r10 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r10 = class "java/lang/reflect/Field" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i2 = virtualinvoke r9.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i2 = virtualinvoke r9.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i3 = $i2 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i3 = $i2 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r9, $i3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r11.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r9, $i3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r9.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r12 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterPort")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r12 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("masterPort") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r13 = class "java/lang/reflect/Field"
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $r13 = class "java/lang/reflect/Field" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("modifiers") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i4 = virtualinvoke r12.<java.lang.reflect.Field: int getModifiers()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i4 = virtualinvoke r12.<java.lang.reflect.Field: int getModifiers()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i5 = $i4 & -17
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : $i5 = $i4 & -17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r12, $i5)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r14.<java.lang.reflect.Field: void setInt(java.lang.Object,int)>(r12, $i5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : virtualinvoke r12.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest$1AmbariConfigsSetter.setConfigs : return
