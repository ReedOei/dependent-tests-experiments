org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z1 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r10 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r2 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r2 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void validateCreateRequests(java.util.Set,org.apache.ambari.server.state.Clusters)>(r1, r2)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void validateCreateRequests(java.util.Set,org.apache.ambari.server.state.Clusters)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z2 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : return
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r4 = (org.apache.ambari.server.controller.ServiceRequest) $r12
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r4 = (org.apache.ambari.server.controller.ServiceRequest) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r13 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r13 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r14 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r14 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String)>($r14)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r15 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r8 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r8 = interfaceinvoke $r15.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r16 = virtualinvoke r7.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r16 = virtualinvoke r7.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r17 = virtualinvoke r7.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r17 = virtualinvoke r7.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r18 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r18 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r9 = virtualinvoke r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r18)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r9 = virtualinvoke r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z3 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z3 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreSupported(boolean)>($z3)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreSupported(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r19 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r19 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z4 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z4 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_supported from stack definition:{}", $r20, $r21)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_supported from stack definition:{}", $r20, $r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r22 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r22 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r22)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z6 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z6 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r27 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r27 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r28 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r28 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z7 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z7 = virtualinvoke r9.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from stack definition:{}", $r28, $r29)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from stack definition:{}", $r28, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r30.<org.apache.ambari.server.controller.AmbariManagementController: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r5, r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r30.<org.apache.ambari.server.controller.AmbariManagementController: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r5, r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r23)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>(z0)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r6.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>(z0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r24 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r24 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r25 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r25 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r25, $r26)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r25, $r26) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r30 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r10 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : return
