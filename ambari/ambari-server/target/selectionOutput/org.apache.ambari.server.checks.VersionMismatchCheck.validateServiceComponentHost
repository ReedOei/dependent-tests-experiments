org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r11 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r5 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState VERSION_MISMATCH>
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r5 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState VERSION_MISMATCH> >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $z0 = virtualinvoke $r11.<org.apache.ambari.server.state.UpgradeState: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $z0 = virtualinvoke $r11.<org.apache.ambari.server.state.UpgradeState: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : if $z0 == 0
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : return
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r7 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r9 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r9 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" desired version: ")
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" desired version: ") >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual version: ")
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual version: ") >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r10 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : r10 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.checks.VersionMismatchCheck.validateServiceComponentHost : return
