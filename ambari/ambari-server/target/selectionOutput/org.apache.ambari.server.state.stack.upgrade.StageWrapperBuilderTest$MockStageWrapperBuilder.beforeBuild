org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : r2 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List beforeBuild(org.apache.ambari.server.state.UpgradeContext)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : return r2
