org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r8 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r12 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r4 = $r12
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r4 = $r12 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r5 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r6 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r14
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r6 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r15 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r15 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r15 != null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r15 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r16 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r15 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r21 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r21 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z2 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z2 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r22 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r27 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r27 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>($r27)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r22 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate order id provided for batch request. ")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate order id provided for batch request. ") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r22
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No order id provided for batch request. ")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No order id provided for batch request. ") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r16
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.scheduler.ExecutionScheduleManager getExecutionScheduleManager()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.scheduler.ExecutionScheduleManager getExecutionScheduleManager()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r10.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void validateSchedule(org.apache.ambari.server.state.scheduler.Schedule)>(r2)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r10.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void validateSchedule(org.apache.ambari.server.state.scheduler.Schedule)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r8 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cluster name is required.")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cluster name is required.") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r8
