org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r1 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r3 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r3 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>("protocol")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>("protocol") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r4 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r7
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r4 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("protocol")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("protocol") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r6 = (java.lang.String) $r5
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r6 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("http")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("http") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r7
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r7
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8[0] = r7
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8[0] = r7 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8[1] = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8[1] = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported protocol type %s, falling back to %s", $r8)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported protocol type %s, falling back to %s", $r8) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>(r2)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r7 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : goto [?= return r7]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : goto [?= return r7] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r7
