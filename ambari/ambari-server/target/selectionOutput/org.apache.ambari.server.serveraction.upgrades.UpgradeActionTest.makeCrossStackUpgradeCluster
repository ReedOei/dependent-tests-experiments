org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r5 = "h1" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r15 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId)>("c1", r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r16 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r16 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r17 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r17 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r6 = virtualinvoke $r16.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r17, $r18)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r6 = virtualinvoke $r16.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r17, $r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r19 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r7 = virtualinvoke $r19.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r20, $r21)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r7 = virtualinvoke $r19.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r20, $r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r6)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r22 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r22 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r8 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r8 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r24 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r9 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r9 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r25 = new java.util.HashMap
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r25 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r25.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r25.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r10 = $r25
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r10 = $r25 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r9.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r10) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r28 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r5, "c1")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke $r28.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r5, "c1") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r29 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.OrmTestHelper m_helper> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r29.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r29.<org.apache.ambari.server.orm.OrmTestHelper: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getOrCreateRepositoryVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r11 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r11)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, "admin", $r11) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r31 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r31)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, $r31) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r32 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{\'repositories\':[{\'Repositories/base_url\':\'http://foo1\',\'Repositories/repo_name\':\'HDP\',\'Repositories/repo_id\':\'")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{\'repositories\':[{\'Repositories/base_url\':\'http://foo1\',\'Repositories/repo_name\':\'HDP\',\'Repositories/repo_id\':\'") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], \'OperatingSystems/os_type\':\'redhat6\'}]")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], \'OperatingSystems/os_type\':\'redhat6\'}]") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r12 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r12 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r37 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r37.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity create(org.apache.ambari.server.orm.entities.StackEntity,java.lang.String,java.lang.String,java.lang.String)>(r7, r4, $r38, r12)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r37.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity create(org.apache.ambari.server.orm.entities.StackEntity,java.lang.String,java.lang.String,java.lang.String)>(r7, r4, $r38, r12) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r40 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r40 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r40)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void createClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, "admin", $r40) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r41 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r41 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r41)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void transitionClusterVersion(org.apache.ambari.server.state.StackId,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r3, r4, $r41) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r43 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r43 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.ClusterVersionEntity getCurrentClusterVersion()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r44 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r44 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState CURRENT> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r42, $r43, $r44)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: void mapHostVersions(java.util.Set,org.apache.ambari.server.orm.entities.ClusterVersionEntity,org.apache.ambari.server.state.RepositoryVersionState)>($r42, $r43, $r44) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r45 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r45 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r46 = interfaceinvoke $r45.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostDAO")
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r46 = interfaceinvoke $r45.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostDAO") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r13 = (org.apache.ambari.server.orm.dao.HostDAO) $r46
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r13 = (org.apache.ambari.server.orm.dao.HostDAO) $r46 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r47 = new org.apache.ambari.server.orm.entities.HostVersionEntity
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r47 = new org.apache.ambari.server.orm.entities.HostVersionEntity >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r47.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : specialinvoke $r47.<org.apache.ambari.server.orm.entities.HostVersionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r14 = $r47
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : r14 = $r47 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r48 = virtualinvoke r13.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r48 = virtualinvoke r13.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r48)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setHostEntity(org.apache.ambari.server.orm.entities.HostEntity)>($r48) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r49 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r49 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repoVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r50 = virtualinvoke $r49.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r50 = virtualinvoke $r49.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r50)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r50) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r51 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r51 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r51)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r51) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : $r52 = r0.<org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r52.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r14)
org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : virtualinvoke $r52.<org.apache.ambari.server.orm.dao.HostVersionDAO: void create(org.apache.ambari.server.orm.entities.HostVersionEntity)>(r14) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.UpgradeActionTest.makeCrossStackUpgradeCluster : return
