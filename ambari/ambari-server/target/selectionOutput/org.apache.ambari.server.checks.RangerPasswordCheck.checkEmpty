org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r4, r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : if null != r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : if null != r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r6 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_config", r3, r4)
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : if null != r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : return r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r6 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_config", r3, r4) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7[0] = r1
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7[1] = r2
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r7[1] = r2 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r6, $r7)
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r6, $r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r8)
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r9 = virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r9 = virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke $r9.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r10 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : $r10 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r10)
org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : virtualinvoke r3.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkEmpty : return r5
