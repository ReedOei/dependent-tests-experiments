org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z0 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r14 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r14 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r4 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_SET_SERVICE_USERS_GROUPS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r4 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_SET_SERVICE_USERS_GROUPS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r14, $r15, $r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r14, $r15, $r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z1 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigPropertiesTypes(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r5 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigPropertiesTypes(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r16 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : specialinvoke $r16.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : specialinvoke $r16.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r6 = $r16
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r6 = $r16 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r17 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r17 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r7 = (java.util.Set) $r18
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r7 = (java.util.Set) $r18 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r19 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r19 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r20 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r20 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r8 = (java.util.Set) $r20
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r8 = (java.util.Set) $r20 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r8 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r9 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r9 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r10 = (java.lang.String) $r21
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r10 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r11 = (java.lang.String[]) $r22
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r11 = (java.lang.String[]) $r22 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r11 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r11 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r12 = r11[0]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r11 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r12 = r11[0] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r13 = r11[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r13 = r11[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r12 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r12 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r13 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r12 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z5 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $z5 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z5 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r23 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r23 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : specialinvoke $r23.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to set service user and groups")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : specialinvoke $r23.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to set service user and groups") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : throw $r23
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r13 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $r23 = new org.apache.ambari.server.security.authorization.AuthorizationException]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : if r13 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : goto [?= $r23 = new org.apache.ambari.server.security.authorization.AuthorizationException] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r23 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : r9 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.validateAuthorizationToUpdateServiceUsersAndGroups : $r19 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP>
