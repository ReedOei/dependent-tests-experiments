org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r2 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProviderTest: org.apache.ambari.server.controller.internal.HostResourceProvider getHostProvider(org.apache.ambari.server.controller.AmbariManagementController)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r7 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r3 = $r7
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r3 = $r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : if $z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r3, $r16)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getCreateRequest(java.util.Set,java.util.Map)>(r3, $r16) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : virtualinvoke r2.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r17)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : virtualinvoke r2.<org.apache.ambari.server.controller.internal.HostResourceProvider: void createHosts(org.apache.ambari.server.controller.spi.Request)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : return
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r5 = (org.apache.ambari.server.controller.HostRequest) $r8
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r5 = (org.apache.ambari.server.controller.HostRequest) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r9 = new java.util.HashMap
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r6 = $r9
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : r6 = $r9 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r10 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r10 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r11 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r11 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r13 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r13 = <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String HOST_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProviderTest.createHosts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
