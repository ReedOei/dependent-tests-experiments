org.apache.ambari.server.topology.HostRequest.createTasks : $r15 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r1 = new org.apache.ambari.server.topology.HostRequest$PersistHostResourcesTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r1 = new org.apache.ambari.server.topology.HostRequest$PersistHostResourcesTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r1.<org.apache.ambari.server.topology.HostRequest$PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.HostRequest,org.apache.ambari.server.topology.HostRequest$1)>(r0, null)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r1.<org.apache.ambari.server.topology.HostRequest$PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.HostRequest,org.apache.ambari.server.topology.HostRequest$1)>(r0, null) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r1)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r17 = new org.apache.ambari.server.topology.HostRequest$RegisterWithConfigGroupTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r17 = new org.apache.ambari.server.topology.HostRequest$RegisterWithConfigGroupTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r17.<org.apache.ambari.server.topology.HostRequest$RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.HostRequest,org.apache.ambari.server.topology.HostRequest$1)>(r0, null)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r17.<org.apache.ambari.server.topology.HostRequest$RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.HostRequest,org.apache.ambari.server.topology.HostRequest$1)>(r0, null) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r18 = new org.apache.ambari.server.topology.HostRequest$InstallHostTask
org.apache.ambari.server.topology.HostRequest.createTasks : $r18 = new org.apache.ambari.server.topology.HostRequest$InstallHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r18.<org.apache.ambari.server.topology.HostRequest$InstallHostTask: void <init>(org.apache.ambari.server.topology.HostRequest,boolean)>(r0, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r18.<org.apache.ambari.server.topology.HostRequest$InstallHostTask: void <init>(org.apache.ambari.server.topology.HostRequest,boolean)>(r0, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r2 = $r18
org.apache.ambari.server.topology.HostRequest.createTasks : r2 = $r18 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r20 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r20 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r21 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasks : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r21)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r21) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r25 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r25 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : z1 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.topology.HostRequest.createTasks : z1 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r26 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r26 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r28 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r28 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : z2 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.topology.HostRequest.createTasks : z2 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r3 = null
org.apache.ambari.server.topology.HostRequest.createTasks : r3 = null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r29 = new org.apache.ambari.server.topology.HostRequest$StartHostTask
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r34 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r34 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r35 = new java.lang.StringBuilder
org.apache.ambari.server.topology.HostRequest.createTasks : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping Start task creation since provision action = ")
org.apache.ambari.server.topology.HostRequest.createTasks : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping Start task creation since provision action = ") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r37 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r37 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38)
org.apache.ambari.server.topology.HostRequest.createTasks : $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String)>($r40)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r41 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r41 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction START_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r5 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r41)
org.apache.ambari.server.topology.HostRequest.createTasks : r5 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r41) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r42 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasks : $r42 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r6 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r42)
org.apache.ambari.server.topology.HostRequest.createTasks : r6 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r42) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r43 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_AND_START>
org.apache.ambari.server.topology.HostRequest.createTasks : $r43 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_AND_START> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r7 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r43)
org.apache.ambari.server.topology.HostRequest.createTasks : r7 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames(org.apache.ambari.server.controller.internal.ProvisionAction)>($r43) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r44 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r44 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r8 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r8 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r45 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : return
org.apache.ambari.server.topology.HostRequest.createTasks : $r45 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r9 = (java.lang.String) $r45
org.apache.ambari.server.topology.HostRequest.createTasks : r9 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r9 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if r9 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER")
org.apache.ambari.server.topology.HostRequest.createTasks : if r9 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r46 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r46 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping component {} when creating request\n", r9)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Skipping component {} when creating request\n", r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI_SERVER") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r46 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r47 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r47 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $r47 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if $r47 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if $r47 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.topology.HostRequest.createTasks : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PENDING HOST ASSIGNMENT : HOSTGROUP=")
org.apache.ambari.server.topology.HostRequest.createTasks : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PENDING HOST ASSIGNMENT : HOSTGROUP=") >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r51 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r51 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
org.apache.ambari.server.topology.HostRequest.createTasks : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r10 = $r48
org.apache.ambari.server.topology.HostRequest.createTasks : r10 = $r48 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r53 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasks : $r53 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r11 = interfaceinvoke $r53.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r11 = interfaceinvoke $r53.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r12 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.HostRequest.createTasks : r12 = interfaceinvoke r4.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z9 = interfaceinvoke r5.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : $z9 = interfaceinvoke r5.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r55 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r55 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r55.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of INSTALL task for {} on {}.", r9, r10)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r55.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of INSTALL task for {} on {}.", r9, r10) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9)]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z13 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9)] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z13 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of START task for {} on {}.", r9, r10)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping create of START task for {} on {}.", r9, r10) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= (branch)]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r64 = virtualinvoke r12.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l5 = r0.<org.apache.ambari.server.topology.HostRequest: long id>
org.apache.ambari.server.topology.HostRequest.createTasks : $l5 = r0.<org.apache.ambari.server.topology.HostRequest: long id> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r66 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START>
org.apache.ambari.server.topology.HostRequest.createTasks : $r66 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r67 = virtualinvoke r11.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l4, $l5, r9, r10, $r66, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : r67 = virtualinvoke r11.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l4, $l5, r9, r10, $r66, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r68 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r68 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l6 = virtualinvoke r67.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l6 = virtualinvoke r67.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.topology.HostRequest.createTasks : $r69 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r69, r67)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r69, r67) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r71 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r71 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r72 = interfaceinvoke $r71.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostRequest.createTasks : $r72 = interfaceinvoke $r71.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r73 = (java.util.Map) $r72
org.apache.ambari.server.topology.HostRequest.createTasks : $r73 = (java.util.Map) $r72 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l7 = virtualinvoke r67.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l7 = virtualinvoke r67.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.topology.HostRequest.createTasks : $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r73.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r74)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r73.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r74) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : $r64 = virtualinvoke r12.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z14 = virtualinvoke $r64.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z14 = virtualinvoke $r64.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 == 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r65 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z14 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z10 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : if z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l1 = r0.<org.apache.ambari.server.topology.HostRequest: long id>
org.apache.ambari.server.topology.HostRequest.createTasks : $l1 = r0.<org.apache.ambari.server.topology.HostRequest: long id> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r13 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL>
org.apache.ambari.server.topology.HostRequest.createTasks : $r13 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r14 = virtualinvoke r11.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, r9, r10, $r13, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : r14 = virtualinvoke r11.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, r9, r10, $r13, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r56 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r56 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l2 = virtualinvoke r14.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l2 = virtualinvoke r14.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.topology.HostRequest.createTasks : $r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r14)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, r14) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r59 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r59 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r60 = interfaceinvoke $r59.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.HostRequest.createTasks : $r60 = interfaceinvoke $r59.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r61 = (java.util.Map) $r60
org.apache.ambari.server.topology.HostRequest.createTasks : $r61 = (java.util.Map) $r60 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l3 = virtualinvoke r14.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $l3 = virtualinvoke r14.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.topology.HostRequest.createTasks : $r62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r62)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r62) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z13 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : $z10 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z11 = interfaceinvoke r7.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : if $z10 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z11 = interfaceinvoke r7.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null
org.apache.ambari.server.topology.HostRequest.createTasks : if $z11 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r54 = virtualinvoke r12.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r9)
org.apache.ambari.server.topology.HostRequest.createTasks : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r54 = virtualinvoke r12.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $z12 = virtualinvoke $r54.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $z12 = virtualinvoke $r54.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : if $z12 != 0
org.apache.ambari.server.topology.HostRequest.createTasks : if $z12 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r55 = <org.apache.ambari.server.topology.HostRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.HostRequest.createTasks : if $z12 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $l0 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasks : $r48 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r10 = $r48]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r10 = $r48] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r10 = $r48
org.apache.ambari.server.topology.HostRequest.createTasks : $r29 = new org.apache.ambari.server.topology.HostRequest$StartHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r29.<org.apache.ambari.server.topology.HostRequest$StartHostTask: void <init>(org.apache.ambari.server.topology.HostRequest,boolean)>(r0, z0)
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r29.<org.apache.ambari.server.topology.HostRequest$StartHostTask: void <init>(org.apache.ambari.server.topology.HostRequest,boolean)>(r0, z0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r3 = $r29
org.apache.ambari.server.topology.HostRequest.createTasks : r3 = $r29 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r30 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasks : $r30 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r31 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasks : $r31 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : $r32 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasks : $r32 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r32.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasks : specialinvoke $r32.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r32)
org.apache.ambari.server.topology.HostRequest.createTasks : interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r32) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()]
org.apache.ambari.server.topology.HostRequest.createTasks : goto [?= r4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasks : r4 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()
