org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r9 = $r8.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r9 = $r8.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null != $r9
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null != $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : return r2
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null != $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r10 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r3 = $r10
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r3 = $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r11 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r12 = $r11.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r12 = $r11.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r12 == null
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r12 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r12 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : return r3
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r14 = $r13.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r14 = $r13.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: java.util.List executionStages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r4 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r4 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : return r3
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r5 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage) $r15
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r5 = (org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage) $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r16 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r16 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r16
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r17 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r19 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r19 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r19
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r20 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r6 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Task task>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r6 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Task task> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = null
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r23 = <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$Task$Type>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r23 = <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$Task$Type> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r24 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r24 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $i0 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.Task$Type: int ordinal()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $i0 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.Task$Type: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $i1 = $r23[$i0]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $i1 = $r23[$i0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : tableswitch($i1) {     case 1:
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r25 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r26 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == r7
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r26 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.apache.ambari.server.state.stack.upgrade.StageWrapper access$300(org.apache.ambari.server.state.stack.upgrade.ClusterGrouping,org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage)>($r26, r1, r5)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.apache.ambari.server.state.stack.upgrade.StageWrapper access$300(org.apache.ambari.server.state.stack.upgrade.ClusterGrouping,org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage)>($r26, r1, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == r7
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r25 = r0.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder: org.apache.ambari.server.state.stack.upgrade.ClusterGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.apache.ambari.server.state.stack.upgrade.StageWrapper access$200(org.apache.ambari.server.state.stack.upgrade.ClusterGrouping,org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage)>($r25, r1, r5)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r7 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.apache.ambari.server.state.stack.upgrade.StageWrapper access$200(org.apache.ambari.server.state.stack.upgrade.ClusterGrouping,org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage)>($r25, r1, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if null == r7
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r20 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z1 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.Condition: boolean isSatisfied(org.apache.ambari.server.state.UpgradeContext)>(r1)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z1 = virtualinvoke $r20.<org.apache.ambari.server.state.stack.upgrade.Condition: boolean isSatisfied(org.apache.ambari.server.state.UpgradeContext)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r21 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.slf4j.Logger access$100()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : r6 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Task task>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r21 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ClusterGrouping: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r22 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r22 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping {} while building upgrade orchestration due to {}", r5, $r22)
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping {} while building upgrade orchestration due to {}", r5, $r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r17 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r17 == $r18
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r17 == $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : if $r17 == $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $r19 = r5.<org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ExecuteStage: org.apache.ambari.server.state.stack.upgrade.Condition condition>
org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ClusterGrouping$ClusterBuilder.build : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
