org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r19 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r24 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r24 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : return
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r26 = (org.apache.ambari.server.controller.HostRequest) $r25
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r26 = (org.apache.ambari.server.controller.HostRequest) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r27 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r27 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z5 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z5 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r28 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r36 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r36 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r7 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r7 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l0 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l0 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r10 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r10 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r37 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r10 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r11 = $r41 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r42 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r42 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r42
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r42 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r43 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r42 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r47 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r47 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r12 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r12 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r12 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z7 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r47)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : z0 = $z8
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : z0 = $z8 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r48 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r51 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r51 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r51
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r51 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r52 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r51 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r56 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r71 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z19 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z19 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z19 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z19 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r125 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z19 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r125 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r125.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r125.<org.apache.ambari.server.state.Cluster: void recalculateAllClusterVersionStates()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r71 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r71
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r71 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r72 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r71 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r72 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r73 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r73 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = interfaceinvoke $r72.<java.util.Map: boolean containsKey(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = interfaceinvoke $r72.<java.util.Map: boolean containsKey(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r74 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r74 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r75 = interfaceinvoke $r74.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r75 = interfaceinvoke $r74.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z16 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r76 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r76 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r77 = (org.apache.ambari.server.controller.ConfigurationRequest) $r76
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r77 = (org.apache.ambari.server.controller.ConfigurationRequest) $r76 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r78 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r78 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r78
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r78 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r79 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r78 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r88 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r88 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r15 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>($r87, $r88)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r15 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>($r87, $r88) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r15
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r15 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r16 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r15 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r16 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l4 = virtualinvoke r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l4 = virtualinvoke r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r89 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.util.Map getDesiredConfigs(long)>($l4)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r89 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.util.Map getDesiredConfigs(long)>($l4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r90 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r90 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 = interfaceinvoke $r89.<java.util.Map: java.lang.Object get(java.lang.Object)>($r90)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 = interfaceinvoke $r89.<java.util.Map: java.lang.Object get(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r17 = (org.apache.ambari.server.state.DesiredConfig) $r91
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r17 = (org.apache.ambari.server.state.DesiredConfig) $r91 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l5 = virtualinvoke r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l5 = virtualinvoke r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z17 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: boolean isSelected()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z17 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: boolean isSelected()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z18 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: boolean addDesiredConfig(long,boolean,java.lang.String,org.apache.ambari.server.state.Config)>($l5, $z17, r16, r15)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z18 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: boolean addDesiredConfig(long,boolean,java.lang.String,org.apache.ambari.server.state.Config)>($l5, $z17, r16, r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z18 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r18 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("configchange")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r18 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("configchange") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r93 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r93 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r93.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r93.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluster \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cluster \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r95 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r95 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("host \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r99 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r99 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("changed by: \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("changed by: \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r106 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r106 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r110 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.Long getVersion()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r110 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.Long getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tag=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tag=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r114 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r114 = interfaceinvoke r15.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r17
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r117 = ""
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r17 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r118 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r118 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r120 = virtualinvoke r17.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r120 = virtualinvoke r17.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r117 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r117 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r123 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r123 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r18.<org.slf4j.Logger: void info(java.lang.String)>($r124)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r18.<org.slf4j.Logger: void info(java.lang.String)>($r124) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z16 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r117 = "" >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r123 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117)]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r123 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r123 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r79 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $i3 = interfaceinvoke $r79.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $i3 = interfaceinvoke $r79.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r80 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r80 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r82 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r82 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[0] = $r82
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[0] = $r82 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r83 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r83 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[1] = $r83
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[1] = $r83 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[2] = r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81[2] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r84 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'\'{0}\'\' to host \'\'{1}\'\' in cluster \'\'{2}\'\'", $r81)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r84 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'\'{0}\'\' to host \'\'{1}\'\' in cluster \'\'{2}\'\'", $r81) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r80.<org.slf4j.Logger: void info(java.lang.String)>($r84)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r80.<org.slf4j.Logger: void info(java.lang.String)>($r84) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r85 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r85 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>($r85)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.ConfigurationResponse createConfiguration(org.apache.ambari.server.controller.ConfigurationRequest)>(r77)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.ConfigurationResponse createConfiguration(org.apache.ambari.server.controller.ConfigurationRequest)>(r77) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r77.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r56 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r56
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r56 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r57 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r56 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r57 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z11 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r57, r10, $r58)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z11 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r57, r10, $r58) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r59 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r60 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r60 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r13 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r60)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r13 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l1 = virtualinvoke r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l1 = virtualinvoke r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r14 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l1)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r14 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z12 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>(r14)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z12 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r61 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r61 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z13 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r61)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z13 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r62 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r63 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r63 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r64 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r64 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r66 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r66 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r67 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r67 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r68 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r66, $r67)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r68 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r66, $r67) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r69 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r69 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r70)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r63.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r63
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r62 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z14 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z14 = virtualinvoke r13.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z14 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r63 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l2 = virtualinvoke r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l2 = virtualinvoke r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setMaintenanceState(long,org.apache.ambari.server.state.MaintenanceState)>($l2, r13)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setMaintenanceState(long,org.apache.ambari.server.state.MaintenanceState)>($l2, r13) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r59 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r59.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host maintenance state")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r59.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host maintenance state") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r59
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r52 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r53 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r53 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z10 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r52, r10, $r53)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z10 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r52, r10, $r53) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r54 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r55 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r55 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setPublicHostName(java.lang.String)>($r55)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setPublicHostName(java.lang.String)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r7
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r54 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r54.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r54.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r54
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r48 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r49 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r49 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z9 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r48, r10, $r49)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z9 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r48, r10, $r49) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r50 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>(r12)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r51 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r50 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r50.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host rack information")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r50.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host rack information") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r50
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z7 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r47) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = 1
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= z0 = $z8]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= z0 = $z8] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : z0 = $z8
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r43 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z6 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r43, r10, $r44)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z6 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r43, r10, $r44) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z6 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r45 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r46 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r46 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r46)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r6.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r47 = interfaceinvoke r6.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r45 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r45.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r45.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r45
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r37 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38 = newarray (java.lang.String)[1]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r37 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r39 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r39 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38[0] = $r39
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r39 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38[0] = $r39 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r40 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r38)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38[0] = $r39 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r40 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r37.<java.util.HashSet: void <init>(java.util.Collection)>($r40)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r40 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r37.<java.util.HashSet: void <init>(java.util.Collection)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r37, r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r37.<java.util.HashSet: void <init>(java.util.Collection)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r37, r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r42 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r37, r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r42 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r42 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.util.Map getHostAttributes()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r28 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received an updateHost request, hostname=")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received an updateHost request, hostname=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r31 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r31 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r36 = virtualinvoke r26.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r5 = (org.apache.ambari.server.controller.HostRequest) $r20
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r5 = (org.apache.ambari.server.controller.HostRequest) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r21 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r21 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r22 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r21 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r23 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r23 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname should be provided")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname should be provided") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r23
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r22 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z3 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z3 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r23 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r19 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : return
