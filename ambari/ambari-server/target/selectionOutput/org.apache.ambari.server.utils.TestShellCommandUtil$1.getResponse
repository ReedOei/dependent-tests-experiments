org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("Arg1") >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z0 == 0
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : return "a1"
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("Arg2")
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("Arg2") >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z1 == 0
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : r0.<org.apache.ambari.server.utils.TestShellCommandUtil$1: boolean done> = 1
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : return null
org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : r0.<org.apache.ambari.server.utils.TestShellCommandUtil$1: boolean done> = 1 >>>>>>>> org.apache.ambari.server.utils.TestShellCommandUtil$1.getResponse : return "a2"
