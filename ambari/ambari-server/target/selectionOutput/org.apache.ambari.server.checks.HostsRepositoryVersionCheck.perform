org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r13 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r14 = interfaceinvoke $r13.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r15 = (org.apache.ambari.server.state.Clusters) $r14
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r15 = (org.apache.ambari.server.state.Clusters) $r14 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r16 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r16 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r18 = (org.apache.ambari.server.state.Clusters) $r17
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r18 = (org.apache.ambari.server.state.Clusters) $r17 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r5 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r5 = interfaceinvoke $r18.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r7 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r7 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r61 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r61 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z7 = virtualinvoke $r61.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z7 = virtualinvoke $r61.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z7 != 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z7 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r62 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z7 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : return
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r62 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r62)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r62) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r63 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r63 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r63)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r63) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : return
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r8 = (org.apache.ambari.server.state.Host) $r20
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r8 = (org.apache.ambari.server.state.Host) $r20 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r21 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r21 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r9 == $r21
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r9 == $r21 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r9 == $r21 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r22 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r22 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if null == $r22
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if null == $r22 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : z0 = 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if null == $r22 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r38 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider repositoryVersionDaoProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r38 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider repositoryVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r39 = interfaceinvoke $r38.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r39 = interfaceinvoke $r38.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r40 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r39
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r40 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r39 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r41 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r41 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r42 = virtualinvoke $r40.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r6, $r41)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r42 = virtualinvoke $r40.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r6, $r41) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r42 != null
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r42 != null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r43 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r42 != null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r47 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r47 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.orm.entities.StackEntity getStack()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r48 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r48 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r49 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r49 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r50 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r50 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : specialinvoke $r48.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r49, $r50)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : specialinvoke $r48.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String,java.lang.String)>($r49, $r50) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r51 = $r48
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r51 = $r48 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r52 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r52 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r53 = interfaceinvoke $r52.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r53 = interfaceinvoke $r52.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r54 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r53
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r54 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r53 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r55 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r55 = virtualinvoke r42.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r56 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r56 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r12 = virtualinvoke $r54.<org.apache.ambari.server.orm.dao.HostVersionDAO: org.apache.ambari.server.orm.entities.HostVersionEntity findByClusterStackVersionAndHost(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String)>(r3, r51, $r55, $r56)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r12 = virtualinvoke $r54.<org.apache.ambari.server.orm.dao.HostVersionDAO: org.apache.ambari.server.orm.entities.HostVersionEntity findByClusterStackVersionAndHost(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String)>(r3, r51, $r55, $r56) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r12 == null
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r12 == null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r57 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if r12 == null >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r59 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r59 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r60 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r60 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r59.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r60)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r59.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r57 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r58 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r58 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r57 == $r58
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r57 == $r58 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r59 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r57 == $r58 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r43 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r43)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r43) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r44 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_repo_version", r1, r2)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r44 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("no_repo_version", r1, r2) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r44)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r45 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r45 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r46 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r46 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r45.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r46)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r45.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r46) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : return
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : z0 = 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r23 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r23 = r0.<org.apache.ambari.server.checks.HostsRepositoryVersionCheck: com.google.inject.Provider hostVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r24 = interfaceinvoke $r23.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r24 = interfaceinvoke $r23.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r25 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r24
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r25 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r24 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r26 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r26 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r27 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByHost(java.lang.String)>($r26)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r27 = virtualinvoke $r25.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByHost(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r10 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r10 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r28 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if z0 != 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r36 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if z0 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r36 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r37 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r37 = interfaceinvoke r8.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r36.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r37)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : virtualinvoke $r36.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r28 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r11 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r28
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : r11 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r28 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r29 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r29 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r30 = virtualinvoke $r29.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r31 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r31 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31)
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z3 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r32 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r32 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r33 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLED> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r32 == $r33
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r32 == $r33 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r34 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r32 == $r33 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : z0 = 1
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : z0 = 1 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if z0 != 0
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r34 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r35 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED>
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $r35 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED> >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r34 != $r35
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r34 != $r35 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : z0 = 1
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : if $r34 != $r35 >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsRepositoryVersionCheck.perform : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
