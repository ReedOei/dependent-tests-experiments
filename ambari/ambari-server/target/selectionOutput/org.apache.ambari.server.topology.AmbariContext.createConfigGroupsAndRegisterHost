org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = $r3
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = $r3 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = interfaceinvoke $r20.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = interfaceinvoke $r20.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = (org.apache.ambari.server.topology.HostGroupInfo) $r22
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = (org.apache.ambari.server.topology.HostGroupInfo) $r22 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke $r23.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke $r23.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = virtualinvoke r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = virtualinvoke r6.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r8 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r8 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r35 = interfaceinvoke $r34.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r35 = interfaceinvoke $r34.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r37 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : return
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r39 = (java.util.Map$Entry) $r38
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r39 = (java.util.Map$Entry) $r38 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r41 = (java.lang.String) $r40
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r41 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = interfaceinvoke r39.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r43 = (java.util.Map) $r42
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r43 = (java.util.Map) $r42 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r44 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r35, r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r44 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r35, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r45 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r45 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = (org.apache.ambari.server.topology.HostGroupInfo) $r46
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = (org.apache.ambari.server.topology.HostGroupInfo) $r46 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r14 = virtualinvoke $r47.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r14 = virtualinvoke $r47.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : n0 = null
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : n0 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : n0 = null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r15 = $r50 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r51.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r56, r15)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r51.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r56, r15) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r57.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r57.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r57
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r48.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r48.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r49 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r48.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r49 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r58 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r49 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r58 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r58 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r58 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = interfaceinvoke $r58.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = interfaceinvoke $r58.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r60 = interfaceinvoke $r59.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r49)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r60 = interfaceinvoke $r59.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r49) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = new org.apache.ambari.server.topology.AmbariContext$7
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = new org.apache.ambari.server.topology.AmbariContext$7 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r61.<org.apache.ambari.server.topology.AmbariContext$7: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r60)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r61.<org.apache.ambari.server.topology.AmbariContext$7: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r60) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r16 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r14, $r61)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r16 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r14, $r61) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r62 = new org.apache.ambari.server.controller.ConfigGroupRequest
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r62 = new org.apache.ambari.server.controller.ConfigGroupRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r63 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r16)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r63 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r16) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r62.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r49, r44, r41, "Host Group Configuration", $r63, r43)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r62.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r49, r44, r41, "Host Group Configuration", $r63, r43) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r17 = $r62
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r17 = $r62 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r64 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r64 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r65 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r65 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r66 = interfaceinvoke $r64.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r65)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r66 = interfaceinvoke $r64.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r65) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r18 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r66
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r18 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r66 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r18 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r66 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r69 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r19 = $r69 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r19.<java.lang.Exception: void printStackTrace()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r19.<java.lang.Exception: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r70 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r70 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r71 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r71 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r70.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r74, r19)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r70.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r74, r19) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r70
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r18.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r67)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r67 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r69 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r18.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r67) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r18.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r67) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r69 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r9 = (java.util.Map$Entry) $r25
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r9 = (java.util.Map$Entry) $r25 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r10 = (java.lang.String) $r26
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r10 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r11 = virtualinvoke r5.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r10)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r11 = virtualinvoke r5.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForConfigType(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = (java.util.Map) $r28
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = (java.util.Map) $r28 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r12 = interfaceinvoke $r27.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r10, r2, $r29, null)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r12 = interfaceinvoke $r27.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r10, r2, $r29, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r13 = (java.util.Map) $r30
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r13 = (java.util.Map) $r30 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r13 != null
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r13 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r13 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r31.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r31.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r13 = $r31
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r13 = $r31 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12)
