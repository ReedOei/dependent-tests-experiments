org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : r2 = $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r7 = new java.lang.RuntimeException
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get hosts for cluster: ")
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get hosts for cluster: ") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName>
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2)
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : throw $r7
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r4 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName>
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r4 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r6 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : r1 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r5)
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r6 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : r1 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : goto [?= (branch)]
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : r1 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r6 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : if r1 != null
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : if r1 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : if r1 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : return $r12
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : goto [?= return $r12]
org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : goto [?= return $r12] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getHosts : return $r12
