org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r12 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.Cluster m_cluster> = $r12
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.Cluster m_cluster> = $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.api.services.AmbariMetaInfo m_metaInfo> = $r13
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.api.services.AmbariMetaInfo m_metaInfo> = $r13 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r14 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r3 = $r14
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r3 = $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r15 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r15 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z0 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z0 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : return r3
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r16 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r16 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r4 = interfaceinvoke $r16.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r4 = interfaceinvoke $r16.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r17 = new java.util.LinkedHashSet
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r17 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r18 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r18 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r17.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r18)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r17.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r18) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r5 = $r17
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r5 = $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r19 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r19 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r20 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping: java.util.Set access$000(org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping)>($r19)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r20 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping: java.util.Set access$000(org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping)>($r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r6 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r6 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r31 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r31 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r32 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType ROLLING>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r32 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType ROLLING> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $r31 != $r32
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $r31 != $r32 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r33 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $r31 != $r32 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : return r3
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r33 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z5 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : return r3
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r35 = (java.lang.String) $r34
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r36 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping this$0>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r36 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping this$0> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r37 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping: java.util.Set access$100(org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping)>($r36)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r37 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping: java.util.Set access$100(org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z6 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>(r35)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z6 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z6 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z7 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: boolean checkServiceValidity(org.apache.ambari.server.state.UpgradeContext,java.lang.String,java.util.Map)>(r1, r35, r4)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z7 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: boolean checkServiceValidity(org.apache.ambari.server.state.UpgradeContext,java.lang.String,java.util.Map)>(r1, r35, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z7 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r38 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r38 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r39 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r39 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ")
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r42 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r35)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r42 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r45 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r45 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r46 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r46 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r47 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r47 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r48 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r48 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r49 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r49 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r49.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r49.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r48[0] = $r49
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r48[0] = $r49 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r46.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r35, "", $r47, $r48)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r46.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r35, "", $r47, $r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r45[0] = $r46
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r45[0] = $r46 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r39, $r44, $r45)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r38.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r39, $r44, $r45) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r50 = $r38
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r50 = $r38 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r50)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r50) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z5 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r7 = (java.lang.String) $r21
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r7 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z2 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: boolean checkServiceValidity(org.apache.ambari.server.state.UpgradeContext,java.lang.String,java.util.Map)>(r1, r7, r4)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z2 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: boolean checkServiceValidity(org.apache.ambari.server.state.UpgradeContext,java.lang.String,java.util.Map)>(r1, r7, r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r22 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r22 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r23 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r23 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ")
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service Check ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r26 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r7)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r26 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getServiceDisplay(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r29 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r29 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r8 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r8 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r30 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r30 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r10 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r10 = new org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r10.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r10.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r30[0] = $r10
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r30[0] = $r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r7, "", $r9, $r30)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(r7, "", $r9, $r30) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r29[0] = $r8
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : $r29[0] = $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r22.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r23, $r28, $r29)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : specialinvoke $r22.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r23, $r28, $r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r11 = $r22
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : r11 = $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r5.<java.util.Set: boolean remove(java.lang.Object)>(r7)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : interfaceinvoke r5.<java.util.Set: boolean remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.build : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
