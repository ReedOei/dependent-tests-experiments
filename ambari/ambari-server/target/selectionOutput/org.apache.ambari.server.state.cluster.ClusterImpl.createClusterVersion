org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r6 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: void createClusterVersionInternal(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, r3, r4)
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r10 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : r5 = $r10 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r11 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : r5 = $r10 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r10 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r11 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : throw r5
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: void createClusterVersionInternal(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : specialinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: void createClusterVersionInternal(org.apache.ambari.server.state.StackId,java.lang.String,java.lang.String,org.apache.ambari.server.state.RepositoryVersionState)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r10 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r8 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : goto [?= return]
org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : goto [?= return] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.createClusterVersion : return
