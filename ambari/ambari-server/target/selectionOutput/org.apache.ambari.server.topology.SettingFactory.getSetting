org.apache.ambari.server.topology.SettingFactory.getSetting : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1
org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting
org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2)
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11
org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : return r3
org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : return r3
org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = (java.util.Map) $r12
org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = (java.util.Map) $r12 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = (java.util.Map$Entry) $r14
org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = (java.lang.String) $r15
org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r8 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.topology.SettingFactory.getSetting : r8 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r17 instanceof java.util.Set
org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r17 instanceof java.util.Set >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $i0 = lengthof r8
org.apache.ambari.server.topology.SettingFactory.getSetting : $i0 = lengthof r8 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $i0 <= 1
org.apache.ambari.server.topology.SettingFactory.getSetting : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r19 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactory.getSetting : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.SettingFactory.getSetting : $r27 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.topology.SettingFactory.getSetting : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid setting schema: ")
org.apache.ambari.server.topology.SettingFactory.getSetting : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid setting schema: ") >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r30 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r30 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r30)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33)
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : throw $r27
org.apache.ambari.server.topology.SettingFactory.getSetting : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r10 = $r19
org.apache.ambari.server.topology.SettingFactory.getSetting : r10 = $r19 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r20 = r8[1]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r20 = r8[1] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22)
org.apache.ambari.server.topology.SettingFactory.getSetting : virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r24 = r8[0]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r24 = r8[0] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.Set) $r25
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.Set) $r25 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r9 != null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r9 != null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r26 = new java.util.HashSet
org.apache.ambari.server.topology.SettingFactory.getSetting : if r9 != null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = r8[0]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = r8[0] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9)
org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = $r26
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = $r26 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.HashSet) $r18
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.HashSet) $r18 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = r8[0]
