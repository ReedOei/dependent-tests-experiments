org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r2 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result pathExists(java.lang.String,boolean)>(r0, z0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $z1 = virtualinvoke $r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $z1 = virtualinvoke $r2.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z1 == 0
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r3 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r4 = new java.util.ArrayList
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r4 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : r1 = $r4
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : r1 = $r4 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("/bin/mkdir")
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("/bin/mkdir") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $z3 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $z3 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z3 != 0
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z3 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-p")
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : if $z3 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r5 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.util.List,java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>(r1, null, null, z0)
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r5 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.util.List,java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>(r1, null, null, z0) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : return $r5
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("-p") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0)
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : $r3 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : specialinvoke $r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(0, "The directory already exists, skipping.", "")
org.apache.ambari.server.utils.ShellCommandUtil.mkdir : specialinvoke $r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(0, "The directory already exists, skipping.", "") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.mkdir : return $r3
