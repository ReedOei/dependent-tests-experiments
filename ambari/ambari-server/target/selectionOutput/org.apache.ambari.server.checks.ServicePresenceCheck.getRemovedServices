org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r2 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = $r2
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = $r2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11[0] = "removed-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11[0] = "removed-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11[1] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r11[1] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Both %s and %s list must be specified in the upgrade XML file.", $r11)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Both %s and %s list must be specified in the upgrade XML file.", $r11) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r12)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : throw $r10
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r13 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r13 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r14 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r14 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i2 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i2 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $i1 == $i2
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $i1 == $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r15 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $i1 == $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i3 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i3 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i0 >= $i3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i0 >= $i3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i0 >= $i3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return r3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r19 = (java.lang.String) $r18
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r20 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r20 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r21 = (java.lang.String) $r20
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r9 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r9 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z1 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r22 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r22 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23[0] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23[0] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23[1] = "removed-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r23[1] = "removed-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Make sure both %s and %s list only contain comma separated list of services.", $r23)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Make sure both %s and %s list only contain comma separated list of services.", $r23) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r22.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : throw $r22
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z1 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r22 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = i0 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= $i3 = interfaceinvoke r6.<java.util.List: int size()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= $i3 = interfaceinvoke r6.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i3 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r15 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16[0] = "new-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16[0] = "new-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16[1] = "removed-service-names"
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r16[1] = "removed-service-names" >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s must have the same number of services as the %s list.", $r16)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s must have the same number of services as the %s list.", $r16) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : throw $r15
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return r3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null
