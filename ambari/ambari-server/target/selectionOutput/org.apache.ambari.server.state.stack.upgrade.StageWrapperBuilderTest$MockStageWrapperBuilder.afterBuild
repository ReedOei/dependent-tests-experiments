org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : r3 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : return r3
