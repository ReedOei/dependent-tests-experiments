org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r12 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r26 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r26 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return $r26
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r12 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r12.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r12.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r1 = $r12
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r1 = $r12 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r13 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r2 = $r13
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r2 = $r13 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = r0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = r0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z1 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean isContainer()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r3 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r15 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r15 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z3 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r5 = (java.util.Map) $r16
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r5 = (java.util.Map) $r16 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r17 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r17 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r6 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r6 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z4 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z3 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r7 = (java.util.Map$Entry) $r18
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r7 = (java.util.Map$Entry) $r18 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r19 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r19 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r8 = (java.lang.String) $r19
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r8 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r9 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r20
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r9 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r20 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r9 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r9 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r21 = new org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r9 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r21 = new org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r22 = virtualinvoke r9.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r22 = virtualinvoke r9.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r21.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void <init>(java.util.Map)>($r22)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : specialinvoke $r21.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void <init>(java.util.Map)>($r22) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r10 = $r21
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r10 = $r21 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r23 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r23 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r24 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r24 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r11 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r24
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r11 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r24 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r11 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r11 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r11 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : virtualinvoke r11.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor)>(r10)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : virtualinvoke r11.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: void update(org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor)>(r10) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $z1 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: boolean isContainer()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r14 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r3 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : $r14 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) r3 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r4 = virtualinvoke $r14.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r4 = virtualinvoke $r14.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map getConfigurations()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r4 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : if r4 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.getConfigurations : r3 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor getParent()>()
