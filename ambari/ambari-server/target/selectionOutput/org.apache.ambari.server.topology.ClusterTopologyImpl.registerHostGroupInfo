org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r2 = <org.apache.ambari.server.topology.ClusterTopologyImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i0 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering requested host group information for {} hostgroups", $r10)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering requested host group information for {} hostgroups", $r10) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: void checkForDuplicateHosts(java.util.Map)>(r1)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: void checkForDuplicateHosts(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r3 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r3 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : return
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r4 = (org.apache.ambari.server.topology.HostGroupInfo) $r12
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r4 = (org.apache.ambari.server.topology.HostGroupInfo) $r12 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r5 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r5 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r13 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r13 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r6 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r5)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r6 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r6 != null
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r6 != null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r14 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r6 != null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r20 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Map hostGroupInfoMap>
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r20 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Map hostGroupInfoMap> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r7 = (org.apache.ambari.server.topology.HostGroupInfo) $r21
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r7 = (org.apache.ambari.server.topology.HostGroupInfo) $r21 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r7 != null
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r7 != null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r8 = interfaceinvoke r6.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if r7 != null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r29 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r29 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $z1 = interfaceinvoke $r29.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $z1 = interfaceinvoke $r29.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z1 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: void addHostsToTopology(org.apache.ambari.server.topology.HostGroupInfo)>(r4)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i1 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r30 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r31 = $r30 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r32 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r32 = new org.apache.ambari.server.topology.InvalidTopologyException >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r33 = new java.lang.StringBuilder
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add hosts to unknown host group: ")
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add hosts to unknown host group: ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r32.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r36)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r32.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : throw $r32
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i1 = virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i2 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i2 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i3 = $i1 + $i2
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i3)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : virtualinvoke r7.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i3) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: void addHostsToTopology(org.apache.ambari.server.topology.HostGroupInfo)>(r4) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= (branch)]
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: void addHostsToTopology(org.apache.ambari.server.topology.HostGroupInfo)>(r4) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r30 := @caughtexception
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r8 = interfaceinvoke r6.<org.apache.ambari.server.topology.HostGroup: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r22 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r22 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r23 = virtualinvoke r8.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r23 = virtualinvoke r8.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r24 = virtualinvoke r8.<org.apache.ambari.server.topology.Configuration: java.util.Map getAttributes()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r24 = virtualinvoke r8.<org.apache.ambari.server.topology.Configuration: java.util.Map getAttributes()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r25 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r25 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r22.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r23, $r24, $r25)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r22.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map,org.apache.ambari.server.topology.Configuration)>($r23, $r24, $r25) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r9 = $r22
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : r9 = $r22 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r26 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r26 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : virtualinvoke $r26.<org.apache.ambari.server.topology.Configuration: void setParentConfiguration(org.apache.ambari.server.topology.Configuration)>(r9)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : virtualinvoke $r26.<org.apache.ambari.server.topology.Configuration: void setParentConfiguration(org.apache.ambari.server.topology.Configuration)>(r9) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r27 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Map hostGroupInfoMap>
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r27 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Map hostGroupInfoMap> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r4)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r4) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= (branch)]
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r14 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host_group specified: ")
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host_group specified: ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  All request host groups must have a corresponding host group in the specified blueprint")
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  All request host groups must have a corresponding host group in the specified blueprint") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.registerHostGroupInfo : throw $r14
