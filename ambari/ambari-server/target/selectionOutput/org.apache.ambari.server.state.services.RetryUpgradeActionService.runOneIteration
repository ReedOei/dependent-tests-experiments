org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r5 = r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: com.google.inject.Provider m_clustersProvider> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r7 = (org.apache.ambari.server.state.Clusters) $r6
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r7 = (org.apache.ambari.server.state.Clusters) $r6 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r1 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r1 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r8 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r8 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if $z0 == 0
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : return
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r3 = (org.apache.ambari.server.state.Cluster) $r9
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r3 = (org.apache.ambari.server.state.Cluster) $r9 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r10 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r3 = (org.apache.ambari.server.state.Cluster) $r9 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r14 = $r13 >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r15 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r15 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r17 = virtualinvoke r14.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r17 = virtualinvoke r14.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to analyze commands that may be retried for cluster with id {}. Exception: {}", $r16, $r17)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to analyze commands that may be retried for cluster with id {}. Exception: {}", $r16, $r17) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r10 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r10 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Analyzing tasks for cluster {} that can be retried during Stack Upgrade.", $r11)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Analyzing tasks for cluster {} that can be retried during Stack Upgrade.", $r11) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r4 = specialinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.lang.Long getActiveUpgradeRequestId(org.apache.ambari.server.state.Cluster)>(r3)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Analyzing tasks for cluster {} that can be retried during Stack Upgrade.", $r11) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r4 = specialinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.lang.Long getActiveUpgradeRequestId(org.apache.ambari.server.state.Cluster)>(r3) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if r4 == null
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : r4 = specialinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: java.lang.Long getActiveUpgradeRequestId(org.apache.ambari.server.state.Cluster)>(r3) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if r4 == null >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r12 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG>
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if r4 == null >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= (branch)]
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : if r4 == null >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r12 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Upgrade is in-progress with request id {}.", r4)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r12 = <org.apache.ambari.server.state.services.RetryUpgradeActionService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Upgrade is in-progress with request id {}.", r4) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : virtualinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: void retryHoldingCommandsInRequest(java.lang.Long)>(r4)
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Upgrade is in-progress with request id {}.", r4) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : virtualinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: void retryHoldingCommandsInRequest(java.lang.Long)>(r4) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : goto [?= (branch)]
org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : virtualinvoke r0.<org.apache.ambari.server.state.services.RetryUpgradeActionService: void retryHoldingCommandsInRequest(java.lang.Long)>(r4) >>>>>>>> org.apache.ambari.server.state.services.RetryUpgradeActionService.runOneIteration : $r13 := @caughtexception
