org.apache.ambari.server.stack.RepoUtil.parseRepoFile : n0 = null >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = null
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = null >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = null
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = null >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r34 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r3)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r34 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r35 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r4)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r35 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r33.<org.apache.ambari.server.stack.RepositoryFolderAndXml: void <init>(com.google.common.base.Optional,com.google.common.base.Optional)>($r34, $r35)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r33.<org.apache.ambari.server.stack.RepositoryFolderAndXml: void <init>(com.google.common.base.Optional,com.google.common.base.Optional)>($r34, $r35) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : return $r33
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r9 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r9 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r11 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r11 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r14 = new java.io.File
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r14 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r15 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r15 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r16 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r17 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r17 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r20 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r20 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repoinfo.xml")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repoinfo.xml") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r23)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r24 = $r14
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r24 = $r14 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z1 = virtualinvoke r24.<java.io.File: boolean exists()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $z1 = virtualinvoke r24.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r25 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "org/apache/ambari/server/state/stack/RepositoryXml", r24)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r26 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r6 = $r26 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r27 = new org.apache.ambari.server.state.stack.RepositoryXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r27 = new org.apache.ambari.server.state.stack.RepositoryXml >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r27.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r27.<org.apache.ambari.server.state.stack.RepositoryXml: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = $r27
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = $r27 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke r4.<org.apache.ambari.server.state.stack.RepositoryXml: void setValid(boolean)>(0)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke r4.<org.apache.ambari.server.state.stack.RepositoryXml: void setValid(boolean)>(0) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse repo file at location: ")
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse repo file at location: ") >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r30 = virtualinvoke r24.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r30 = virtualinvoke r24.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r7 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r7 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke r4.<org.apache.ambari.server.state.stack.RepositoryXml: void addError(java.lang.String)>(r7)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : virtualinvoke r4.<org.apache.ambari.server.state.stack.RepositoryXml: void addError(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r32 = <org.apache.ambari.server.stack.RepoUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>(r7)
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r25 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "org/apache/ambari/server/state/stack/RepositoryXml", r24) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = (org.apache.ambari.server.state.stack.RepositoryXml) $r25
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r25 = virtualinvoke r2.<org.apache.ambari.server.stack.ModuleFileUnmarshaller: java.lang.Object unmarshal(java.lang.Class,java.io.File)>(class "org/apache/ambari/server/state/stack/RepositoryXml", r24) >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r26 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = (org.apache.ambari.server.state.stack.RepositoryXml) $r25 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : goto [?= $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml]
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : r4 = (org.apache.ambari.server.state.stack.RepositoryXml) $r25 >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r26 := @caughtexception
org.apache.ambari.server.stack.RepoUtil.parseRepoFile : goto [?= $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml] >>>>>>>> org.apache.ambari.server.stack.RepoUtil.parseRepoFile : $r33 = new org.apache.ambari.server.stack.RepositoryFolderAndXml
