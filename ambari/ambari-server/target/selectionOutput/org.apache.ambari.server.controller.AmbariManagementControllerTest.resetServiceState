org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r9 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r9 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke $r8.<org.apache.ambari.server.state.Service: void setDesiredState(org.apache.ambari.server.state.State)>($r9)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke $r8.<org.apache.ambari.server.state.Service: void setDesiredState(org.apache.ambari.server.state.State)>($r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : return
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r5 = (org.apache.ambari.server.state.ServiceComponent) $r13
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r5 = (org.apache.ambari.server.state.ServiceComponent) $r13 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r14 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r14)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r17
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r18 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setDesiredState(org.apache.ambari.server.state.State)>($r18)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setDesiredState(org.apache.ambari.server.state.State)>($r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $r19 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r19)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setStackVersion(org.apache.ambari.server.state.StackId)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setStackVersion(org.apache.ambari.server.state.StackId)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.resetServiceState : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
