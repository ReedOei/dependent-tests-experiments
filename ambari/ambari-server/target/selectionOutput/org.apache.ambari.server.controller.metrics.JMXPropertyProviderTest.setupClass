org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r4 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r4[0] = $r0
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r4[0] = $r0 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r4)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r4) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r5 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r5 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r2 = (org.apache.ambari.server.configuration.Configuration) $r5
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r2 = (org.apache.ambari.server.configuration.Configuration) $r5 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METRIC_RETRIEVAL_SERVICE_REQUEST_TTL_ENABLED>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METRIC_RETRIEVAL_SERVICE_REQUEST_TTL_ENABLED> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r2.<org.apache.ambari.server.configuration.Configuration: void setProperty(java.lang.String,java.lang.String)>($r7, "false")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r2.<org.apache.ambari.server.configuration.Configuration: void setProperty(java.lang.String,java.lang.String)>($r7, "false") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void init(org.apache.ambari.server.configuration.Configuration)>(r2)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void init(org.apache.ambari.server.configuration.Configuration)>(r2) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/metrics/MetricPropertyProviderFactory")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/metrics/MetricPropertyProviderFactory") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r9 = (org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory) $r8
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r9 = (org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory) $r8 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory> = $r9
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory> = $r9 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/services/MetricsRetrievalService")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/state/services/MetricsRetrievalService") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r3 = (org.apache.ambari.server.state.services.MetricsRetrievalService) $r10
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : r3 = (org.apache.ambari.server.state.services.MetricsRetrievalService) $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r3.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.util.concurrent.ListenableFuture start()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r3.<org.apache.ambari.server.state.services.MetricsRetrievalService: com.google.common.util.concurrent.ListenableFuture start()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r12 = new org.apache.ambari.server.utils.SynchronousThreadPoolExecutor
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : $r12 = new org.apache.ambari.server.utils.SynchronousThreadPoolExecutor >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : specialinvoke $r12.<org.apache.ambari.server.utils.SynchronousThreadPoolExecutor: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : specialinvoke $r12.<org.apache.ambari.server.utils.SynchronousThreadPoolExecutor: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r3.<org.apache.ambari.server.state.services.MetricsRetrievalService: void setThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor)>($r12)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : virtualinvoke r3.<org.apache.ambari.server.state.services.MetricsRetrievalService: void setThreadPoolExecutor(java.util.concurrent.ThreadPoolExecutor)>($r12) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.setupClass : return
