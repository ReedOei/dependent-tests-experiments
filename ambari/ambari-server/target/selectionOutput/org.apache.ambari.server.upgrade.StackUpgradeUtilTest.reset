org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r8 = r0.<org.apache.ambari.server.upgrade.StackUpgradeUtilTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r9 = interfaceinvoke $r8.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r3 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r9
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r3 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r9 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r10 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getRepository(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r10 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getRepository(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z0 == 0
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : return
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r5 = (java.util.Map$Entry) $r12
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r5 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r14 = (java.util.List) $r13
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r14 = (java.util.List) $r13 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r6 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r6 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z1 == 0
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r7 = (org.apache.ambari.server.state.RepositoryInfo) $r15
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : r7 = (org.apache.ambari.server.state.RepositoryInfo) $r15 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r16 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoId()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r16 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoId()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $i0 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("epel")
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $i0 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("epel") >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if -1 != $i0
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if -1 != $i0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r17 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getOsType()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : if -1 != $i0 >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r17 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r18 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoId()>()
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : $r18 = virtualinvoke r7.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getRepoId()>() >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: void updateRepo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r17, $r18, "", null)
org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: void updateRepo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r17, $r18, "", null) >>>>>>>> org.apache.ambari.server.upgrade.StackUpgradeUtilTest.reset : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
