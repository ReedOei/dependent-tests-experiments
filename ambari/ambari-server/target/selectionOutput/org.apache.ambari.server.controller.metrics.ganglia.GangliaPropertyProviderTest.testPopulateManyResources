org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r1 = new org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: void <init>(java.lang.String)>("temporal_ganglia_data_1.txt")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r1.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: void <init>(java.lang.String)>("temporal_ganglia_data_1.txt") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r2 = $r1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r17 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r17 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r17.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r17.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest$TestGangliaHostProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r3 = $r17
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r3 = $r17 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r18 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaHostPropertyProvider
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r18 = new org.apache.ambari.server.controller.metrics.ganglia.GangliaHostPropertyProvider >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r20 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getMetricPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r19)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r20 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getMetricPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r19) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r21 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r21 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r4 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r4 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r5 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r5 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r18.<org.apache.ambari.server.controller.metrics.ganglia.GangliaHostPropertyProvider: void <init>(java.util.Map,org.apache.ambari.server.controller.internal.URLStreamProvider,org.apache.ambari.server.configuration.ComponentSSLConfiguration,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String)>($r20, r2, $r21, r3, $r4, $r5)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r18.<org.apache.ambari.server.controller.metrics.ganglia.GangliaHostPropertyProvider: void <init>(java.util.Map,org.apache.ambari.server.controller.internal.URLStreamProvider,org.apache.ambari.server.configuration.ComponentSSLConfiguration,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String)>($r20, r2, $r21, r3, $r4, $r5) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r6 = $r18
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r6 = $r18 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r22 = new java.util.HashSet
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r22 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r22.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r22.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r7 = $r22
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r7 = $r22 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r23 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r23 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r23.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r24)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r23.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r24) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r8 = $r23
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r8 = $r23 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r25 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r25 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r25, "c1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r25, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r26 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r26 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r26, "domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r26, "domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r27 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r27 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r27.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r27.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r29 = $r27
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r29 = $r27 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r30 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r30 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r29.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r30, "c1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r29.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r30, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r31 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r31 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r29.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r31, "domU-12-31-39-0E-34-E2.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r29.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r31, "domU-12-31-39-0E-34-E2.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r29)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r29) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r32 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r32 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r33 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r33 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r32.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r33)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r32.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r33) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r34 = $r32
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r34 = $r32 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r35 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r35 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r35, "c1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r35, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r36 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r36 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r36, "domU-12-31-39-0E-34-E3.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r34.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r36, "domU-12-31-39-0E-34-E3.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r34)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r37 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r37 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r37.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r37.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r9 = $r37
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r9 = $r37 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r38 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r38 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r39 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r39 = new org.apache.ambari.server.controller.internal.TemporalInfoImpl >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r39.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r39.<org.apache.ambari.server.controller.internal.TemporalInfoImpl: void <init>(long,long,long)>(10L, 20L, 1L) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r41 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r41 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r41)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r42 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r42, r9)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r42, r9) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r43 = virtualinvoke r6.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r7, r10, null)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r43 = virtualinvoke r6.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r7, r10, null) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i1 = interfaceinvoke $r43.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i1 = interfaceinvoke $r43.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $l2 = (long) $i1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $l2 = (long) $i1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l2)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l2) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r44 = new org.apache.http.client.utils.URIBuilder
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r44 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r44.<org.apache.http.client.utils.URIBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : specialinvoke $r44.<org.apache.http.client.utils.URIBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r11 = $r44
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r11 = $r44 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r46 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r46 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z3 = virtualinvoke $r46.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z3 = virtualinvoke $r46.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z3 == 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r47 = "https"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r47 = "http"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r47 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r47)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>("domU-12-31-39-0E-34-E1.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>("domU-12-31-39-0E-34-E1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/cgi-bin/rrd.py")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/cgi-bin/rrd.py") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("c", "HDPJobTracker,HDPHBaseMaster,HDPResourceManager,HDPFlumeServer,HDPSlaves,HDPHistoryServer,HDPJournalNode,HDPTaskTracker,HDPHBaseRegionServer,HDPNameNode")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("c", "HDPJobTracker,HDPHBaseMaster,HDPResourceManager,HDPFlumeServer,HDPSlaves,HDPHistoryServer,HDPJournalNode,HDPTaskTracker,HDPHBaseRegionServer,HDPNameNode") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("h", "domU-12-31-39-0E-34-E3.compute-1.internal,domU-12-31-39-0E-34-E1.compute-1.internal,domU-12-31-39-0E-34-E2.compute-1.internal")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("h", "domU-12-31-39-0E-34-E3.compute-1.internal,domU-12-31-39-0E-34-E1.compute-1.internal,domU-12-31-39-0E-34-E2.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("m", "proc_total")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("m", "proc_total") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("s", "10")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("s", "10") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("e", "20")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("e", "20") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("r", "1")
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String)>("r", "1") >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r12 = virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r12 = virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57 = newarray (java.lang.String)[10]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57 = newarray (java.lang.String)[10] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[0] = "HDPJobTracker"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[0] = "HDPJobTracker" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[1] = "HDPHBaseMaster"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[1] = "HDPHBaseMaster" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[2] = "HDPResourceManager"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[2] = "HDPResourceManager" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[3] = "HDPFlumeServer"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[3] = "HDPFlumeServer" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[4] = "HDPSlaves"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[4] = "HDPSlaves" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[5] = "HDPHistoryServer"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[5] = "HDPHistoryServer" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[6] = "HDPJournalNode"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[6] = "HDPJournalNode" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[7] = "HDPTaskTracker"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[7] = "HDPTaskTracker" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[8] = "HDPHBaseRegionServer"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[8] = "HDPHBaseRegionServer" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[9] = "HDPNameNode"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r57[9] = "HDPNameNode" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r57)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r57) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58 = newarray (java.lang.String)[3]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[0] = "domU-12-31-39-0E-34-E3.compute-1.internal"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[0] = "domU-12-31-39-0E-34-E3.compute-1.internal" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[1] = "domU-12-31-39-0E-34-E1.compute-1.internal"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[1] = "domU-12-31-39-0E-34-E1.compute-1.internal" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[2] = "domU-12-31-39-0E-34-E2.compute-1.internal"
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r58[2] = "domU-12-31-39-0E-34-E2.compute-1.internal" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r58)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r58) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r59 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r59 = r0.<org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z4 = virtualinvoke $r59.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z4 = virtualinvoke $r59.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z4 == 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $b3 = 1
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $b3 = 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $b3 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : b0 = $b3
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : b0 = $b3 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i4 = 66 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i4 = 66 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r60 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i4)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r60 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i4) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r61 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r61 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i5 = 66 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i5 = 66 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r62 = virtualinvoke $r61.<java.lang.String: java.lang.String substring(int,int)>(0, $i5)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r62 = virtualinvoke $r61.<java.lang.String: java.lang.String substring(int,int)>(0, $i5) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r60, $r62)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r60, $r62) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r63 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r63 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i6 = 66 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i6 = 66 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i7 = 236 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i7 = 236 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r64 = virtualinvoke $r63.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r64 = virtualinvoke $r63.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z5 = staticinvoke <org.apache.ambari.server.utils.CollectionPresentationUtils: boolean isStringPermutationOfCollection(java.lang.String,java.util.Collection,java.lang.String,int,int)>($r64, r13, "%2C", 0, 0)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z5 = staticinvoke <org.apache.ambari.server.utils.CollectionPresentationUtils: boolean isStringPermutationOfCollection(java.lang.String,java.util.Collection,java.lang.String,int,int)>($r64, r13, "%2C", 0, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r65 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r65 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i8 = 239 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i8 = 239 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i9 = 368 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i9 = 368 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r66 = virtualinvoke $r65.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r66 = virtualinvoke $r65.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z6 = staticinvoke <org.apache.ambari.server.utils.CollectionPresentationUtils: boolean isStringPermutationOfCollection(java.lang.String,java.util.Collection,java.lang.String,int,int)>($r66, r14, "%2C", 0, 0)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z6 = staticinvoke <org.apache.ambari.server.utils.CollectionPresentationUtils: boolean isStringPermutationOfCollection(java.lang.String,java.util.Collection,java.lang.String,int,int)>($r66, r14, "%2C", 0, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i10 = 369 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i10 = 369 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r67 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i10)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r67 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i10) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r68 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r68 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.ganglia.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i11 = 369 + b0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i11 = 369 + b0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r69 = virtualinvoke $r68.<java.lang.String: java.lang.String substring(int)>($i11)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r69 = virtualinvoke $r68.<java.lang.String: java.lang.String substring(int)>($i11) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r67, $r69)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r67, $r69) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r15 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r15 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z7 == 0
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r70 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : return
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r70 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r16 = (org.apache.ambari.server.controller.spi.Resource) $r70
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : r16 = (org.apache.ambari.server.controller.spi.Resource) $r70 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r71 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r16)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r71 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r16) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i12 = interfaceinvoke $r71.<java.util.Map: int size()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $i12 = interfaceinvoke $r71.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $l13 = (long) $i12
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $l13 = (long) $i12 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l13)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(3L, $l13) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r72 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID>
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r72 = <org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest: java.lang.String PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r73 = interfaceinvoke r16.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r72)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r73 = interfaceinvoke r16.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r72) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r73)
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $b3 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= b0 = $b3]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= b0 = $b3] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : b0 = $b3
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : $r47 = "https" >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r47)]
org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : goto [?= virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r47)] >>>>>>>> org.apache.ambari.server.controller.metrics.ganglia.GangliaPropertyProviderTest.testPopulateManyResources : virtualinvoke r11.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r47)
