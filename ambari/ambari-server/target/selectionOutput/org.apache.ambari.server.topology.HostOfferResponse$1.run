org.apache.ambari.server.topology.HostOfferResponse$1.run : $r3 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: org.apache.ambari.server.topology.HostOfferResponse this$0> >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r4 = staticinvoke <org.apache.ambari.server.topology.HostOfferResponse: java.util.List access$000(org.apache.ambari.server.topology.HostOfferResponse)>($r3)
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r4 = staticinvoke <org.apache.ambari.server.topology.HostOfferResponse: java.util.List access$000(org.apache.ambari.server.topology.HostOfferResponse)>($r3) >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : if $z0 == 0
org.apache.ambari.server.topology.HostOfferResponse$1.run : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : return
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : r2 = (org.apache.ambari.server.topology.TopologyTask) $r5
org.apache.ambari.server.topology.HostOfferResponse$1.run : r2 = (org.apache.ambari.server.topology.TopologyTask) $r5 >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r6 = staticinvoke <org.apache.ambari.server.topology.HostOfferResponse: org.slf4j.Logger access$100()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r6 = staticinvoke <org.apache.ambari.server.topology.HostOfferResponse: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r7 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: java.lang.String val$hostName>
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r7 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: java.lang.String val$hostName> >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r8 = interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: org.apache.ambari.server.topology.TopologyTask$Type getType()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r8 = interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: org.apache.ambari.server.topology.TopologyTask$Type getType()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Running task for accepted host offer for hostname = {}, task = {}", $r7, $r8)
org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Running task for accepted host offer for hostname = {}, task = {}", $r7, $r8) >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r9 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: org.apache.ambari.server.topology.ClusterTopology val$topology>
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r9 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: org.apache.ambari.server.topology.ClusterTopology val$topology> >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $r10 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: org.apache.ambari.server.topology.AmbariContext val$ambariContext>
org.apache.ambari.server.topology.HostOfferResponse$1.run : $r10 = r0.<org.apache.ambari.server.topology.HostOfferResponse$1: org.apache.ambari.server.topology.AmbariContext val$ambariContext> >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: void init(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.AmbariContext)>($r9, $r10)
org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: void init(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.AmbariContext)>($r9, $r10) >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: void run()>()
org.apache.ambari.server.topology.HostOfferResponse$1.run : interfaceinvoke r2.<org.apache.ambari.server.topology.TopologyTask: void run()>() >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostOfferResponse$1.run : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostOfferResponse$1.run : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
