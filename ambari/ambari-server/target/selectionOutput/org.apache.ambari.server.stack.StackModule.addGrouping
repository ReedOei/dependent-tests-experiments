org.apache.ambari.server.stack.StackModule.addGrouping : $r5 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if $r5 != null
org.apache.ambari.server.stack.StackModule.addGrouping : if $r5 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r6 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackModule.addGrouping : if $r5 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $i1 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.stack.StackModule.addGrouping : $i1 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : i0 = $i1 - 1
org.apache.ambari.server.stack.StackModule.addGrouping : i0 = $i1 - 1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if i0 < 0
org.apache.ambari.server.stack.StackModule.addGrouping : if i0 < 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.stack.StackModule.addGrouping : if i0 < 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : return 0
org.apache.ambari.server.stack.StackModule.addGrouping : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r13 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12
org.apache.ambari.server.stack.StackModule.addGrouping : $r13 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : r4 = $r13.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : r4 = $r13.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r14 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.addGrouping : $r14 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r14)
org.apache.ambari.server.stack.StackModule.addGrouping : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0
org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $i2 = i0 + 1
org.apache.ambari.server.stack.StackModule.addGrouping : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : i0 = i0 + -1
org.apache.ambari.server.stack.StackModule.addGrouping : i0 = i0 + -1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.addGrouping : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : if i0 < 0
org.apache.ambari.server.stack.StackModule.addGrouping : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i2, r2)
org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke r1.<java.util.List: void add(int,java.lang.Object)>($i2, r2) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r15 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.addGrouping : $r15 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.addGrouping : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added group/after: ")
org.apache.ambari.server.stack.StackModule.addGrouping : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added group/after: ") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r18 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : $r18 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.stack.StackModule.addGrouping : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.stack.StackModule.addGrouping : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r21 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.addGrouping : $r21 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.ambari.server.stack.StackModule.addGrouping : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.addGrouping : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r23)
org.apache.ambari.server.stack.StackModule.addGrouping : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : return 1
org.apache.ambari.server.stack.StackModule.addGrouping : $r6 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.addGrouping : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ")
org.apache.ambari.server.stack.StackModule.addGrouping : $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r8 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.addGrouping : $r8 = r2.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.stack.StackModule.addGrouping : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to specify which group it should come after")
org.apache.ambari.server.stack.StackModule.addGrouping : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to specify which group it should come after") >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.addGrouping : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r11)
org.apache.ambari.server.stack.StackModule.addGrouping : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.stack.StackModule.addGrouping : throw $r6
