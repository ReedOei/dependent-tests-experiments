org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r6 = $r13 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r14 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r14 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r16 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r16 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15[0] = $r16
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r15[0] = $r16 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to add hosts to a non-existent cluster: \'%s\'", $r15)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempt to add hosts to a non-existent cluster: \'%s\'", $r15) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : throw $r14
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r11 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r12 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r12 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r12 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $l0 = virtualinvoke $r12.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= r18 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r13 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= r18 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r18 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r18 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r19 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r19 = interfaceinvoke r2.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r20 = interfaceinvoke $r19.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r7 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>($r20, r3)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r7 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>($r20, r3) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r21 = interfaceinvoke r18.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r21 = interfaceinvoke r18.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r8 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r8 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : return z0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r9 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r22
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r9 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r22 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r23 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r23 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r7)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 == 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r27 = $r26 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r28 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r28 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29 = newarray (java.lang.Object)[2]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29[0] = r1
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29[0] = r1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r30 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r30 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29[1] = $r30
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r29[1] = $r30 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("An error occurred while registering host \'%s\' with config group \'%s\' ", $r29)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("An error occurred while registering host \'%s\' with config group \'%s\' ", $r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r31, r27)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r31, r27) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : throw $r28
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z0 = 1
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r24 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r24 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r25 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r24 = interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.util.Map getHosts()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r25 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z3 = interfaceinvoke $r24.<java.util.Map: boolean containsKey(java.lang.Object)>($r25)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r25 = interfaceinvoke r10.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z3 = interfaceinvoke $r24.<java.util.Map: boolean containsKey(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z3 != 0
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $z3 = interfaceinvoke $r24.<java.util.Map: boolean containsKey(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r10)
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : if $z3 != 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r10) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : interfaceinvoke r9.<org.apache.ambari.server.state.configgroup.ConfigGroup: void addHost(org.apache.ambari.server.state.Host)>(r10) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.addHostToExistingConfigGroups : $r26 := @caughtexception
