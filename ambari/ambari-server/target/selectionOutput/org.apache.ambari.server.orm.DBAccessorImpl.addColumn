org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r5 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $z1 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableHasColumn(java.lang.String,java.lang.String)>(r1, $r5)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $z1 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: boolean tableHasColumn(java.lang.String,java.lang.String)>(r1, $r5) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $z1 == 0
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : return
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r6 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r6 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r3 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r3 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r7 = <org.apache.ambari.server.orm.DBAccessorImpl$2: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType>
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r7 = <org.apache.ambari.server.orm.DBAccessorImpl$2: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $i1 = $r7[$i0]
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $i1 = $r7[$i0] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : tableswitch($i1) {     case 1:
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : z0 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r13 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper>
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r13 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r14 = interfaceinvoke $r13.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddColumnStatement(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r14 = interfaceinvoke $r13.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddColumnStatement(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r14)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : return
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : z0 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r8 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r8 == null
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void setNullable(boolean)>(1)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r9 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper>
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r9 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r4 = interfaceinvoke $r9.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddColumnStatement(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : r4 = interfaceinvoke $r9.<org.apache.ambari.server.orm.helpers.dbms.DbmsHelper: java.lang.String getAddColumnStatement(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r10 == null
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r10 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if $r10 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : return
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r11 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: int updateTable(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)>(r1, $r11, $r12, "")
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: int updateTable(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)>(r1, $r11, $r12, "") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if z0 != 0
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void setColumnNullable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,boolean)>(r1, r2, z0)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void addDefaultConstraint(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void addDefaultConstraint(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : return
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void setColumnNullable(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo,boolean)>(r1, r2, z0) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void addDefaultConstraint(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>(r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.addColumn : virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void setNullable(boolean)>(1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.addColumn : $r9 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.orm.helpers.dbms.DbmsHelper dbmsHelper>
