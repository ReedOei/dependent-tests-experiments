org.apache.ambari.server.actionmanager.ActionManager.getRequests : $r3 = r0.<org.apache.ambari.server.actionmanager.ActionManager: org.apache.ambari.server.actionmanager.ActionDBAccessor db> >>>>>>>> org.apache.ambari.server.actionmanager.ActionManager.getRequests : r2 = interfaceinvoke $r3.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequests(java.util.Collection)>(r1)
org.apache.ambari.server.actionmanager.ActionManager.getRequests : r2 = interfaceinvoke $r3.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequests(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.ActionManager.getRequests : $r4 = <org.apache.ambari.server.actionmanager.ActionManager: org.apache.ambari.server.topology.TopologyManager topologyManager>
org.apache.ambari.server.actionmanager.ActionManager.getRequests : $r4 = <org.apache.ambari.server.actionmanager.ActionManager: org.apache.ambari.server.topology.TopologyManager topologyManager> >>>>>>>> org.apache.ambari.server.actionmanager.ActionManager.getRequests : $r5 = virtualinvoke $r4.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection getRequests(java.util.Collection)>(r1)
org.apache.ambari.server.actionmanager.ActionManager.getRequests : $r5 = virtualinvoke $r4.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection getRequests(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.ActionManager.getRequests : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r5)
org.apache.ambari.server.actionmanager.ActionManager.getRequests : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.actionmanager.ActionManager.getRequests : return r2
