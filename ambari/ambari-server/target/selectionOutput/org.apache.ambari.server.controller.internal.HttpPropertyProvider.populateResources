org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $i0 = interfaceinvoke r4.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $i0 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $i0 != 0
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : return r1
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z0 == 0
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : return r1
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r6 = (org.apache.ambari.server.controller.spi.Resource) $r14
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r6 = (org.apache.ambari.server.controller.spi.Resource) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r15 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r15 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r16 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r16 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r7 = (java.lang.String) $r16
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r7 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r17 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String hostNamePropertyId>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r17 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String hostNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r18 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r17)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r18 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r8 = (java.lang.String) $r18
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r8 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r19 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String componentNamePropertyId>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r19 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.lang.String componentNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r20 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r20 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r9 = (java.lang.String) $r20
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r9 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r7 == null
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r8 == null
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r9 == null
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r21 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Map httpPropertyRequests>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r21 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Map httpPropertyRequests> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z1 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z1 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z1 == 0
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r22 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r27 = $r26 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r28 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r28 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r28[0] = r7
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r28[0] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load cluster with name %s.", $r28)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load cluster with name %s.", $r28) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r30 = <org.apache.ambari.server.controller.internal.HttpPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r30 = <org.apache.ambari.server.controller.internal.HttpPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(r29, r27)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>(r29, r27) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r31 = new org.apache.ambari.server.controller.spi.SystemException
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r31 = new org.apache.ambari.server.controller.spi.SystemException >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : specialinvoke $r31.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>(r29, r27)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : specialinvoke $r31.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>(r29, r27) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : throw $r31
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r22 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r10 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r22 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r10 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r23 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Map httpPropertyRequests>
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r10 = interfaceinvoke $r22.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r23 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Map httpPropertyRequests> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r23 = r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: java.util.Map httpPropertyRequests> >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r11 = (java.util.List) $r24
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r11 = (java.util.List) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r11 = (java.util.List) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r12 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z2 == 0
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r25 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= (branch)]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r25 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r13 = (org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest) $r25
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r25 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r13 = (org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : specialinvoke r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: void populateResource(org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.state.Cluster,java.lang.String)>(r13, r6, r10, r8)
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : r13 = (org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : specialinvoke r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: void populateResource(org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.state.Cluster,java.lang.String)>(r13, r6, r10, r8) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : specialinvoke r0.<org.apache.ambari.server.controller.internal.HttpPropertyProvider: void populateResource(org.apache.ambari.server.controller.internal.HttpPropertyProvider$HttpPropertyRequest,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.state.Cluster,java.lang.String)>(r13, r6, r10, r8) >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : goto [?= $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HttpPropertyProvider.populateResources : $r26 := @caughtexception
