org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r1 = new org.apache.ambari.server.controller.jmx.TestStreamProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r2 = $r1
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(0)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r3 = $r10
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r3 = $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r11 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r11 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r11.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r11.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r4 = $r11
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r4 = $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r12 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r12 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r13 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.util.Map jmxPropertyIdsWithHAState>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r13 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.util.Map jmxPropertyIdsWithHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r5 = interfaceinvoke $r12.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r5 = interfaceinvoke $r12.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void setPopulateTimeout(long)>(5000L)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void setPopulateTimeout(long)>(5000L) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r6 = $r18
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r6 = $r18 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r23 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r23 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r23, "STARTED")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r23, "STARTED") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r24 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r24 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r24)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r24) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r25, r7, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r25, r7, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $i0 = interfaceinvoke $r26.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $i0 = interfaceinvoke $r26.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $l1 = (long) $i0
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r27 = new java.util.ArrayList
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r27 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r27.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r27.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r8 = $r27
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r8 = $r27 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r28 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r28 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r29 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r29 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r30 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r30 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r30)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r30) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13670605)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13670605) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r32 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r32 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r33 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r32)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r33 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r33)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r31, $r33) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r35 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/namenode", "CreateFileOps")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r35 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/namenode", "CreateFileOps") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r36 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r35)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r36 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r36)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r36) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1006632960)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1006632960) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r38 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r38 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r39 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r38)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r39 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r37, $r39)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r37, $r39) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(473433016)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(473433016) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r41 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r41 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r42 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r41)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r42 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r42)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r40, $r42) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r44 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r44 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r45 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r44)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r45 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r45)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r43, $r45) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23634400)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23634400) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r47 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r47 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r48 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r47)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r48 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r48)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r46, $r48) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(887717691390L)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(887717691390L) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r50 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityTotal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r50 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityTotal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r51 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r50)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r51 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r49, $r51)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r49, $r51) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r53 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r53 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r54 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r53)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r54 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r54)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r52, $r54) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(842207944704L)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(842207944704L) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r56 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityRemaining")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r56 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityRemaining") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r57 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r56)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r57 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r55, $r57)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r55, $r57) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(45509562366L)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(45509562366L) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r59 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityNonDFSUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r59 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/FSNamesystem", "CapacityNonDFSUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r60 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r59)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r60 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r59) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r60)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r58, $r60) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r61 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r61 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r62 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r62 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r61.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r62)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r61.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r62) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r63 = $r61
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r63 = $r61 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r64 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r64 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r64, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r64, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r65 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r65 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r65, "domu-12-31-39-14-ee-b3.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r65, "domu-12-31-39-14-ee-b3.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r66 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r66 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r66, "DATANODE")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r66, "DATANODE") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r67 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r67 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r68 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r67)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r68 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r67) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r69 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r63)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r69 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r63) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r69, r68, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r69, r68, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r71 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-14-ee-b3.compute-1.internal", "50075", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r71 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-14-ee-b3.compute-1.internal", "50075", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r72 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r72 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r71, $r72)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r71, $r72) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(856)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(856) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r74 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r74 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r75 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r74)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r75 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r73, $r75)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r73, $r75) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(954466304)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(954466304) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r77 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r77 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r78 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r77)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r78 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r78)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r76, $r78) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9772616)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9772616) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r80 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r80 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r81 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r80)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r81 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r80) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r79, $r81)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r79, $r81) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r83 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r83 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r84 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r83)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r84 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r83) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r84)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r82, $r84) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21933376)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21933376) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r86 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r86 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r87 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r86)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r87 = interfaceinvoke r63.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r86) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r85, $r87)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r85, $r87) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r88 = new java.util.HashSet
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r88 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r88.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r88.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r9 = $r88
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r9 = $r88 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r89 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r89 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r90 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r90 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r89.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r90)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r89.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r90) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r91 = $r89
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r91 = $r89 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r92 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r92 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r92, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r92, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r93 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r93 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r93, "domu-12-31-39-14-ee-b3.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r93, "domu-12-31-39-14-ee-b3.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r94 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r94 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r94, "HBASE_MASTER")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r94, "HBASE_MASTER") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r95 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r95 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r95, "STARTED")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r95, "STARTED") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r96 = new java.util.HashSet
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r96 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r96.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : specialinvoke $r96.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r97 = $r96
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r97 = $r96 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r98 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r98 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r98)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r98) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r99 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r99 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r99)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r100 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r100 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r100)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r100) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r101 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r101)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r101) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r102 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/load", "AverageLoad")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r102 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/load", "AverageLoad") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r102)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : interfaceinvoke r97.<java.util.Set: boolean add(java.lang.Object)>($r102) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r103 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>(r97)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : r103 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>(r97) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r104 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r91)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r104 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r91) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r104, r103, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r104, r103, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r106 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-14-ee-b3.compute-1.internal", "60010", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r106 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-14-ee-b3.compute-1.internal", "60010", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r107 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.lang.String getLastSpec()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r107 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.lang.String getLastSpec()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r106, $r107)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r106, $r107) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r108 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r91)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r108 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r91) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $i2 = interfaceinvoke $r108.<java.util.Map: int size()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $i2 = interfaceinvoke $r108.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $l3 = (long) $i2
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l3)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9L, $l3) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1069416448)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1069416448) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r110 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r110 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r111 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r110)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r111 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r110) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r109, $r111)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r109, $r111) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4806976)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r112 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4806976) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r113 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r113 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r114 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r113)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r114 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r113) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r112, $r114)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r112, $r114) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r116 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r116 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r117 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r116)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r117 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r116) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r115, $r117)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r115, $r117) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28971240)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28971240) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r119 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r119 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r120 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r119)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r120 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r119) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r118, $r120)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r118, $r120) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r121 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3.0)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r121 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3.0) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r122 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/load", "AverageLoad")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r122 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/load", "AverageLoad") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r123 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r122)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r123 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r122) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r121, $r123)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r121, $r123) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r124 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "gcCount")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r124 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "gcCount") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r125 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r124)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : $r125 = interfaceinvoke r91.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r124) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r125)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r125) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources : return
