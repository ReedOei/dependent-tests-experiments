org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r6 = r0.<org.apache.ambari.server.controller.internal.BaseProvider: java.util.Map patterns> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r3 = (java.util.regex.Pattern) $r7
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r3 = (java.util.regex.Pattern) $r7 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r8 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r4 = $r8
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r4 = $r8 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if r3 == null
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r5 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : return r4
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : r5 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : i0 = 0
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : return r4
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : i0 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $i1 = virtualinvoke r5.<java.util.regex.Matcher: int groupCount()>()
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $i1 = virtualinvoke r5.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if i0 >= $i1
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $i2 = i0 + 1
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : return r4
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r9 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>($i2)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $r9 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : i0 = i0 + 1
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : goto [?= $i1 = virtualinvoke r5.<java.util.regex.Matcher: int groupCount()>()]
org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : goto [?= $i1 = virtualinvoke r5.<java.util.regex.Matcher: int groupCount()>()] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.getRegexGroups : $i1 = virtualinvoke r5.<java.util.regex.Matcher: int groupCount()>()
