org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r7 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r7 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r8 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r7 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r9 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname cannot be null")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname cannot be null") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : throw $r9
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r8 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z0 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z0 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r9 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r10 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r10 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r11 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r19 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r19 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r20 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r24 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : r6 = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r25 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r25 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r22)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r24 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r24 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r26 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r26 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r26 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r26 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r29 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : r30 = $r29 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r31 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r31 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r32 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r32 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add a host to a cluster which doesn\'t exist:  clusterName=")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add a host to a cluster which doesn\'t exist:  clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r34 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r34 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r31.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String)>($r36)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r31.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : throw $r31
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r27)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r29 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= return]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r29 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r20 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r11 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a createHost request, hostname=")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a createHost request, hostname=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r19 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
