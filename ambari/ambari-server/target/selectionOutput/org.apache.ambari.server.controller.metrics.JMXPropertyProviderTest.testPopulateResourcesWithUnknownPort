org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r1 = new org.apache.ambari.server.controller.jmx.TestStreamProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r2 = $r1
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r9 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r9 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r9.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(1)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r9.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r3 = $r9
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r3 = $r9 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r4 = $r10
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r4 = $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r11 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r11 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getJMXPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r12)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r13 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getJMXPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>($r12) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r5 = interfaceinvoke $r11.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r5 = interfaceinvoke $r11.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r6 = $r18
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r6 = $r18 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r23 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r23 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r23)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r7 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r23) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r24 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r24 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r25 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r24, r7, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r25 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r24, r7, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $i0 = interfaceinvoke $r25.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $i0 = interfaceinvoke $r25.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $l1 = (long) $i0
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r26 = new java.util.ArrayList
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r26 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r26.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : specialinvoke $r26.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r8 = $r26
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : r8 = $r26 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r28 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r28 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r29 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r29 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r29)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r8, $r29) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13670605)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13670605) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r31 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r31 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/rpc", "ReceivedBytes") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r32 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r31)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r32 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r30, $r32) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r34 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/namenode", "CreateFileOps")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r34 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/dfs/namenode", "CreateFileOps") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r35 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r34)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r35 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r35)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r33, $r35) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1006632960)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1006632960) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r37 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r37 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r38 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r37)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r38 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r36, $r38) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(473433016)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(473433016) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r40 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r40 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "HeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r41 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r40)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r41 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r39, $r41)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r39, $r41) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136314880) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r43 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r43 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryMax") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r44 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r43)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r44 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r44)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r42, $r44) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23634400)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(23634400) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r46 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r46 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("metrics/jvm", "NonHeapMemoryUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r47 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r46)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : $r47 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r47)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r45, $r47) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResourcesWithUnknownPort : return
