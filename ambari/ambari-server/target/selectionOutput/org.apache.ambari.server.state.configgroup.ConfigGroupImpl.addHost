org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r4 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r3 = $r20 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r21 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r3 = $r20 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r21 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r22 = interfaceinvoke $r21.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r22 = interfaceinvoke $r21.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw r3
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r7)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r12 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r12 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r12 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r13, r12)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r13, r12) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r13, r12) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r15.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r16, r1)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r15.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r16, r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r15.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r16, r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : goto [?= return]
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : goto [?= return] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : return
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[0] = $r9
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[1] = $r10
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[1] = $r10 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r8)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r8[1] = $r10 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r8) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r11 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r8) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r11 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r11.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r2)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r11 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r11.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw $r11
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r11.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw $r11 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 := @caughtexception
