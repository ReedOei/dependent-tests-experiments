org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r3 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r4 = $r3
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r4 = $r3 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r5 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.DatabaseMetaData getDatabaseMetaData()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r5 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.DatabaseMetaData getDatabaseMetaData()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : staticinvoke <org.apache.ambari.server.utils.CustomStringUtils: void toUpperCase(java.util.List)>(r4)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : staticinvoke <org.apache.ambari.server.utils.CustomStringUtils: void toUpperCase(java.util.List)>(r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r12 = new java.util.HashSet
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>(r4)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>(r4) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r6 = $r12
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r6 = $r12 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r13 = new java.util.ArrayList
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r7 = $r13
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r7 = $r13 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r14 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema>
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r14 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r15 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r15 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r8 = interfaceinvoke r5.<java.sql.DatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r14, $r15, null)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r8 = interfaceinvoke r5.<java.sql.DatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r14, $r15, null) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z4 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r10 = $r19 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r8.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r10 = $r19 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r8.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : throw r10
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z4 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z4 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r20 = new java.lang.IllegalStateException
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i1 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i1 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i1 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i1 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 1
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i1 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : return $z5
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= return $z5]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= return $z5] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : return $z5
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r20 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21 = newarray (java.lang.Object)[4]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[0] = r2
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[0] = r2 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[1] = r1
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[1] = r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i0 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i0 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[2] = $r22
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[2] = $r22 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r23 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r23 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[3] = $r23
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21[3] = $r23 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request for columns [%s] existing in table [%s] returned too many results [%s] for columns [%s]", $r21)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request for columns [%s] existing in table [%s] returned too many results [%s] for columns [%s]", $r21) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : throw $r20
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 == 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r9 = interfaceinvoke r8.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME")
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r8.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r8.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z4 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z4 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z4 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r9 = interfaceinvoke r8.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r9 == null
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r9 = interfaceinvoke r8.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r9 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r16 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r9 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r9 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r16 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>($r16)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r16 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r17)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r18 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r18 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r18 = virtualinvoke r9.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke r8.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 := @caughtexception
