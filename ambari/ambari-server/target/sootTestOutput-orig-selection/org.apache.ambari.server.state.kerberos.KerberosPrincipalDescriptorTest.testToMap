org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r0 = new org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: java.util.Map MAP_VALUE>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : $r1 = <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest: java.util.Map MAP_VALUE> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>($r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : specialinvoke $r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: void <init>(java.util.Map)>($r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.Object getValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r0 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : if r1 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getValue : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : if r2 != null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : return $r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : r2 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getStringValue(java.util.Map,java.lang.String)>(r0, r1) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if r2 == null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : $r4 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: org.apache.ambari.server.state.kerberos.KerberosPrincipalType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/state/kerberos/KerberosPrincipalType", r0)
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/state/kerberos/KerberosPrincipalType", r0) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : $r2 = (org.apache.ambari.server.state.kerberos.KerberosPrincipalType) $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getKerberosPrincipalTypeValue : return $r4 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : $r3 = null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getStringValue : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.setName : r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setType : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setConfiguration : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.setLocalUsername : r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> = r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : return $r0
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptorTest.createFromMap : return $r0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r1 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r1 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r1.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : specialinvoke $r1.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : r2 = $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : $r1 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor.getName : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getValue : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("value", $r3) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: org.apache.ambari.server.state.kerberos.KerberosPrincipalType type> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String translate(org.apache.ambari.server.state.kerberos.KerberosPrincipalType)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : if r0 != null >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r2 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalType.translate : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r6) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getConfiguration()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String configuration> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configuration", $r8) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>()
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : $r10 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String getLocalUsername()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername>
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : $r1 = r0.<org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor: java.lang.String localUsername> >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.getLocalUsername : return $r1 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10)
org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local_username", $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosPrincipalDescriptor.toMap : return r2
