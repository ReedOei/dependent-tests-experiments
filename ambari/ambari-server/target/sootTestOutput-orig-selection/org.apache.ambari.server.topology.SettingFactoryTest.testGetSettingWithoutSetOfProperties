org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r2 = $r1
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "HDFS")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "HDFS") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r9 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r9.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r9.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r3 = $r9
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r3 = $r9 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "TEZ")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "TEZ") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_enabled", "false") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r12 = new java.util.HashSet
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r4 = $r12
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r4 = $r12 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r13 = new java.util.ArrayList
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r5 = $r13
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r5 = $r13 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r14 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r6 = $r14
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r6 = $r14 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_settings/recovery_enabled", "true")
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("recovery_settings/recovery_enabled", "true") >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r16 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r17 = $r16
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : r17 = $r16 >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_settings", r4)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("service_settings", r4) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r17)
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : return r5
org.apache.ambari.server.topology.SettingFactoryTest.createSettingWithoutSetOfProperties : return r5 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r1 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactory.getSetting : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1
org.apache.ambari.server.topology.SettingFactory.getSetting : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting
org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2)
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r11.<org.apache.ambari.server.topology.Setting: void <init>(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11
org.apache.ambari.server.topology.SettingFactory.getSetting : r3 = $r11 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = (java.util.Map) $r12
org.apache.ambari.server.topology.SettingFactory.getSetting : r5 = (java.util.Map) $r12 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r13 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : r6 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = (java.util.Map$Entry) $r14
org.apache.ambari.server.topology.SettingFactory.getSetting : r7 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = (java.lang.String) $r15
org.apache.ambari.server.topology.SettingFactory.getSetting : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r8 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.topology.SettingFactory.getSetting : r8 = virtualinvoke $r16.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r17 instanceof java.util.Set
org.apache.ambari.server.topology.SettingFactory.getSetting : $z2 = $r17 instanceof java.util.Set >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0
org.apache.ambari.server.topology.SettingFactory.getSetting : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $i0 = lengthof r8
org.apache.ambari.server.topology.SettingFactory.getSetting : $i0 = lengthof r8 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if $i0 <= 1
org.apache.ambari.server.topology.SettingFactory.getSetting : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r19 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactory.getSetting : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r10 = $r19
org.apache.ambari.server.topology.SettingFactory.getSetting : r10 = $r19 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r20 = r8[1]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r20 = r8[1] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22)
org.apache.ambari.server.topology.SettingFactory.getSetting : virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r22) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r24 = r8[0]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r24 = r8[0] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24)
org.apache.ambari.server.topology.SettingFactory.getSetting : $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.Set) $r25
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.Set) $r25 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : if r9 != null
org.apache.ambari.server.topology.SettingFactory.getSetting : if r9 != null >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r26 = new java.util.HashSet
org.apache.ambari.server.topology.SettingFactory.getSetting : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = $r26
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = $r26 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $r34 = r8[0]] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = r8[0]
org.apache.ambari.server.topology.SettingFactory.getSetting : $r34 = r8[0] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9)
org.apache.ambari.server.topology.SettingFactory.getSetting : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9) >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.SettingFactory.getSetting : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.SettingFactory.getSetting : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.HashSet) $r18
org.apache.ambari.server.topology.SettingFactory.getSetting : r9 = (java.util.HashSet) $r18 >>>>>>>> org.apache.ambari.server.topology.SettingFactory.getSetting : return r3
org.apache.ambari.server.topology.SettingFactory.getSetting : return r3 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Setting.getSettingValue : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0
org.apache.ambari.server.topology.Setting.getSettingValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r3 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.Setting.getSettingValue : $r3 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Setting.getSettingValue : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : $r5 = (java.util.Set) $r4
org.apache.ambari.server.topology.Setting.getSettingValue : $r5 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.topology.Setting.getSettingValue : return $r5
