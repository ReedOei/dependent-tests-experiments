org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r1 = newarray (com.google.inject.Module)[2] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r0 = new org.apache.ambari.server.audit.AuditLoggerModule
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r0 = new org.apache.ambari.server.audit.AuditLoggerModule >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : specialinvoke $r0.<org.apache.ambari.server.audit.AuditLoggerModule: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : specialinvoke $r0.<org.apache.ambari.server.audit.AuditLoggerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r1[0] = $r0
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r2 = new org.apache.ambari.server.security.authorization.AuthorizationTestModule
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r2 = new org.apache.ambari.server.security.authorization.AuthorizationTestModule >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : specialinvoke $r2.<org.apache.ambari.server.security.authorization.AuthorizationTestModule: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : specialinvoke $r2.<org.apache.ambari.server.security.authorization.AuthorizationTestModule: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r1[1] = $r2
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r1[1] = $r2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.security.authorization.AmbariLocalUserProviderTest.prepareData : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/AsyncAuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/AsyncAuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r8 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("AsyncAuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r8 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("AsyncAuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r9 = interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation)>($r8)
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r9 = interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation)>($r8) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r9.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLoggerDefaultImpl")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r9.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLoggerDefaultImpl") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.Binder binder()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.Binder binder()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class)>($r11, class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator")
org.apache.ambari.server.audit.AuditLoggerModule.configure : r1 = staticinvoke <com.google.inject.multibindings.Multibinder: com.google.inject.multibindings.Multibinder newSetBinder(com.google.inject.Binder,java.lang.Class)>($r11, class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.lang.String getPackageToScan()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r12 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.lang.String getPackageToScan()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r1 = class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator"
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r1 = class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator" >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>()
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>()
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : $r3 = virtualinvoke $r2.<java.lang.Package: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : return $r3
org.apache.ambari.server.audit.AuditLoggerModule.getPackageToScan : return $r3 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getExclusions()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getExclusions()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : return $r1
org.apache.ambari.server.audit.AuditLoggerModule.getExclusions : return $r1 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getSelectors()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r14 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: java.util.List getSelectors()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : $r1 = new java.util.ArrayList
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : r2 = $r1
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : r2 = $r1 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator")
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(class "org/apache/ambari/server/audit/request/eventcreator/RequestAuditEventCreator") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : return r2
org.apache.ambari.server.audit.AuditLoggerModule.getSelectors : return r2 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>($r12, $r13, $r14)
org.apache.ambari.server.audit.AuditLoggerModule.configure : r2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>($r12, $r13, $r14) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r3 = new java.util.HashSet
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r4 = $r3
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r4 = $r3 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r9 = class "org/apache/ambari/server/cleanup/ClasspathScannerUtils"
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r9 = class "org/apache/ambari/server/cleanup/ClasspathScannerUtils" >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r5 = staticinvoke <com.google.common.reflect.ClassPath: com.google.common.reflect.ClassPath 'from'(java.lang.ClassLoader)>($r10)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r5 = staticinvoke <com.google.common.reflect.ClassPath: com.google.common.reflect.ClassPath 'from'(java.lang.ClassLoader)>($r10) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r11 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r11 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking package [{}] for binding candidates.", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking package [{}] for binding candidates.", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r12 = virtualinvoke r5.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r12 = virtualinvoke r5.<com.google.common.reflect.ClassPath: com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r6 = virtualinvoke $r12.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r6 = virtualinvoke $r12.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z0 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z0 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r7 = (com.google.common.reflect.ClassPath$ClassInfo) $r13
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r7 = (com.google.common.reflect.ClassPath$ClassInfo) $r13 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r8 = virtualinvoke r7.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.Class load()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : r8 = virtualinvoke r7.<com.google.common.reflect.ClassPath$ClassInfo: java.lang.Class load()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean isEligible(java.lang.Class,java.util.List)>(r8, r2)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $z2 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean isEligible(java.lang.Class,java.util.List)>(r8, r2) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z0 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkSubClasses(java.lang.Class,java.util.List)>(r0, r1)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z0 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkSubClasses(java.lang.Class,java.util.List)>(r0, r1) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r5 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r5 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking interfaces for: [{}]", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking interfaces for: [{}]", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r2 = staticinvoke <org.apache.commons.lang.ClassUtils: java.util.List getAllInterfaces(java.lang.Class)>(r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r2 = staticinvoke <org.apache.commons.lang.ClassUtils: java.util.List getAllInterfaces(java.lang.Class)>(r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r4 = (java.lang.Class) $r6
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : r4 = (java.lang.Class) $r6 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z2 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z2 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z2 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z2 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r7 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r7 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking candidate for subclassing interface: ", r4)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking candidate for subclassing interface: ", r4) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z3 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : $z3 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z3 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : if $z3 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : z0 = 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= return z0]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= return z0] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : return z0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : return z0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z0 != 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z0 != 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : goto [?= return $z2]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : return $z2
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : return $z2 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z2 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : if $z2 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r15 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r15 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Found class [{}]", r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Found class [{}]", r8) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= (branch)]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkSubClasses : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkAnnotations(java.lang.Class,java.util.List)>(r0, r1)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z1 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: boolean checkAnnotations(java.lang.Class,java.util.List)>(r0, r1) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r2 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r2 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r3 = virtualinvoke r0.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r3 = virtualinvoke r0.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r3
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.isEligible : $z2 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r16 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER>
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : $r16 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Candidate [{}] doesn\'t match.", r8)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Candidate [{}] doesn\'t match.", r8) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= return r4]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : goto [?= return r4] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : return r4
org.apache.ambari.server.cleanup.ClasspathScannerUtils.findOnClassPath : return r4 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : if $z0 == 0
org.apache.ambari.server.audit.AuditLoggerModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : r4 = (java.lang.Class) $r15
org.apache.ambari.server.audit.AuditLoggerModule.configure : r4 = (java.lang.Class) $r15 >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>()
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r16 = virtualinvoke r1.<com.google.inject.multibindings.Multibinder: com.google.inject.binder.LinkedBindingBuilder addBinding()>() >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r17 = interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(r4)
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r17 = interfaceinvoke $r16.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(r4) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r18 = <com.google.inject.Scopes: com.google.inject.Scope SINGLETON>
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r18 = <com.google.inject.Scopes: com.google.inject.Scope SINGLETON> >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r17.<com.google.inject.binder.ScopedBindingBuilder: void in(com.google.inject.Scope)>($r18)
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r17.<com.google.inject.binder.ScopedBindingBuilder: void in(com.google.inject.Scope)>($r18) >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.audit.AuditLoggerModule.configure : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/request/RequestAuditLogger")
org.apache.ambari.server.audit.AuditLoggerModule.configure : $r19 = virtualinvoke r0.<org.apache.ambari.server.audit.AuditLoggerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/request/RequestAuditLogger") >>>>>>>> org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/request/RequestAuditLoggerImpl")
org.apache.ambari.server.audit.AuditLoggerModule.configure : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "org/apache/ambari/server/audit/request/RequestAuditLoggerImpl") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r1 = new java.util.Properties
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r1 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r1.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r1.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : r2 = $r1
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_SECURITY>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r4 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty CLIENT_SECURITY> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r5 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r5, "ldap")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r5, "ldap") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, "in-memory")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, "in-memory") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, "src/test/resources/stacks")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, "src/test/resources/stacks") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "src/test/resources/version")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, "src/test/resources/version") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "centos5")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, "centos5") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r19 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r20 = virtualinvoke $r19.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r20, "src/test/resources/")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r20, "src/test/resources/") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_GROUP_BASE>
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r22 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LDAP_GROUP_BASE> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r23 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r23, "ou=groups,dc=ambari,dc=apache,dc=org")
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r23, "ou=groups,dc=ambari,dc=apache,dc=org") >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r25 = new org.apache.ambari.server.controller.ControllerModule
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r25 = new org.apache.ambari.server.controller.ControllerModule >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r25.<org.apache.ambari.server.controller.ControllerModule: void <init>(java.util.Properties)>(r2)
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r25.<org.apache.ambari.server.controller.ControllerModule: void <init>(java.util.Properties)>(r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : r3 = $r26
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : r3 = $r26 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r27 = new java.lang.RuntimeException
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : $r27 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3)
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : throw $r27
org.apache.ambari.server.security.authorization.AuthorizationTestModule.configure : throw $r27 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setPrincipalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_principalType(org.apache.ambari.server.orm.entities.PrincipalTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principalType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_principalType : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setPermissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_permissionName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setPermissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_permissionName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permissionName")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permissionName") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permissionName", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permissionName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_permissionName : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPrincipal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_principal(org.apache.ambari.server.orm.entities.PrincipalEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("principal", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_principal : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r2 = new java.util.HashSet
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $i0 = interfaceinvoke r1.<java.util.Collection: int size()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $i0 = interfaceinvoke r1.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : specialinvoke $r2.<java.util.HashSet: void <init>(int)>($i0)
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : specialinvoke $r2.<java.util.HashSet: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r3 = $r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : if $z0 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : r5 = (org.apache.ambari.server.orm.entities.PrivilegeEntity) $r6 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r7 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : $r7 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : specialinvoke $r7.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>(r5)
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : specialinvoke $r7.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>(r5) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : if $r1 == null
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $r2 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $r2 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $i0 = virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: int hashCode()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : $i0 = virtualinvoke $r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i0 = $i1
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i2 = 31 * i0
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r3 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i3 = virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PermissionEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i3 = virtualinvoke $r4.<org.apache.ambari.server.orm.entities.PermissionEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i0 = $i1
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i2 = 31 * i0
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionName")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionName") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionName> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r3 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i5 = 31 * i4
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionLabel()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionLabel()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionLabel")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("permissionLabel") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionLabel>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String permissionLabel> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_permissionLabel : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r5 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i6 = 0
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i6 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i8 = 31 * i7
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i8 = 31 * i7 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_resourceType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r7 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r7 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i9 = virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i9 = virtualinvoke $r8.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i0 = $i1
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i2 = 31 * i0
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r3 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.ResourceTypeEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i10 = $i8 + $i9]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i10 = $i8 + $i9] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i10 = $i8 + $i9
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i10 = $i8 + $i9 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i11 = 31 * i10
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i11 = 31 * i10 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r9 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("sortOrder")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("sortOrder") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer sortOrder>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer sortOrder> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_sortOrder : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r9 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r9 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r10 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r10 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_sortOrder()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i12 = virtualinvoke $r10.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i12 = virtualinvoke $r10.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i13 = $i11 + $i12]
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : goto [?= i13 = $i11 + $i12] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i13 = $i11 + $i12
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i13 = $i11 + $i12 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i14 = 31 * i13
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i14 = 31 * i13 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r11 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $r11 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r11 == null
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : if $r11 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i15 = 0
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : $i15 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i16 = $i14 + $i15
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : i16 = $i14 + $i15 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : return i16
org.apache.ambari.server.orm.entities.PermissionEntity.hashCode : return i16 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i5 = 31 * i4
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r5 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i6 = virtualinvoke $r6.<org.apache.ambari.server.orm.entities.ResourceEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i6 = virtualinvoke $r6.<org.apache.ambari.server.orm.entities.ResourceEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i0 = $i1
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i2 = 31 * i0
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r3 == null
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i3 = virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : $i3 = virtualinvoke $r4.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : return i4
org.apache.ambari.server.orm.entities.ResourceEntity.hashCode : return i4 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i7 = $i5 + $i6]
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i7 = $i5 + $i6] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i8 = 31 * i7
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i8 = 31 * i7 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("principal")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("principal") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity principal> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_principal : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r7 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : if $r7 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PrincipalEntity _persistence_get_principal()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i9 = virtualinvoke $r8.<org.apache.ambari.server.orm.entities.PrincipalEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : $i9 = virtualinvoke $r8.<org.apache.ambari.server.orm.entities.PrincipalEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i1 = 31 * i0
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("principalType")
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: void _persistence_checkFetched(java.lang.String)>("principalType") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType>
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity principalType> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : return $r1
org.apache.ambari.server.orm.entities.PrincipalEntity._persistence_get_principalType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalEntity: org.apache.ambari.server.orm.entities.PrincipalTypeEntity _persistence_get_principalType()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i2 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : $i2 = virtualinvoke $r3.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.Integer: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.Integer: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i1 = 31 * i0
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.PrincipalTypeEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : if $r2 == null
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrincipalTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : goto [?= i3 = $i1 + $i2]
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : goto [?= i3 = $i1 + $i2] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.PrincipalTypeEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : goto [?= i3 = $i1 + $i2]
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : goto [?= i3 = $i1 + $i2] >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.PrincipalEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i10 = $i8 + $i9]
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : goto [?= i10 = $i8 + $i9] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i10 = $i8 + $i9
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : i10 = $i8 + $i9 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : return i10
org.apache.ambari.server.orm.entities.PrivilegeEntity.hashCode : return i10 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : goto [?= return $i0]
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : goto [?= return $i0] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : return $i0
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : return r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.convertPrivilegesToAuthorities : return r3 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r5 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r5 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r1 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r1 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ResourceEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getId : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r13 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r13 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r14 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r14 = virtualinvoke $r13.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String getPermissionName()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getPermissionName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>()
org.apache.ambari.server.orm.entities.PermissionEntity.getPermissionName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.String _persistence_get_permissionName()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getPermissionName : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity.getPermissionName : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@")
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r3)
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : if $z0 == 0
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r19 = r4
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : $r19 = r4 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : goto [?= return $r19]
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : goto [?= return $r19] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getAuthority : return $r19
