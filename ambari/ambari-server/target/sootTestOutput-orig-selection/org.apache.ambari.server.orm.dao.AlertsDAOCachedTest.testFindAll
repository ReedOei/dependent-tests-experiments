org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r12 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r12 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r2 = (javax.persistence.EntityManager) $r13
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r2 = (javax.persistence.EntityManager) $r13 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r14 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r14 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r3 = (org.apache.ambari.server.orm.dao.DaoUtils) $r15
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r3 = (org.apache.ambari.server.orm.dao.DaoUtils) $r15 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertHistoryEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertHistoryEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r4 = (org.apache.ambari.server.orm.entities.AlertHistoryEntity) $r16
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r4 = (org.apache.ambari.server.orm.entities.AlertHistoryEntity) $r16 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertDefinitionEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertDefinitionEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r5 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r17
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r5 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r17 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: void mock(org.apache.ambari.server.orm.entities.AlertDefinitionEntity,org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r5, r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: void mock(org.apache.ambari.server.orm.entities.AlertDefinitionEntity,org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r5, r4) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r18 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r18 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r18.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r18.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r6 = $r18
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r6 = $r18 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertHistory")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertHistory") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertHistory", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertHistory", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_historyId(java.lang.Long)>($r2)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_historyId(java.lang.Long)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("historyId")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("historyId") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("historyId", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("historyId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertDefinition(org.apache.ambari.server.orm.entities.AlertDefinitionEntity)>($r3)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertDefinition(org.apache.ambari.server.orm.entities.AlertDefinitionEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertDefinition")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertDefinition") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertDefinition", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertDefinition", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_definitionId(java.lang.Long)>($r4)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_definitionId(java.lang.Long)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("definitionId")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("definitionId") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("definitionId", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("definitionId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestText(java.lang.String)>($r5)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestText(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestText")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestText") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestText", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestText", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r19)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r19) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setOriginalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_originalTimestamp(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setOriginalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_originalTimestamp(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("originalTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("originalTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("originalTimestamp", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("originalTimestamp", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r20)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r20) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setLatestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestTimestamp(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setLatestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestTimestamp(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestTimestamp", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestTimestamp", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r21 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r21 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r21.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r21.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r7 = $r21
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r7 = $r21 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r23)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r23) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r24 = interfaceinvoke r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r24 = interfaceinvoke r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/TypedQuery")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/TypedQuery") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r8 = (javax.persistence.TypedQuery) $r28
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r8 = (javax.persistence.TypedQuery) $r28 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.lang.String getNamedQuery()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.lang.String getNamedQuery()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.getNamedQuery : return "AlertCurrentEntity.findAll"
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.getNamedQuery : return "AlertCurrentEntity.findAll" >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r30 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>($r29, class "org/apache/ambari/server/orm/entities/AlertCurrentEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r30 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>($r29, class "org/apache/ambari/server/orm/entities/AlertCurrentEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34 = newarray (org.apache.ambari.server.orm.entities.AlertCurrentEntity)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34 = newarray (org.apache.ambari.server.orm.entities.AlertCurrentEntity)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34[0] = r6
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34[0] = r6 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r9 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r34)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r9 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r34) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r35 = newarray (java.lang.Object)[0]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r35 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r36 = virtualinvoke r3.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r8, $r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r36 = virtualinvoke r3.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r8, $r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[0] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[0] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[1] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[1] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[2] = r8
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[2] = r8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r41 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r41 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r42 = interfaceinvoke $r41.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r42 = interfaceinvoke $r41.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r10 = (org.apache.ambari.server.orm.dao.AlertsDAO) $r42
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r10 = (org.apache.ambari.server.orm.dao.AlertsDAO) $r42 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r10.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.entities.AlertCurrentEntity merge(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r10.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.entities.AlertCurrentEntity merge(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r5 = (javax.persistence.EntityManager) $r4
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r5 = (javax.persistence.EntityManager) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r6 = interfaceinvoke $r5.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r6 = interfaceinvoke $r5.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : return 1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r6
org.apache.ambari.server.orm.dao.AlertsDAO.merge : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r6 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.merge : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : r2 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : r2 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity getAlertHistory()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity getAlertHistory()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity _persistence_get_alertHistory()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity _persistence_get_alertHistory()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("alertHistory")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("alertHistory") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : return $r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r3 = new org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r3 = new org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : specialinvoke $r3.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: void <init>(long,java.lang.String,java.lang.String)>($l0, $r6, $r7)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : specialinvoke $r3.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: void <init>(long,java.lang.String,java.lang.String)>($l0, $r6, $r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r2 = $r3
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r2 = $r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : return r2
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : return r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : interfaceinvoke $r9.<com.google.common.cache.LoadingCache: void put(java.lang.Object,java.lang.Object)>(r2, r7)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : interfaceinvoke $r9.<com.google.common.cache.LoadingCache: void put(java.lang.Object,java.lang.Object)>(r2, r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b0 = 31
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b0 = 31 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b1 = 1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b1 = 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i2 = 31 * b1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i2 = 31 * b1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r1 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r1 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r1 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i5 = 31 * i4
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l8 = $l7 >>> 32
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l8 = $l7 >>> 32 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l9 = $l6 ^ $l8
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l9 = $l6 ^ $l8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i10 = (int) $l9
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i10 = (int) $l9 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i11 = $i5 + $i10
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i11 = $i5 + $i10 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i12 = 31 * i11
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i12 = 31 * i11 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r3 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r3 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r4 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r4 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i13 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i13 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i14 = $i12 + $i13
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i14 = $i12 + $i13 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : return i14
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : return i14 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : return r7
org.apache.ambari.server.orm.dao.AlertsDAO.merge : return r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r11 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.util.List execute(org.apache.ambari.server.orm.dao.AlertsDAO)>(r10)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r11 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.util.List execute(org.apache.ambari.server.orm.dao.AlertsDAO)>(r10) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.execute : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List findCurrent()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.execute : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List findCurrent()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r5 = (javax.persistence.EntityManager) $r4
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r5 = (javax.persistence.EntityManager) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r1 = interfaceinvoke $r5.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("AlertCurrentEntity.findAll", class "org/apache/ambari/server/orm/entities/AlertCurrentEntity")
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r1 = interfaceinvoke $r5.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("AlertCurrentEntity.findAll", class "org/apache/ambari/server/orm/entities/AlertCurrentEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.dao.DaoUtils m_daoUtils>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.dao.DaoUtils m_daoUtils> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r7 = newarray (java.lang.Object)[0]
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r7 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r2 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r1, $r7)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r2 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r1, $r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r2 = specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List supplementWithCachedAlerts(java.util.List)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : r2 = specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List supplementWithCachedAlerts(java.util.List)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r2 = new java.util.ArrayList
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r3 = $r2
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r3 = $r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r8
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r6 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r5)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r6 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r5) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache>
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r10 = interfaceinvoke $r9.<com.google.common.cache.LoadingCache: java.lang.Object getIfPresent(java.lang.Object)>(r6)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r10 = interfaceinvoke $r9.<com.google.common.cache.LoadingCache: java.lang.Object getIfPresent(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r0 != r1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r1 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r1 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r3 == $r4
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : r2 = (org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey) r1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : r2 = (org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey) r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l0 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l0 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l1 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l1 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $b2 = $l0 cmp $l1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $b2 == 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $b2 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r5 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r5 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r5 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r8 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r8 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z0 != 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r9 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r9 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r11 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r11 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r12 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r12 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z1 != 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : return 1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r10
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r10 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if null == r7
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if null == r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = r7
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : return r3
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : return r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : return r2
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrent : return r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.execute : return $r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$1.execute : return $r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $i0 = interfaceinvoke r11.<java.util.List: int size()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $i0 = interfaceinvoke r11.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $l1 = (long) $i0
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r45 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r45 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r46 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r45
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r46 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r45 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long getLatestTimestamp()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long getLatestTimestamp()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long _persistence_get_latestTimestamp()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long _persistence_get_latestTimestamp()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("latestTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("latestTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : return $r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r47)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r47) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48 = newarray (java.lang.Object)[4]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[0] = r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[0] = r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[1] = r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[1] = r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[2] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[2] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[3] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[3] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r48)
