org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name>
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r2 = new java.util.HashSet
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : return $r2
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : return $r2 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapTemplate : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.springframework.ldap.core.LdapTemplate ldapTemplate> = r1
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapTemplate : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.springframework.ldap.core.LdapTemplate ldapTemplate> = r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapServerProperties : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> = r1
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapServerProperties : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> = r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r3 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r3 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String)>("Synchronize LDAP users...")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : interfaceinvoke $r3.<org.slf4j.Logger: void trace(java.lang.String)>("Synchronize LDAP users...") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r11 = new java.util.HashSet
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r4 = $r11
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r4 = $r11 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : if $z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r6 = (java.lang.String) $r12
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r6 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r7 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Set getLdapUsers(java.lang.String)>(r6)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : r7 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Set getLdapUsers(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $z1 = interfaceinvoke r7.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $z1 = interfaceinvoke r7.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : if $z1 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>(r7)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>(r7) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r13 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r13 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t sync LDAP user ")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t sync LDAP user ") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", it doesn\'t exist")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", it doesn\'t exist") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeLdapUsers : throw $r13
