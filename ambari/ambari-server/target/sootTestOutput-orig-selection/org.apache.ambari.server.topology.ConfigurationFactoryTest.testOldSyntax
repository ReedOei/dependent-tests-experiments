org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r2 = $r1
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : $r5 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r3 = $r5
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r3 = $r5 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo-type/prop1", "prop1Value")
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo-type/prop1", "prop1Value") >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo-type/prop2", "prop2Value")
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("foo-type/prop2", "prop2Value") >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : $r8 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r4 = $r8
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : r4 = $r8 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bar-type/prop3", "prop3Value")
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bar-type/prop3", "prop3Value") >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : return r2
org.apache.ambari.server.topology.ConfigurationFactoryTest.getOldSyntaxConfigProps : return r2 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r2 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r3 = $r2
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r3 = $r2 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r12 = new java.util.HashMap
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r12 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r4 = $r12
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r4 = $r12 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r13 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r13 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r13.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>(r3, r4)
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : specialinvoke $r13.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>(r3, r4) >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r5 = $r13
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r5 = $r13 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if r1 == null
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if r1 == null >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r6 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r6 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if $z0 == 0
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r7 = (java.util.Map) $r14
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r7 = (java.util.Map) $r14 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r8 = specialinvoke r0.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategy decidePopulationStrategy(java.util.Map)>(r7)
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r8 = specialinvoke r0.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategy decidePopulationStrategy(java.util.Map)>(r7) >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if r1 == null
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if r1 == null >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if $z0 != 0
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r2 = (java.lang.String) $r7
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r2 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : i0 = lengthof r3
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r4 = r3[1]
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : r4 = r3[1] >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if i0 != 2
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : if i0 != 2 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r8 = new org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : $r8 = new org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : specialinvoke $r8.<org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1: void <init>()>()
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : specialinvoke $r8.<org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : return $r8
org.apache.ambari.server.topology.ConfigurationFactory.decidePopulationStrategy : return $r8 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r15 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r15 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r9 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r9 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if $z1 == 0
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r16 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r16 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r10 = (java.util.Map$Entry) $r16
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r10 = (java.util.Map$Entry) $r16 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r18 = (java.lang.String) $r17
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r18 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r11 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("/")
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : r11 = virtualinvoke $r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r19 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r19 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r20 = (java.lang.String) $r19
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : $r20 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : virtualinvoke r8.<org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategy: void setConfiguration(org.apache.ambari.server.topology.Configuration,java.lang.String[],java.lang.String)>(r5, r11, $r20)
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : virtualinvoke r8.<org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategy: void setConfiguration(org.apache.ambari.server.topology.Configuration,java.lang.String[],java.lang.String)>(r5, r11, $r20) >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : $r4 = r2[0]
org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : $r4 = r2[0] >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : $r5 = r2[1]
org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : $r5 = r2[1] >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : virtualinvoke r1.<org.apache.ambari.server.topology.Configuration: java.lang.String setProperty(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, r3)
org.apache.ambari.server.topology.ConfigurationFactory$ConfigurationStrategyV1.setConfiguration : virtualinvoke r1.<org.apache.ambari.server.topology.Configuration: java.lang.String setProperty(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, r3) >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : r4 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.lang.String getPropertyValue(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.topology.Configuration.setProperty : r4 = virtualinvoke r0.<org.apache.ambari.server.topology.Configuration: java.lang.String getPropertyValue(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : r3 = null
org.apache.ambari.server.topology.Configuration.getPropertyValue : r3 = null >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $r4 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getPropertyValue : $r4 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.getPropertyValue : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : if $z0 == 0
org.apache.ambari.server.topology.Configuration.getPropertyValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $r12 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration>
org.apache.ambari.server.topology.Configuration.getPropertyValue : $r12 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : if $r12 == null
org.apache.ambari.server.topology.Configuration.getPropertyValue : if $r12 == null >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : return r3
org.apache.ambari.server.topology.Configuration.getPropertyValue : return r3 >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.setProperty : $r6 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.setProperty : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : r5 = (java.util.Map) $r7
org.apache.ambari.server.topology.Configuration.setProperty : r5 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : if r5 != null
org.apache.ambari.server.topology.Configuration.setProperty : if r5 != null >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : $r8 = new java.util.HashMap
org.apache.ambari.server.topology.Configuration.setProperty : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.Configuration.setProperty : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : r5 = $r8
org.apache.ambari.server.topology.Configuration.setProperty : r5 = $r8 >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : $r9 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.setProperty : $r9 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5)
org.apache.ambari.server.topology.Configuration.setProperty : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5) >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)
org.apache.ambari.server.topology.Configuration.setProperty : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3) >>>>>>>> org.apache.ambari.server.topology.Configuration.setProperty : return r4
org.apache.ambari.server.topology.Configuration.setProperty : return r4 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $r5 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getPropertyValue : $r5 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.Configuration.getPropertyValue : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $r7 = (java.util.Map) $r6
org.apache.ambari.server.topology.Configuration.getPropertyValue : $r7 = (java.util.Map) $r6 >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.topology.Configuration.getPropertyValue : $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.Configuration.getPropertyValue : if $z1 == 0
org.apache.ambari.server.topology.Configuration.getPropertyValue : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : return r5
org.apache.ambari.server.topology.ConfigurationFactory.getConfiguration : return r5 >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.Configuration.getAttributes : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes>
org.apache.ambari.server.topology.Configuration.getAttributes : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.topology.Configuration.getAttributes : return $r1
