org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r1 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule
org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r0 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : specialinvoke $r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r1[0] = $r0
org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.upgrade.UpgradeCatalog240Test.classSetUp : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r0 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState[] $VALUES>
org.apache.ambari.server.state.SecurityState.values : $r0 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState[] $VALUES> >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.SecurityState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r2 = (org.apache.ambari.server.state.SecurityState[]) $r1
org.apache.ambari.server.state.SecurityState.values : $r2 = (org.apache.ambari.server.state.SecurityState[]) $r1 >>>>>>>> org.apache.ambari.server.state.SecurityState.values : return $r2
org.apache.ambari.server.state.SecurityState.values : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r0 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType[] $VALUES>
org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r0 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType[] $VALUES> >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r2 = (org.apache.ambari.server.configuration.Configuration$DatabaseType[]) $r1
org.apache.ambari.server.configuration.Configuration$DatabaseType.values : $r2 = (org.apache.ambari.server.configuration.Configuration$DatabaseType[]) $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.values : return $r2
org.apache.ambari.server.configuration.Configuration$DatabaseType.values : return $r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String m_databaseType>
org.apache.ambari.server.configuration.Configuration$DatabaseType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$DatabaseType: java.lang.String m_databaseType> >>>>>>>> org.apache.ambari.server.configuration.Configuration$DatabaseType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$DatabaseType.getName : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r4 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.orm.DBAccessor access$000(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r7 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.stack.OsFamily access$100(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.stack.OsFamily osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$100 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.state.stack.OsFamily osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$100 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r10 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: javax.persistence.EntityManager access$200(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$200 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$200 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1: org.apache.ambari.server.upgrade.UpgradeCatalog250Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : $r13 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.configuration.Configuration access$300(org.apache.ambari.server.upgrade.UpgradeCatalog250Test)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$300 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250Test: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$300 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog250Test.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog250Test$1.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.getTargetVersion : return "2.5.0"
org.apache.ambari.server.upgrade.UpgradeCatalog250.getTargetVersion : return "2.5.0" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateHostVersionTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateHostVersionTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r1 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r1 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Updating the {} table", "host_version")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Updating the {} table", "host_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3[0] = "repo_version_id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3[0] = "repo_version_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3[1] = "host_id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : $r3[1] = "host_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("host_version", "UQ_host_repo", $r3)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostVersionTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("host_version", "UQ_host_repo", $r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void createComponentVersionTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void createComponentVersionTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r1 = new java.util.ArrayList
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : r2 = $r1
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : r2 = $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Creating {} table", "servicecomponent_version")
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Creating {} table", "servicecomponent_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r4 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r4.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("component_id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("component_id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r6 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r6 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_version_id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r6.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("repo_version_id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("state", class "java/lang/String", $r8, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("state", class "java/lang/String", $r8, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r9 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("user_name", class "java/lang/String", $r10, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : specialinvoke $r9.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("user_name", class "java/lang/String", $r10, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r12 = (java.lang.String[]) null
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r12 = (java.lang.String[]) null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("servicecomponent_version", r2, $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>("servicecomponent_version", r2, $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r14 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r14 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r14[0] = "id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r14[0] = "id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("servicecomponent_version", "PK_sc_version", $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("servicecomponent_version", "PK_sc_version", $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r15 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponent_version", "FK_scv_component_id", "component_id", "servicecomponentdesiredstate", "id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r15.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponent_version", "FK_scv_component_id", "component_id", "servicecomponentdesiredstate", "id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponent_version", "FK_scv_repo_version_id", "repo_version_id", "repo_version", "repo_version_id", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: void addFKConstraint(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("servicecomponent_version", "FK_scv_repo_version_id", "repo_version_id", "repo_version", "repo_version_id", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void addSequence(java.lang.String,java.lang.Long,boolean)>("servicecomponent_version_id_seq", $r17, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.createComponentVersionTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void addSequence(java.lang.String,java.lang.Long,boolean)>("servicecomponent_version_id_seq", $r17, 0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r6 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r3 = interfaceinvoke $r7.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariSequencesTable> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[0] = $r9
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[0] = $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[1] = r1
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r8[1] = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r8)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(*) from %s where sequence_name=\'%s\'", $r8) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : r4 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $z1 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : $r15 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Sequence {} already exists, skipping", r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : interfaceinvoke r3.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addSequence : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateGroupsTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateGroupsTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r1 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r1 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Updating the {} table", "groups")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Updating the {} table", "groups") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r3 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r3 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : specialinvoke $r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("group_type", class "java/lang/String", null, "LOCAL", 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : specialinvoke $r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("group_type", class "java/lang/String", null, "LOCAL", 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("groups", $r3)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("groups", $r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>("UPDATE groups SET group_type=\'LDAP\' WHERE ldap_group=1")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void executeQuery(java.lang.String)>("UPDATE groups SET group_type=\'LDAP\' WHERE ldap_group=1") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6[0] = "group_name"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6[0] = "group_name" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6[1] = "group_type"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : $r6[1] = "group_type" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("groups", "UNQ_groups_0", $r6)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateGroupsTable : interfaceinvoke $r5.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("groups", "UNQ_groups_0", $r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32)
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r2 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE>
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r2 = <org.apache.ambari.server.actionmanager.CommandExecutionType: org.apache.ambari.server.actionmanager.CommandExecutionType STAGE> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r5 = virtualinvoke $r2.<org.apache.ambari.server.actionmanager.CommandExecutionType: java.lang.String toString()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : $r5 = virtualinvoke $r2.<org.apache.ambari.server.actionmanager.CommandExecutionType: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("command_execution_type", class "java/lang/String", $r4, $r5, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("command_execution_type", class "java/lang/String", $r4, $r5, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("stage", $r1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : interfaceinvoke $r3.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("stage", $r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateServiceDesiredStateTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateServiceDesiredStateTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r1 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("credential_store_supported", class "java/lang/Short", null, $r3, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : specialinvoke $r1.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("credential_store_supported", class "java/lang/Short", null, $r3, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : interfaceinvoke $r2.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r5 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("credential_store_enabled", class "java/lang/Short", null, $r6, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : specialinvoke $r5.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("credential_store_enabled", class "java/lang/Short", null, $r6, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r5)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateServiceDesiredStateTable : interfaceinvoke $r4.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("servicedesiredstate", $r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateHostComponentDesiredStateTable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.executeDDLUpdates : specialinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateHostComponentDesiredStateTable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $z0 = interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasPrimaryKey(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "id")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $z0 = interfaceinvoke $r11.<org.apache.ambari.server.orm.DBAccessor: boolean tableHasPrimaryKey(java.lang.String,java.lang.String)>("hostcomponentdesiredstate", "id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r14 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r14.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("hostcomponentdesiredstate", $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r13.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("hostcomponentdesiredstate", $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r15 = new java.util.concurrent.atomic.AtomicLong
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r15 = new java.util.concurrent.atomic.AtomicLong >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r15.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r15.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r1 = $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r1 = $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r2 = null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r2 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r3 = null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r3 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r17 = interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r17 = interfaceinvoke $r16.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r2 = interfaceinvoke $r17.<java.sql.Connection: java.sql.Statement createStatement()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r2 = interfaceinvoke $r17.<java.sql.Connection: java.sql.Statement createStatement()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r18[0] = "hostcomponentdesiredstate"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r18[0] = "hostcomponentdesiredstate" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT cluster_id, component_name, host_id, service_name FROM %s", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT cluster_id, component_name, host_id, service_name FROM %s", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r3 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r3 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $z1 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $z1 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $l3 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicLong: long get()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $l3 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicLong: long get()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void addSequence(java.lang.String,java.lang.Long,boolean)>("hostcomponentdesiredstate_id_seq", $r22, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void addSequence(java.lang.String,java.lang.Long,boolean)>("hostcomponentdesiredstate_id_seq", $r22, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : staticinvoke <org.springframework.jdbc.support.JdbcUtils: void closeResultSet(java.sql.ResultSet)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : staticinvoke <org.springframework.jdbc.support.JdbcUtils: void closeResultSet(java.sql.ResultSet)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : staticinvoke <org.springframework.jdbc.support.JdbcUtils: void closeStatement(java.sql.Statement)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : staticinvoke <org.springframework.jdbc.support.JdbcUtils: void closeStatement(java.sql.Statement)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r24 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r25 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r25 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r25.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : specialinvoke $r25.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r24.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("hostcomponentdesiredstate", $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r24.<org.apache.ambari.server.orm.DBAccessor: void alterColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>("hostcomponentdesiredstate", $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : n0 = null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : n0 = null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r26 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r26 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r27 = virtualinvoke $r26.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r27 = virtualinvoke $r26.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r28 = <org.apache.ambari.server.upgrade.UpgradeCatalog250$1: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r28 = <org.apache.ambari.server.upgrade.UpgradeCatalog250$1: int[] $SwitchMap$org$apache$ambari$server$configuration$Configuration$DatabaseType> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $i4 = virtualinvoke r27.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $i4 = virtualinvoke r27.<org.apache.ambari.server.configuration.Configuration$DatabaseType: int ordinal()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $i5 = $r28[$i4]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $i5 = $r28[$i4] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : tableswitch($i5) {     case 1:
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : tableswitch($i5) {     case 1: >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r29 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r29 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r30 = interfaceinvoke $r29.<org.apache.ambari.server.orm.DBAccessor: java.lang.String getPrimaryKeyConstraintName(java.lang.String)>("hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : r30 = interfaceinvoke $r29.<org.apache.ambari.server.orm.DBAccessor: java.lang.String getPrimaryKeyConstraintName(java.lang.String)>("hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= (branch)]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if null != r30
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : if null != r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r34 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r34 = <org.apache.ambari.server.upgrade.UpgradeCatalog250: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to determine the primary key constraint name for {}", "hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to determine the primary key constraint name for {}", "hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : goto [?= $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r37 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r37 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r37[0] = "id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r37[0] = "id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r36.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("hostcomponentdesiredstate", "PK_hostcomponentdesiredstate", $r37)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r36.<org.apache.ambari.server.orm.DBAccessor: void addPKConstraint(java.lang.String,java.lang.String,java.lang.String[])>("hostcomponentdesiredstate", "PK_hostcomponentdesiredstate", $r37) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r38 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r38 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39 = newarray (java.lang.String)[4]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39 = newarray (java.lang.String)[4] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[0] = "component_name"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[0] = "component_name" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[1] = "service_name"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[1] = "service_name" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[2] = "host_id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[2] = "host_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[3] = "cluster_id"
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : $r39[3] = "cluster_id" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r38.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("hostcomponentdesiredstate", "UQ_hcdesiredstate_name", $r39)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateHostComponentDesiredStateTable : interfaceinvoke $r38.<org.apache.ambari.server.orm.DBAccessor: void addUniqueConstraint(java.lang.String,java.lang.String,java.lang.String[])>("hostcomponentdesiredstate", "UQ_hcdesiredstate_name", $r39) >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String name>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class type>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class type> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getType : return $r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer length>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer length> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getLength : return $r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : $r1 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object defaultValue> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : return $r1
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : $z0 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable>
org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : $z0 = r0.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable> >>>>>>>> org.apache.ambari.server.orm.DBAccessor$DBColumnInfo.isNullable : return $z0
