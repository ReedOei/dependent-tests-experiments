org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = (java.lang.String) $r8
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r10 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r10 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = (java.lang.String) $r14
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r15
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r16 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r16 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r18 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r18 = new javax.naming.ldap.LdapName >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r18.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r18.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r18
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r23 = (java.lang.String) $r22
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r23, "\\s+")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r23, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r24)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r24) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r6 = new java.util.Properties
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r6 = new java.util.Properties >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r6.<java.util.Properties: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r6.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r2 = $r6
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r2 = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r8)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r12 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r12 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r13)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = class "org/apache/ambari/server/serveraction/kerberos/TrustingSSLSocketFactory"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = class "org/apache/ambari/server/serveraction/kerberos/TrustingSSLSocketFactory" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r18)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>(r2, null)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>(r2, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r20
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r20 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r25
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15: javax.naming.directory.SearchControls answer()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15: javax.naming.directory.SearchControls answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/directory/SearchControls")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/directory/SearchControls") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : r1 = (javax.naming.directory.SearchControls) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : r1 = (javax.naming.directory.SearchControls) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : return r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$15.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r26
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r27 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r27 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r28 = (java.lang.String) $r27
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r28
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r28 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r29 = new com.google.gson.Gson
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r29 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r29.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r29.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = $r29
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = $r29 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $z2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean principalExists(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String getDefaultRealm()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String getDefaultRealm()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal valueOf(java.lang.String,java.lang.String)>(r1, $r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal valueOf(java.lang.String,java.lang.String)>(r1, $r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r0 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r7 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r7 = <org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.util.regex.Pattern PATTERN_PRINCIPAL> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r2 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r2 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r5 == null
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : if r5 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r5 = r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r8 = new org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : $r8 = new org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r5)
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : specialinvoke $r8.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r3, r4, r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : return $r8
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.valueOf : return $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : return $r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createDeconstructPrincipal : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r6 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r6 = virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String normalizedPrincipal>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String normalizedPrincipal> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getNormalizedPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r7 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String findPrincipalDN(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $r7 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String findPrincipalDN(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r2 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r1 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r3 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r3 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r9 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r9 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r9[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r9[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(userPrincipalName=%s)", $r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(userPrincipalName=%s)", $r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : $r11 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r3 = interfaceinvoke $r7.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r8, $r10, $r11)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : r3 = interfaceinvoke $r7.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)>($r8, $r10, $r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r3 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : goto [?= return r2]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : goto [?= return r2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : return r2
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.findPrincipalDN : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $r7 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : if $r7 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z1 = 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : $z1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : return $z1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.principalExists : return $z1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal createDeconstructPrincipal(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r4 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getRealm()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r4 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getRealm()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String realm>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String realm> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r4 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r20 = new java.util.HashMap
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r5 = $r20
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r5 = $r20 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r21 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r21 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("normalized_principal", $r21)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("normalized_principal", $r21) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r23 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r23 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String principalName>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String principalName> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrincipalName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_name", $r23)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_name", $r23) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r25 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrimary()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r25 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getPrimary()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String primary>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String primary> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getPrimary : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_primary", $r25)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_primary", $r25) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r27 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getInstance()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r27 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getInstance()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String instance>
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String instance> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : return $r1
org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal.getInstance : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_instance", $r27)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_instance", $r27) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm", r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm", r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r30 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r30 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm_lowercase", $r30)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("realm_lowercase", $r30) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("password", r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("is_service", $r33)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("is_service", $r33) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r35 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("container_dn", $r35)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("container_dn", $r35) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r37 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r37 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r38 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha1Hex(java.lang.String)>($r37)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r38 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha1Hex(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest", $r38)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest", $r38) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r40 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r40 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r41 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>($r40)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r41 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha256Hex(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_256", $r41)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_256", $r41) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r43 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r43 = virtualinvoke r3.<org.apache.ambari.server.serveraction.kerberos.DeconstructedPrincipal: java.lang.String getNormalizedPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r44 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha512Hex(java.lang.String)>($r43)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : $r44 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String sha512Hex(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_512", $r44)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("principal_digest_512", $r44) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Map processCreateTemplate(java.util.Map)>(r5)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createPrincipal : r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Map processCreateTemplate(java.util.Map)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r7 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $r7 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $r7 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r2 = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r9 = new java.io.StringWriter
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r9 = new java.io.StringWriter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r9.<java.io.StringWriter: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r9.<java.io.StringWriter: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r3 = $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r3 = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r4 = "{\"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\"cn\": \"$principal_name\",#if( $is_service )  \"servicePrincipalName\": \"$principal_name\",#end\"userPrincipalName\": \"$normalized_principal\",\"unicodePwd\": \"$password\",\"accountExpires\": \"0\",\"userAccountControl\": \"66048\"}"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r4 = "{\"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\"cn\": \"$principal_name\",#if( $is_service )  \"servicePrincipalName\": \"$principal_name\",#end\"userPrincipalName\": \"$normalized_principal\",\"unicodePwd\": \"$password\",\"accountExpires\": \"0\",\"userAccountControl\": \"66048\"}" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= $r11 = new org.apache.velocity.VelocityContext]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : goto [?= $r11 = new org.apache.velocity.VelocityContext] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r11 = new org.apache.velocity.VelocityContext
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r11 = new org.apache.velocity.VelocityContext >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r11.<org.apache.velocity.VelocityContext: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r11.<org.apache.velocity.VelocityContext: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z1 = staticinvoke <org.apache.velocity.app.Velocity: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>($r11, r3, "Active Directory principal create template", r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $z1 = staticinvoke <org.apache.velocity.app.Velocity: boolean evaluate(org.apache.velocity.context.Context,java.io.Writer,java.lang.String,java.lang.String)>($r11, r3, "Active Directory principal create template", r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r5 = virtualinvoke r3.<java.io.StringWriter: java.lang.String toString()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : r5 = virtualinvoke r3.<java.io.StringWriter: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r12 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : $r12 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.processCreateTemplate : specialinvoke $r12.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler$1: void <init>(org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler)>(r0)
