org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r0 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r0.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r0.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : r1 = $r0
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : r1 = $r0 >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r3 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r3 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r2 = new org.apache.ambari.server.controller.spi.Resource$Type
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r2 = new org.apache.ambari.server.controller.spi.Resource$Type >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r2.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String)>("sub1")
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r2.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String)>("sub1") >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r3.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r2)
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r3.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r2) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3)
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r5 = new org.apache.ambari.server.controller.spi.Resource$Type
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r5 = new org.apache.ambari.server.controller.spi.Resource$Type >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r5.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String)>("sub2")
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r5.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String)>("sub2") >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r5)
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r5) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r6 = new org.apache.ambari.server.api.resources.ViewInstanceResourceDefinition
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : $r6 = new org.apache.ambari.server.api.resources.ViewInstanceResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r6.<org.apache.ambari.server.api.resources.ViewInstanceResourceDefinition: void <init>(java.util.Set)>(r1)
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : specialinvoke $r6.<org.apache.ambari.server.api.resources.ViewInstanceResourceDefinition: void <init>(java.util.Set)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : return $r6
org.apache.ambari.server.api.resources.ViewInstanceResourceDefinitionTest.getViewInstanceResourceDefinition : return $r6 >>>>>>>> org.apache.ambari.server.api.resources.ViewInstanceResourceDefinition.getSingularName : return "instance"
