org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.stack.StackManagerFactory val$mockStackManagerFactory>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.stack.StackManagerFactory val$mockStackManagerFactory> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: javax.persistence.EntityManager val$mockEntityManager>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: javax.persistence.EntityManager val$mockEntityManager> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r6 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r6 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r8 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.Clusters val$mockClusters>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r8 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.Clusters val$mockClusters> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r10 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.stack.OsFamily val$mockOSFamily>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : $r10 = r0.<org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1: org.apache.ambari.server.state.stack.OsFamily val$mockOSFamily> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelperTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> = r0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> = r0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void closeConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : if $r0 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : if $r0 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : $r2 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : interfaceinvoke $r2.<java.sql.Connection: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : interfaceinvoke $r2.<java.sql.Connection: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.closeConnection : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.dao.MetainfoDAO metainfoDAO> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setInjector : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.apache.ambari.server.orm.DBAccessor dbAccessor> = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setConnection : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = r0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.setConnection : <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> = r0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r0 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking for configs not mapped to any cluster")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking for configs not mapped to any cluster") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r1 = "select type_name from clusterconfig where type_name not in (select type_name from clusterconfigmapping)"
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r1 = "select type_name from clusterconfig where type_name not in (select type_name from clusterconfigmapping)" >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r8 = new java.util.HashSet
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r8 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : specialinvoke $r8.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : specialinvoke $r8.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r2 = $r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r2 = $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r3 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r3 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r4 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r4 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $r9 != null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $r9 != null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r16 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $r16 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r4 = interfaceinvoke $r16.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r4 = interfaceinvoke $r16.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : r3 = interfaceinvoke r4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if r3 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if r3 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $z2 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : $z2 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $z2 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if r4 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : if r4 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke r4.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : interfaceinvoke r4.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForNotMappedConfigsToCluster : goto [?= return]
