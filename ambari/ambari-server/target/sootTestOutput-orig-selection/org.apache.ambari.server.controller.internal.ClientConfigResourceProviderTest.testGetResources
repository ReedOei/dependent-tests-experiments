org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type access$000(java.lang.String)>(r1)
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type access$000(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.access$000 : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type getType(java.lang.String)>(r0)
org.apache.ambari.server.controller.spi.Resource$Type.access$000 : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type getType(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r3 = (org.apache.ambari.server.controller.spi.Resource$Type) $r2
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r3 = (org.apache.ambari.server.controller.spi.Resource$Type) $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : return $r3
org.apache.ambari.server.controller.spi.Resource$Type.getType : return $r3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.access$000 : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : if r2 != null
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : if r2 != null >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r3 = new org.apache.ambari.server.controller.spi.Resource$Type
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r3 = new org.apache.ambari.server.controller.spi.Resource$Type >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $i0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $i0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : specialinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String,int,org.apache.ambari.server.controller.spi.Resource$1)>($r4, $i0, null)
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : specialinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String,int,org.apache.ambari.server.controller.spi.Resource$1)>($r4, $i0, null) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : goto [?= return $r3]
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : return $r3
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : return $r3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : return $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r0 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState[] $VALUES>
org.apache.ambari.server.state.SecurityState.values : $r0 = <org.apache.ambari.server.state.SecurityState: org.apache.ambari.server.state.SecurityState[] $VALUES> >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.SecurityState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.SecurityState.values : $r2 = (org.apache.ambari.server.state.SecurityState[]) $r1
org.apache.ambari.server.state.SecurityState.values : $r2 = (org.apache.ambari.server.state.SecurityState[]) $r1 >>>>>>>> org.apache.ambari.server.state.SecurityState.values : return $r2
org.apache.ambari.server.state.SecurityState.values : return $r2 >>>>>>>> org.apache.ambari.server.state.UpgradeState.values : $r0 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState[] $VALUES>
org.apache.ambari.server.state.UpgradeState.values : $r0 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState[] $VALUES> >>>>>>>> org.apache.ambari.server.state.UpgradeState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.UpgradeState.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.UpgradeState.values : $r2 = (org.apache.ambari.server.state.UpgradeState[]) $r1
org.apache.ambari.server.state.UpgradeState.values : $r2 = (org.apache.ambari.server.state.UpgradeState[]) $r1 >>>>>>>> org.apache.ambari.server.state.UpgradeState.values : return $r2
org.apache.ambari.server.state.UpgradeState.values : return $r2 >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name>
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.state.ClientConfigFileDefinition.setDictionaryName : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String dictionaryName> = r1
org.apache.ambari.server.state.ClientConfigFileDefinition.setDictionaryName : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String dictionaryName> = r1 >>>>>>>> org.apache.ambari.server.state.ClientConfigFileDefinition.setFileName : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String fileName> = r1
org.apache.ambari.server.state.ClientConfigFileDefinition.setFileName : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String fileName> = r1 >>>>>>>> org.apache.ambari.server.state.ClientConfigFileDefinition.setType : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String type> = r1
org.apache.ambari.server.state.ClientConfigFileDefinition.setType : r0.<org.apache.ambari.server.state.ClientConfigFileDefinition: java.lang.String type> = r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r1 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r1 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : r2 = $r1
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r3 = new org.apache.ambari.server.controller.utilities.PropertyHelper$2
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r3 = new org.apache.ambari.server.controller.utilities.PropertyHelper$2 >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r3.<org.apache.ambari.server.controller.utilities.PropertyHelper$2: void <init>()>()
