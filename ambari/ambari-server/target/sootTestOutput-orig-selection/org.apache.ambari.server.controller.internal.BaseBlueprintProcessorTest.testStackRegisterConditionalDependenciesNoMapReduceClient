org.apache.ambari.server.state.DependencyInfo.setName : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/") >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : if $z0 != 0
org.apache.ambari.server.state.DependencyInfo.setName : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name> = r1
org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47)
org.apache.ambari.server.state.DependencyInfo.setName : i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47) >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.DependencyInfo.setName : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName> = $r3
org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName> = $r3 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : $i1 = i0 + 1
org.apache.ambari.server.state.DependencyInfo.setName : $i1 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.ambari.server.state.DependencyInfo.setName : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName> = $r4
org.apache.ambari.server.state.DependencyInfo.setName : r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName> = $r4 >>>>>>>> org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1
org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1
org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1
org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r1 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r1 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r1.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, null)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r1.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, null) >>>>>>>> org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r11 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r11 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r11)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getDependencyConditionalServiceMap : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dependencyConditionalServiceMap>
org.apache.ambari.server.controller.internal.Stack.getDependencyConditionalServiceMap : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dependencyConditionalServiceMap> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getDependencyConditionalServiceMap : return $r1
org.apache.ambari.server.controller.internal.Stack.getDependencyConditionalServiceMap : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : specialinvoke r0.<org.apache.ambari.server.controller.internal.Stack: void registerConditionalDependencies()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : specialinvoke r0.<org.apache.ambari.server.controller.internal.Stack: void registerConditionalDependencies()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo>
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database")
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: java.util.Map getDependencyConditionalServiceMap()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: java.util.Map getDependencyConditionalServiceMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: java.util.Collection getDependenciesForComponent(java.lang.String)>("FAKE_MONITORING_SERVER")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: java.util.Collection getDependenciesForComponent(java.lang.String)>("FAKE_MONITORING_SERVER") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("FAKE_MONITORING_SERVER")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("FAKE_MONITORING_SERVER") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r3 = new java.util.HashSet
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : r2 = $r3
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : r2 = $r3 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r4 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$hCatDependency>
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r4 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$hCatDependency> >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r1 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r1 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : if $r1 == null
org.apache.ambari.server.state.DependencyInfo.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r2 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r2 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.state.DependencyInfo.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : i0 = $i1
org.apache.ambari.server.state.DependencyInfo.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i2 = 31 * i0
org.apache.ambari.server.state.DependencyInfo.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r3 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String scope>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r3 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String scope> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : if $r3 == null
org.apache.ambari.server.state.DependencyInfo.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i3 = 0
org.apache.ambari.server.state.DependencyInfo.hashCode : $i3 = 0 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.state.DependencyInfo.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i5 = 31 * i4
org.apache.ambari.server.state.DependencyInfo.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r5 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r5 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : if $r5 == null
org.apache.ambari.server.state.DependencyInfo.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r6 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r6 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.state.DependencyInfo.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i7 = $i5 + $i6]
org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i7 = $i5 + $i6] >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.state.DependencyInfo.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i8 = 31 * i7
org.apache.ambari.server.state.DependencyInfo.hashCode : $i8 = 31 * i7 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r7 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r7 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : if $r7 == null
org.apache.ambari.server.state.DependencyInfo.hashCode : if $r7 == null >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r8 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r8 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i9 = virtualinvoke $r8.<java.lang.String: int hashCode()>()
org.apache.ambari.server.state.DependencyInfo.hashCode : $i9 = virtualinvoke $r8.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i10 = $i8 + $i9]
org.apache.ambari.server.state.DependencyInfo.hashCode : goto [?= i10 = $i8 + $i9] >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : i10 = $i8 + $i9
org.apache.ambari.server.state.DependencyInfo.hashCode : i10 = $i8 + $i9 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i11 = 31 * i10
org.apache.ambari.server.state.DependencyInfo.hashCode : $i11 = 31 * i10 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $r9 = r0.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo m_autoDeploy>
org.apache.ambari.server.state.DependencyInfo.hashCode : $r9 = r0.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo m_autoDeploy> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : if $r9 == null
org.apache.ambari.server.state.DependencyInfo.hashCode : if $r9 == null >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : $i12 = 0
org.apache.ambari.server.state.DependencyInfo.hashCode : $i12 = 0 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : i13 = $i11 + $i12
org.apache.ambari.server.state.DependencyInfo.hashCode : i13 = $i11 + $i12 >>>>>>>> org.apache.ambari.server.state.DependencyInfo.hashCode : return i13
org.apache.ambari.server.state.DependencyInfo.hashCode : return i13 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r5 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$yarnClientDependency>
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r5 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$yarnClientDependency> >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r6 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$tezClientDependency>
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r6 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$tezClientDependency> >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r7 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$oozieClientDependency>
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : $r7 = r0.<org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5: org.apache.ambari.server.state.DependencyInfo val$oozieClientDependency> >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : return r2
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.getDependenciesForComponent : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r4 = (org.apache.ambari.server.state.DependencyInfo) $r5
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : r4 = (org.apache.ambari.server.state.DependencyInfo) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r6 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r6 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.state.DependencyInfo.getComponentName : $r1 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName>
org.apache.ambari.server.state.DependencyInfo.getComponentName : $r1 = r0.<org.apache.ambari.server.state.DependencyInfo: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.state.DependencyInfo.getComponentName : return $r1
org.apache.ambari.server.state.DependencyInfo.getComponentName : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("HCAT")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("HCAT") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z1 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r8 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r8 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("OOZIE_CLIENT")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("OOZIE_CLIENT") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z2 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "OOZIE")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "OOZIE") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : goto [?= (branch)]
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("YARN_CLIENT")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("YARN_CLIENT") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z3 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("TEZ_CLIENT")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("TEZ_CLIENT") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z4 == 0
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "TEZ")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "TEZ") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "HIVE")
org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "HIVE") >>>>>>>> org.apache.ambari.server.controller.internal.BaseBlueprintProcessorTest$5.registerConditionalDependencies : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, "YARN")
