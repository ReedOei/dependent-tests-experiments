org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule: org.apache.ambari.server.view.ViewThrottleFilterTest this$0>
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule: org.apache.ambari.server.view.ViewThrottleFilterTest this$0> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewThrottleFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r4 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewThrottleFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name>
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r6 = r0.<org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule: org.apache.ambari.server.view.ViewThrottleFilterTest this$0>
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r6 = r0.<org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule: org.apache.ambari.server.view.ViewThrottleFilterTest this$0> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewThrottleFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewThrottleFilterTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.view.ViewThrottleFilterTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r2 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.view.ViewThrottleFilter.init : $r2 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $i3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration: int getViewRequestThreadPoolTimeout()>()
org.apache.ambari.server.view.ViewThrottleFilter.init : $i3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration: int getViewRequestThreadPoolTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : r0.<org.apache.ambari.server.view.ViewThrottleFilter: int m_timeout> = $i3
org.apache.ambari.server.view.ViewThrottleFilter.init : r0.<org.apache.ambari.server.view.ViewThrottleFilter: int m_timeout> = $i3 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r3 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.view.ViewThrottleFilter.init : $r3 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : i0 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration: int getClientThreadPoolSize()>()
org.apache.ambari.server.view.ViewThrottleFilter.init : i0 = virtualinvoke $r3.<org.apache.ambari.server.configuration.Configuration: int getClientThreadPoolSize()>() >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r4 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.view.ViewThrottleFilter.init : $r4 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : i1 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: int getViewRequestThreadPoolMaxSize()>()
org.apache.ambari.server.view.ViewThrottleFilter.init : i1 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: int getViewRequestThreadPoolMaxSize()>() >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : i2 = i0 / 2
org.apache.ambari.server.view.ViewThrottleFilter.init : i2 = i0 / 2 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : if i1 <= 0
org.apache.ambari.server.view.ViewThrottleFilter.init : if i1 <= 0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : i2 = i1
org.apache.ambari.server.view.ViewThrottleFilter.init : i2 = i1 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : if i1 <= i0
org.apache.ambari.server.view.ViewThrottleFilter.init : if i1 <= i0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r8 = <org.apache.ambari.server.view.ViewThrottleFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewThrottleFilter.init : $r8 = <org.apache.ambari.server.view.ViewThrottleFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)
org.apache.ambari.server.view.ViewThrottleFilter.init : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Ambari Views will be able to utilize {} concurrent REST API threads", $r9)
org.apache.ambari.server.view.ViewThrottleFilter.init : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Ambari Views will be able to utilize {} concurrent REST API threads", $r9) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : $r10 = new java.util.concurrent.Semaphore
org.apache.ambari.server.view.ViewThrottleFilter.init : $r10 = new java.util.concurrent.Semaphore >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : specialinvoke $r10.<java.util.concurrent.Semaphore: void <init>(int)>(i2)
org.apache.ambari.server.view.ViewThrottleFilter.init : specialinvoke $r10.<java.util.concurrent.Semaphore: void <init>(int)>(i2) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.init : r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore> = $r10
org.apache.ambari.server.view.ViewThrottleFilter.init : r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore> = $r10 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $z1 = r1 instanceof javax.servlet.http.HttpServletRequest
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $z1 = r1 instanceof javax.servlet.http.HttpServletRequest >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : if $z1 != 0
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : r4 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : r4 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : z0 = 0
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : z0 = 0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r8 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore>
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r8 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $i0 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: int m_timeout>
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $i0 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: int m_timeout> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $l1 = (long) $i0
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : z0 = virtualinvoke $r8.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l1, $r5)
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : z0 = virtualinvoke $r8.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l1, $r5) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : goto [?= (branch)]
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : if z0 != 0
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r11 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore>
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : $r11 = r0.<org.apache.ambari.server.view.ViewThrottleFilter: java.util.concurrent.Semaphore m_semaphore> >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : virtualinvoke $r11.<java.util.concurrent.Semaphore: void release()>()
org.apache.ambari.server.view.ViewThrottleFilter.doFilter : virtualinvoke $r11.<java.util.concurrent.Semaphore: void release()>() >>>>>>>> org.apache.ambari.server.view.ViewThrottleFilter.doFilter : goto [?= return]
