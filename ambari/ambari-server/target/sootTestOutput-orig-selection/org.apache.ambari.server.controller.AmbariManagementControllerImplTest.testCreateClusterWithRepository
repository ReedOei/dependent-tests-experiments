org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.setRepositoryVersion : r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String repositoryVersion> = r1
org.apache.ambari.server.controller.ClusterRequest.setRepositoryVersion : r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String repositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r9 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String clusterName>
org.apache.ambari.server.controller.ClusterRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterName : return $r1
org.apache.ambari.server.controller.ClusterRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r9 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z1 = virtualinvoke $r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z1 = virtualinvoke $r10.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z1 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterId : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long clusterId>
org.apache.ambari.server.controller.ClusterRequest.getClusterId : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long clusterId> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getClusterId : return $r1
org.apache.ambari.server.controller.ClusterRequest.getClusterId : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r11 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r13 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r13 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z2 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z2 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String stackVersion>
org.apache.ambari.server.controller.ClusterRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getStackVersion : return $r1
org.apache.ambari.server.controller.ClusterRequest.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r22 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r22 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r23 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z3 = virtualinvoke $r23.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $z3 = virtualinvoke $r23.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r25 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r25 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r26 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r26 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : specialinvoke $r25.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : specialinvoke $r25.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r2 = $r25
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r2 = $r25 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r27 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r27 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r28 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r28 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : return $r1
org.apache.ambari.server.state.StackId.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r29 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r29 = virtualinvoke r2.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : return $r1
org.apache.ambari.server.state.StackId.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r3 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r28, $r29)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r3 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r28, $r29) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if r3 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if r3 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r4 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r4 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r39 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r39 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String repositoryVersion>
org.apache.ambari.server.controller.ClusterRequest.getRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String repositoryVersion> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getRepositoryVersion : return $r1
org.apache.ambari.server.controller.ClusterRequest.getRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if null == $r39
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if null == $r39 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r40 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r40 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r41 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r41 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r4 = virtualinvoke $r40.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, $r41)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r4 = virtualinvoke $r40.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackAndVersion(org.apache.ambari.server.state.StackId,java.lang.String)>(r2, $r41) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if null != r4
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if null != r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : z0 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r46 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r5 = $r46
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r5 = $r46 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r47 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r47 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getHostNames : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set hostNames>
org.apache.ambari.server.controller.ClusterRequest.getHostNames : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set hostNames> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getHostNames : return $r1
org.apache.ambari.server.controller.ClusterRequest.getHostNames : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r47 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r47 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r57 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r57 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r58 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r58 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r59 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r59 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getSecurityType : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType securityType>
org.apache.ambari.server.controller.ClusterRequest.getSecurityType : $r1 = r0.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType securityType> >>>>>>>> org.apache.ambari.server.controller.ClusterRequest.getSecurityType : return $r1
org.apache.ambari.server.controller.ClusterRequest.getSecurityType : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : interfaceinvoke $r57.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.SecurityType)>($r58, r2, $r59)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : interfaceinvoke $r57.<org.apache.ambari.server.state.Clusters: void addCluster(java.lang.String,org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.SecurityType)>($r58, r2, $r59) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r61 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r61 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r62 = interfaceinvoke $r60.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r61)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : r62 = interfaceinvoke $r60.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r61) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r63 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : $r63 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r63 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : if $r63 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r62, null)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createCluster : virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r62, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.initializeWidgetsAndLayouts : r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.initializeWidgetsAndLayouts : r3 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.initializeWidgetsAndLayouts : $r11 = new org.apache.ambari.server.controller.AmbariManagementControllerImpl$4
org.apache.ambari.server.controller.AmbariManagementControllerImpl.initializeWidgetsAndLayouts : $r11 = new org.apache.ambari.server.controller.AmbariManagementControllerImpl$4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.initializeWidgetsAndLayouts : specialinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementControllerImpl$4: void <init>(org.apache.ambari.server.controller.AmbariManagementControllerImpl)>(r0)
