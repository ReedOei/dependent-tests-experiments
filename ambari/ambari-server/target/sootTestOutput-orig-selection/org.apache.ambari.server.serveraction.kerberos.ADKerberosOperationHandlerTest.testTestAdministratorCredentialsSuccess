org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ldap_url") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = (java.lang.String) $r8
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r9
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> = $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r10 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r10 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r10 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r12 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("ldaps://") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r14 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("container_dn") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = (java.lang.String) $r14
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r15
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r16 != null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : if $r16 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r18 = new javax.naming.ldap.LdapName
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r18 = new javax.naming.ldap.LdapName >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String principalContainerDn> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r18.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r18.<javax.naming.ldap.LdapName: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r18
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapName principalContainerLdapName> = $r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r22 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r23 = (java.lang.String) $r22
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r23, "\\s+")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r23, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r24)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r24) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createLdapContext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r6 = new java.util.Properties
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r6 = new java.util.Properties >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r6.<java.util.Properties: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : specialinvoke $r6.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r2 = $r6
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : r2 = $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String ldapUrl> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r8)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.provider.url", $r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.principal", $r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r12 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r12 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r13)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.credentials", $r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.security.authentication", "simple") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.referral", "follow") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = class "org/apache/ambari/server/serveraction/kerberos/TrustingSSLSocketFactory"
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r17 = class "org/apache/ambari/server/serveraction/kerberos/TrustingSSLSocketFactory" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r18)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.naming.ldap.factory.socket", $r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>(r2, null)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext createInitialLdapContext(java.util.Properties,javax.naming.ldap.Control[])>(r2, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12: javax.naming.ldap.LdapContext answer()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12: javax.naming.ldap.LdapContext answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/ldap/LdapContext")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/ldap/LdapContext") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : r1 = (javax.naming.ldap.LdapContext) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : r1 = (javax.naming.ldap.LdapContext) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r7 = (java.lang.String) $r6
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "javax/naming/directory/SearchControls")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "javax/naming/directory/SearchControls") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r9 = (javax.naming.directory.SearchControls) $r8
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r9 = (javax.naming.directory.SearchControls) $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r10 = interfaceinvoke r1.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>($r5, $r7, $r9)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r10 = interfaceinvoke r1.<javax.naming.ldap.LdapContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>($r5, $r7, $r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r11 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r12 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12$1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r12 = new org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : specialinvoke $r12.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12$1: void <init>(org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12)>(r0)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : specialinvoke $r12.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12$1: void <init>(org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r13 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r12)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r13 = interfaceinvoke $r11.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andAnswer(org.easymock.IAnswer)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r15[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : $r15[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r15)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r15) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : return r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$12.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r20
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.createLdapContext : return $r20 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r25
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = $r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r26 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls createSearchControls()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13: javax.naming.directory.SearchControls answer()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13: javax.naming.directory.SearchControls answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13: org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/directory/SearchControls")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/naming/directory/SearchControls") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : r1 = (javax.naming.directory.SearchControls) $r3
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : r1 = (javax.naming.directory.SearchControls) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r4 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r4[0] = r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : $r4[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : return r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandlerTest$13.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r26
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = $r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r27 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template")
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r27 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("ad_create_attributes_template") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r28 = (java.lang.String) $r27
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r28 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r28
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: java.lang.String createTemplate> = $r28 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r29 = new com.google.gson.Gson
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : $r29 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r29.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : specialinvoke $r29.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = $r29
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = $r29 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : return 1
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.testAdministratorCredentials : return 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.directory.SearchControls searchControls> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: com.google.gson.Gson gson> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : if $r3 == null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : if $r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext>
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : interfaceinvoke $r4.<javax.naming.ldap.LdapContext: void close()>()
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : interfaceinvoke $r4.<javax.naming.ldap.LdapContext: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = null
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: javax.naming.ldap.LdapContext ldapContext> = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)]
org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler.close : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.ADKerberosOperationHandler: void setOpen(boolean)>(0)
