org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor>
org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: org.apache.ambari.server.orm.DBAccessor val$mockDBDbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "com/google/inject/persist/PersistService")
org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "com/google/inject/persist/PersistService") >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: com.google.inject.persist.PersistService val$mockPersistService>
org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : $r4 = r0.<org.apache.ambari.server.checks.MpackInstallCheckerTest$1: com.google.inject.persist.PersistService val$mockPersistService> >>>>>>>> org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.checks.MpackInstallCheckerTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r1 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r1 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r1 != null
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r1 != null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r2 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r2 != null
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : if $r2 != null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r6 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r6 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: org.apache.ambari.server.orm.DBAccessor dbAccessor> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.orm.DBAccessor: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> = $r7
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> = $r7 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r8 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection>
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : $r8 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.getConnection : return $r8
org.apache.ambari.server.checks.MpackInstallChecker.getConnection : return $r8 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r2 = null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r2 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r3 = null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r3 = null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r16 = new java.util.HashMap
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r4 = $r16
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r4 = $r16 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r5 = "select c.cluster_name, s.stack_name, s.stack_version from clusters c join stack s on c.desired_stack_id = s.stack_id"
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r5 = "select c.cluster_name, s.stack_name, s.stack_version from clusters c join stack s on c.desired_stack_id = s.stack_id" >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r6 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection getConnection()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r6 = virtualinvoke r0.<org.apache.ambari.server.checks.MpackInstallChecker: java.sql.Connection getConnection()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r3 = interfaceinvoke r6.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r3 = interfaceinvoke r6.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r2 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r5)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r2 = interfaceinvoke r3.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r2 == null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r2 == null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z0 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z0 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z0 == 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r17 = new java.util.HashMap
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r7 = $r17
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r7 = $r17 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_name")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r18 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_name") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r19 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_version")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r19 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("stack_version") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("cluster_name")
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r21 = interfaceinvoke r2.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("cluster_name") >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r7)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r7) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z0 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z0 = interfaceinvoke r2.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r23 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r23 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z1 == 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r8 = (java.util.Map$Entry) $r25
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r8 = (java.util.Map$Entry) $r25 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r26 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r26 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r9 = (java.lang.String) $r26
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r9 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r27 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r27 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r10 = (java.util.Map) $r27
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r10 = (java.util.Map) $r27 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r28 = interfaceinvoke r10.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r28 = interfaceinvoke r10.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r11 = (java.lang.String) $r30
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r11 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r31 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $r31 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r12 = (java.lang.String) $r31
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : r12 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z2 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r11)
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : $z2 = virtualinvoke r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z2 != 0
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r2.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r2.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= (branch)]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r3 == null
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : if r3 == null >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r3.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : interfaceinvoke r3.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= return]
org.apache.ambari.server.checks.MpackInstallChecker.checkClusters : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : $z0 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound>
org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : $z0 = r0.<org.apache.ambari.server.checks.MpackInstallChecker: boolean errorsFound> >>>>>>>> org.apache.ambari.server.checks.MpackInstallChecker.isErrorsFound : return $z0
