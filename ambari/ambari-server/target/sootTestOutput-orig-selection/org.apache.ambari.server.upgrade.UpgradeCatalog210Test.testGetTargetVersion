org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog210Test,org.apache.ambari.server.orm.DBAccessor)>(r0, r1)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog210Test,org.apache.ambari.server.orm.DBAccessor)>(r0, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r3 = $r2
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r3 = $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5[0] = r3
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5[0] = r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r4 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r4 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.orm.DBAccessor val$dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.orm.DBAccessor val$dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.upgrade.UpgradeCatalog210Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.upgrade.UpgradeCatalog210Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r6 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager access$000(org.apache.ambari.server.upgrade.UpgradeCatalog210Test)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r6 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager access$000(org.apache.ambari.server.upgrade.UpgradeCatalog210Test)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r6 = interfaceinvoke r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog210")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r6 = interfaceinvoke r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog210") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
