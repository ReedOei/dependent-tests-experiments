org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.controller.AmbariManagementController val$controller>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r2 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.controller.AmbariManagementController val$controller> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.orm.DBAccessor val$dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.orm.DBAccessor val$dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.state.stack.OsFamily val$osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4: org.apache.ambari.server.state.stack.OsFamily val$osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$4.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
