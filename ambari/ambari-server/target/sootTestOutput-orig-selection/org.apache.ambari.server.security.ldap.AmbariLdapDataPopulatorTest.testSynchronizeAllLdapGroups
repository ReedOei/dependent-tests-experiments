org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name>
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConnectionPoolType: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1
org.apache.ambari.server.configuration.Configuration$ConnectionPoolType.getName : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r2 = new java.util.HashSet
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : return $r2
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest.createSet : return $r2 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapTemplate : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.springframework.ldap.core.LdapTemplate ldapTemplate> = r1
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapTemplate : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.springframework.ldap.core.LdapTemplate ldapTemplate> = r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapServerProperties : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> = r1
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator.setLdapServerProperties : r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$TestAmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> = r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r2 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r2 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>("Synchronize All LDAP groups...")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : interfaceinvoke $r2.<org.slf4j.Logger: void trace(java.lang.String)>("Synchronize All LDAP groups...") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r3 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Set getExternalLdapGroupInfo()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r3 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Set getExternalLdapGroupInfo()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r4 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Map getInternalGroups()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r4 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Map getInternalGroups()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r5 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r5 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r1 = virtualinvoke $r5.<org.apache.ambari.server.security.authorization.Users: java.util.List getAllGroups()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r1 = virtualinvoke $r5.<org.apache.ambari.server.security.authorization.Users: java.util.List getAllGroups()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r6 = new java.util.HashMap
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r2 = $r6
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r2 = $r6 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : if $z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r4 = (org.apache.ambari.server.security.authorization.Group) $r7
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : r4 = (org.apache.ambari.server.security.authorization.Group) $r7 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r8 = virtualinvoke r4.<org.apache.ambari.server.security.authorization.Group: java.lang.String getGroupName()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : $r8 = virtualinvoke r4.<org.apache.ambari.server.security.authorization.Group: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r4)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r4) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : return r2
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalGroups : return r2 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r5 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Map getInternalUsers()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r5 = virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: java.util.Map getInternalUsers()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r5 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r5 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r1 = virtualinvoke $r5.<org.apache.ambari.server.security.authorization.Users: java.util.List getAllUsers()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r1 = virtualinvoke $r5.<org.apache.ambari.server.security.authorization.Users: java.util.List getAllUsers()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r6 = new java.util.HashMap
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r2 = $r6
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r2 = $r6 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r7 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $r7 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>("Get all users from Ambari Server.")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String)>("Get all users from Ambari Server.") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : if $z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : return r2
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.getInternalUsers : return r2 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r7 = (org.apache.ambari.server.security.ldap.LdapGroupDto) $r9
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r7 = (org.apache.ambari.server.security.ldap.LdapGroupDto) $r9 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r8 = virtualinvoke r7.<org.apache.ambari.server.security.ldap.LdapGroupDto: java.lang.String getGroupName()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r8 = virtualinvoke r7.<org.apache.ambari.server.security.ldap.LdapGroupDto: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: void addLdapGroup(org.apache.ambari.server.security.ldap.LdapBatchDto,java.util.Map,java.lang.String)>(r1, r4, r8)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: void addLdapGroup(org.apache.ambari.server.security.ldap.LdapBatchDto,java.util.Map,java.lang.String)>(r1, r4, r8) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsProcessedInternal()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r10 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsProcessedInternal()>() >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsProcessedInternal : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsProcessedInternal>
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsProcessedInternal : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsProcessedInternal> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsProcessedInternal : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsProcessedInternal : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z4 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z4 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z4 != 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBeCreated()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r11 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBeCreated()>() >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeCreated : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBeCreated>
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeCreated : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBeCreated> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeCreated : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeCreated : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: void refreshGroupMembers(org.apache.ambari.server.security.ldap.LdapBatchDto,org.apache.ambari.server.security.ldap.LdapGroupDto,java.util.Map,java.util.Map,java.util.Set,boolean)>(r1, r7, r5, r4, null, 0)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : virtualinvoke r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: void refreshGroupMembers(org.apache.ambari.server.security.ldap.LdapBatchDto,org.apache.ambari.server.security.ldap.LdapGroupDto,java.util.Map,java.util.Map,java.util.Set,boolean)>(r1, r7, r5, r4, null, 0) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : r4 = (org.apache.ambari.server.security.authorization.Group) $r5
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : r4 = (org.apache.ambari.server.security.authorization.Group) $r5 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z1 = virtualinvoke r4.<org.apache.ambari.server.security.authorization.Group: boolean isLdapGroup()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $z1 = virtualinvoke r4.<org.apache.ambari.server.security.authorization.Group: boolean isLdapGroup()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z1 != 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsProcessedInternal()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r9 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsProcessedInternal()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : goto [?= return]
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : goto [?= return] >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r6 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBecomeLdap()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r6 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBecomeLdap()>() >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBecomeLdap : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBecomeLdap>
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBecomeLdap : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBecomeLdap> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBecomeLdap : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBecomeLdap : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r7 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : $r7 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Convert group \'{}\' to LDAP group.", r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.addLdapGroup : interfaceinvoke $r7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Convert group \'{}\' to LDAP group.", r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z1 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r13 = (java.util.Map$Entry) $r12
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : r13 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r15 = (org.apache.ambari.server.security.authorization.Group) $r14
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r15 = (org.apache.ambari.server.security.authorization.Group) $r14 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z2 = virtualinvoke $r15.<org.apache.ambari.server.security.authorization.Group: boolean isLdapGroup()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $z2 = virtualinvoke $r15.<org.apache.ambari.server.security.authorization.Group: boolean isLdapGroup()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z2 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r16 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBeRemoved()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r16 = virtualinvoke r1.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set getGroupsToBeRemoved()>() >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeRemoved : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBeRemoved>
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeRemoved : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set groupsToBeRemoved> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeRemoved : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getGroupsToBeRemoved : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r17 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r17 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r18 = (org.apache.ambari.server.security.authorization.Group) $r17
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r18 = (org.apache.ambari.server.security.authorization.Group) $r17 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r19 = virtualinvoke $r18.<org.apache.ambari.server.security.authorization.Group: java.lang.String getGroupName()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : $r19 = virtualinvoke $r18.<org.apache.ambari.server.security.authorization.Group: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : return r1
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.synchronizeAllLdapGroups : return r1 >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeCreated : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBeCreated>
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeCreated : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBeCreated> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeCreated : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeCreated : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToAdd : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set membershipToAdd>
org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToAdd : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set membershipToAdd> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToAdd : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToAdd : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToRemove : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set membershipToRemove>
org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToRemove : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set membershipToRemove> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToRemove : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getMembershipToRemove : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBecomeLdap : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBecomeLdap>
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBecomeLdap : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBecomeLdap> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBecomeLdap : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBecomeLdap : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeRemoved : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBeRemoved>
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeRemoved : $r1 = r0.<org.apache.ambari.server.security.ldap.LdapBatchDto: java.util.Set usersToBeRemoved> >>>>>>>> org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeRemoved : return $r1
org.apache.ambari.server.security.ldap.LdapBatchDto.getUsersToBeRemoved : return $r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$AmbariLdapDataPopulatorTestInstance.loadLdapTemplate : $r1 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$AmbariLdapDataPopulatorTestInstance: org.springframework.ldap.core.LdapTemplate ldapTemplate>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$AmbariLdapDataPopulatorTestInstance.loadLdapTemplate : $r1 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$AmbariLdapDataPopulatorTestInstance: org.springframework.ldap.core.LdapTemplate ldapTemplate> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulatorTest$AmbariLdapDataPopulatorTestInstance.loadLdapTemplate : return $r1
