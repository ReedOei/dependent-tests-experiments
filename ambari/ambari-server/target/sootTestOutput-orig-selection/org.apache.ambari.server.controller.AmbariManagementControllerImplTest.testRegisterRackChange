org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1
org.apache.ambari.server.state.RepositoryInfo.setRepoName : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoName> = r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r15 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r15 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r2 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r2 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r16 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r16 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r17 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r17 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r18 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r18 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r4 = virtualinvoke $r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getRackSensitiveServicesNames(java.lang.String,java.lang.String)>($r17, $r18)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r4 = virtualinvoke $r16.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getRackSensitiveServicesNames(java.lang.String,java.lang.String)>($r17, $r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r7 = (org.apache.ambari.server.state.Service) $r20
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r7 = (org.apache.ambari.server.state.Service) $r20 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z1 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z1 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r22 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r22 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r9 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r9 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r10 = (org.apache.ambari.server.state.ServiceComponent) $r23
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r10 = (org.apache.ambari.server.state.ServiceComponent) $r23 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r24 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r24 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r12 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r12 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r25 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r25 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r13 = (java.util.Map$Entry) $r25
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r13 = (java.util.Map$Entry) $r25 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r26 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : $r26 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r14 = (org.apache.ambari.server.state.ServiceComponentHost) $r26
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : r14 = (org.apache.ambari.server.state.ServiceComponentHost) $r26 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponentHost: void setRestartRequired(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponentHost: void setRestartRequired(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.registerRackChange : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
