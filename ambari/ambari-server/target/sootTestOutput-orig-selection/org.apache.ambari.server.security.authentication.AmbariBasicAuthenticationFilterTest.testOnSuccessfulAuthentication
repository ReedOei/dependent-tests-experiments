org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r5 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger> >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $z0 = interfaceinvoke $r5.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $z0 = interfaceinvoke $r5.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : if $z0 == 0
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r6 = staticinvoke <org.apache.ambari.server.audit.event.LoginAuditEvent: org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder builder()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r6 = staticinvoke <org.apache.ambari.server.audit.event.LoginAuditEvent: org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder builder()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder
org.apache.ambari.server.audit.event.LoginAuditEvent.builder : $r0 = new org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: void <init>(org.apache.ambari.server.audit.event.LoginAuditEvent$1)>(null)
org.apache.ambari.server.audit.event.LoginAuditEvent.builder : specialinvoke $r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: void <init>(org.apache.ambari.server.audit.event.LoginAuditEvent$1)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3]
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent.builder : return $r0
org.apache.ambari.server.audit.event.LoginAuditEvent.builder : return $r0 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r7 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: java.lang.String getRemoteAddress(javax.servlet.http.HttpServletRequest)>(r1)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r7 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: java.lang.String getRemoteAddress(javax.servlet.http.HttpServletRequest)>(r1) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = null
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck>
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r4 = <org.apache.ambari.server.utils.RequestUtils: java.util.Set headersToCheck> >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r3 = (java.lang.String) $r5
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r3)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z1 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z1 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if r0 == null
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $i0 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $i0 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if $i0 == 0
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if $i0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $r1 = "unknown"
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $r1 = "unknown" >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0)
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if $z0 == 0
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $z1 = 0
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : return $z1
org.apache.ambari.server.utils.RequestUtils.isRemoteAddressUnknown : return $z1 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z1 != 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : goto [?= $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)]
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : goto [?= $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)] >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z2 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean isRemoteAddressUnknown(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z2 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z3 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean containsMultipleRemoteAddresses(java.lang.String)>(r1)
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : $z3 = staticinvoke <org.apache.ambari.server.utils.RequestUtils: boolean containsMultipleRemoteAddresses(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if r0 == null
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if r0 == null >>>>>>>> org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(",")
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if $i0 <= 0
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : $z0 = 0
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : $z0 = 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : return $z0
org.apache.ambari.server.utils.RequestUtils.containsMultipleRemoteAddresses : return $z0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z3 == 0
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : if $z3 == 0 >>>>>>>> org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return r1
org.apache.ambari.server.utils.RequestUtils.getRemoteAddress : return r1 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r7)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r8 = virtualinvoke $r6.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withRemoteIp(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Class builderClass> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : $r3 = (org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.self : return $r3 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withRemoteIp : return $r3 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r9 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r8
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r9 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r8 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r10 = interfaceinvoke r3.<org.springframework.security.core.Authentication: java.lang.String getName()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r10 = interfaceinvoke r3.<org.springframework.security.core.Authentication: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withUserName(java.lang.String)>($r10)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r11 = virtualinvoke $r9.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder withUserName(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName> = r1
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : $r3 = (org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder) $r2 >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : return $r3
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.withUserName : return $r3 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r12 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r11
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r12 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r11 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r14 = virtualinvoke $r12.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r13)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r14 = virtualinvoke $r12.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder withTimestamp(java.lang.Long)>($r13) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> = r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : $r2 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder self()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.withTimestamp : return $r2 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r15 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r14
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r15 = (org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder) $r14 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r16 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.security.authorization.PermissionHelper permissionHelper>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r16 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.security.authorization.PermissionHelper permissionHelper> >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r17 = virtualinvoke $r16.<org.apache.ambari.server.security.authorization.PermissionHelper: java.util.Map getPermissionLabels(org.springframework.security.core.Authentication)>(r3)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r17 = virtualinvoke $r16.<org.apache.ambari.server.security.authorization.PermissionHelper: java.util.Map getPermissionLabels(org.springframework.security.core.Authentication)>(r3) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r18 = virtualinvoke $r15.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder withRoles(java.util.Map)>($r17)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r18 = virtualinvoke $r15.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder withRoles(java.util.Map)>($r17) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withRoles : r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles> = r1
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withRoles : r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles> = r1 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withRoles : return r0
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.withRoles : return r0 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : r4 = virtualinvoke $r18.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent build()>()
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : r4 = virtualinvoke $r18.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent build()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r2 = $r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r2 = $r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r2)
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r2) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: void buildAuditMessage(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User(")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User(") >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName>
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r3 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String userName> >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), RemoteIp(")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), RemoteIp(") >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp>
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r6 = r0.<org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder: java.lang.String remoteIp> >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.event.AbstractUserAuditEvent$AbstractUserAuditEventBuilder.buildAuditMessage : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Operation(User login), Roles(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Operation(User login), Roles(") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r6 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r6 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r8 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r8 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles> >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r8 == null
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r8 == null >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r9 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r9 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles> >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $z0 = interfaceinvoke $r9.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $z0 = interfaceinvoke $r9.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $z0 != 0
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $z0 != 0 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r10 = new java.util.LinkedList
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r10 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke $r10.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke $r10.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r2 = $r10
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r2 = $r10 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r11 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r11 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.util.Map roles> >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $z1 == 0
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $z1 == 0 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r4 = (java.util.Map$Entry) $r13
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : r4 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r14 = new java.lang.StringBuilder
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r17 = (java.lang.String) $r16
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r21 = (java.util.Collection) $r20
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r21 = (java.util.Collection) $r20 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r22 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r21, ", ")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r22 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r21, ", ") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r25 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r25 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r2, $r25)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r2, $r25) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r28 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r28 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Status(")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), Status(") >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r31 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r31 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure> >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r31 != null
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r31 != null >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r32 = "Success"
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r32 = "Success" >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : goto [?= virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)]
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : goto [?= virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)] >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r34 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure>
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : $r34 = r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: java.lang.String reasonOfFailure> >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r34 == null
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : if $r34 == null >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.buildAuditMessage : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> = $r3
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> = $r3 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r4 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : $r4 = virtualinvoke r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: org.apache.ambari.server.audit.event.AbstractAuditEvent newAuditEvent()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.LoginAuditEvent newAuditEvent()>()
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = virtualinvoke r0.<org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder: org.apache.ambari.server.audit.event.LoginAuditEvent newAuditEvent()>() >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = new org.apache.ambari.server.audit.event.LoginAuditEvent
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : $r1 = new org.apache.ambari.server.audit.event.LoginAuditEvent >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : specialinvoke $r1.<org.apache.ambari.server.audit.event.LoginAuditEvent: void <init>(org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder,org.apache.ambari.server.audit.event.LoginAuditEvent$1)>(r0, null)
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : specialinvoke $r1.<org.apache.ambari.server.audit.event.LoginAuditEvent: void <init>(org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder,org.apache.ambari.server.audit.event.LoginAuditEvent$1)>(r0, null) >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.Long timestamp> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : return $r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage>
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : $r1 = r0.<org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder: java.lang.String auditMessage> >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : return $r1
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : return $r1
org.apache.ambari.server.audit.event.LoginAuditEvent$LoginAuditEventBuilder.newAuditEvent : return $r1 >>>>>>>> org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : return $r4
org.apache.ambari.server.audit.event.AbstractAuditEvent$AbstractAuditEventBuilder.build : return $r4 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r19 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger>
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : $r19 = r0.<org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter: org.apache.ambari.server.audit.AuditLogger auditLogger> >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.onSuccessfulAuthentication : interfaceinvoke $r19.<org.apache.ambari.server.audit.AuditLogger: void log(org.apache.ambari.server.audit.event.AuditEvent)>(r4)
