org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(4L) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createClusterAdministrator(java.lang.String,java.lang.Long)>("clusterAdmin", $r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createClusterAdministrator(java.lang.String,java.lang.Long)>("clusterAdmin", $r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r2 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createClusterAdministratorGrantedAuthority(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r1 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createClusterAdministratorPrivilegeEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r1 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createClusterResourceEntity(java.lang.Long)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r1 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createResourceEntity(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long)>($r1, r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : r3 = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>(r0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceEntity : return r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterResourceEntity : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createClusterAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r4 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r5 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r6 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CREDENTIALS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38]
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7 = newarray (org.apache.ambari.server.security.authorization.RoleAuthorization)[38] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r2 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[0] = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r8 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r8
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[1] = $r8 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r9 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r9
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[2] = $r9 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r10 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r10
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[3] = $r10 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r11 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r11
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[4] = $r11 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r12 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r12
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[5] = $r12 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r13 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r13
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[6] = $r13 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r14 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r14
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[7] = $r14 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r15 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r15
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[8] = $r15 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r16 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STACK_DETAILS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r16
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[9] = $r16 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r17 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r17
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[10] = $r17 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r18 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_COMPONENTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r18
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[11] = $r18 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r19
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[12] = $r19 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r20 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r20
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[13] = $r20 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r21 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r21
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[14] = $r21 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r22 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r22
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[15] = $r22 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r23
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[16] = $r23 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r24 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ADD_DELETE_SERVICES> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r24
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[17] = $r24 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r25 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_COMPARE_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r25
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[18] = $r25 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r26 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_DECOMMISSION_RECOMMISSION> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r26
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[19] = $r26 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_ENABLE_HA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r27
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[20] = $r27 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r28 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r28
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[21] = $r28 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r29 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MODIFY_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r29
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[22] = $r29 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r30 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MOVE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r30
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[23] = $r30 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r31
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[24] = $r31 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r32 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_RUN_SERVICE_CHECK> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r32
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[25] = $r32 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r33 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r33
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[26] = $r33 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r34 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r34
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[27] = $r34 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r35 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r35
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[28] = $r35 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r36 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_ALERTS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r36
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[29] = $r36 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r37 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_CONFIGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r37
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[30] = $r37 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r38 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r38
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[31] = $r38 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r39 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_STATUS_INFO> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r39
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[32] = $r39 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r40 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_OPERATIONAL_LOGS> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r40
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[33] = $r40 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r41 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_RUN_CUSTOM_COMMAND> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r41
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[34] = $r41 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r42 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r42
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[35] = $r42 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_AUTO_START> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r43
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[36] = $r43 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA>
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r44 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_USER_PERSISTED_DATA> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r44
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r7[37] = $r44 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r6, $r7)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r45 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>($r6, $r7) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r45)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : $r46 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r45) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r46)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r46) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPermission : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorPrivilegeEntity : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : specialinvoke $r1.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministratorGrantedAuthority : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : specialinvoke $r2.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r4, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createClusterAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r2 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r26
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r2 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r26 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r27
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.state.Clusters) $r28
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.state.Clusters) $r28 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r29 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Cluster) $r29
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r5 = (org.apache.ambari.server.state.Cluster) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Service) $r30
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r6 = (org.apache.ambari.server.state.Service) $r30 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.state.ServiceFactory) $r31
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r7 = (org.apache.ambari.server.state.ServiceFactory) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r32
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r8 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r33
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r9 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.controller.RequestStatusResponse) $r34
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r10 = (org.apache.ambari.server.controller.RequestStatusResponse) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrder")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrder") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r35
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r11 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.StackId) $r36
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r12 = (org.apache.ambari.server.state.StackId) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.state.ServiceInfo) $r37
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r13 = (org.apache.ambari.server.state.ServiceInfo) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r38 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r38 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : specialinvoke $r38.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : specialinvoke $r38.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r14 = $r38
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r14 = $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r40 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r40 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r44 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r44 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $l0 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r55 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r55.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r57 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r57 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r60 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r60 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r61 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r62 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r62 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r63 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r63 = interfaceinvoke $r61.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r65 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r65 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r66 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r67 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r67 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r68 = interfaceinvoke $r66.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r67) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r70 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r70 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP-2.5")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP-2.5") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r74 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r74 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r78 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r78 = virtualinvoke r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.5")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.5") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r82 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r84 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r84.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r86 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r87 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r86)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r87 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r88 = interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r88 = interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z2 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z2 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r91 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r92 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r92 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r93 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r93 = interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r92) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z3 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z3 = virtualinvoke r13.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r95 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r95 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r97 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r97 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r98 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r97)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r98 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r97) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r98.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r100 = virtualinvoke r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.5", "Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r100 = virtualinvoke r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.5", "Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r101 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r100)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r101 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r100) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r102 = interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r102 = interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r102.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r15 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r15 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r16 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r16 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r17 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r17 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r18 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r18 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r19 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r19 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r104 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r104 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r105 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r104
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r105 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r104 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r106 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r106 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r107 = (org.apache.ambari.server.state.Cluster) $r106
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r107 = (org.apache.ambari.server.state.Cluster) $r106 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r15)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r108 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r15) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r109 = (java.util.Map) $r108
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r109 = (java.util.Map) $r108 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r110 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r111 = (java.util.Map) $r110
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r111 = (java.util.Map) $r110 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r16)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r112 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r113 = (java.util.Map) $r112
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r113 = (java.util.Map) $r112 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r114 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r17)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r114 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r17) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r115 = (java.util.Map) $r114
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r115 = (java.util.Map) $r114 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r116 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r116 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r117 = (java.util.Map) $r116
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r117 = (java.util.Map) $r116 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r118 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r118 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r119 = (java.util.Collection) $r118
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r119 = (java.util.Collection) $r118 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z0 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z0 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r120 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r105, $r107, $r109, $r111, $r113, $r115, $r117, $r119, $z0, $z1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r120 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r105, $r107, $r109, $r111, $r113, $r115, $r117, $r119, $z0, $z1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r121 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r120) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r121.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : virtualinvoke r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : virtualinvoke r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r123 = virtualinvoke r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r123 = virtualinvoke r9.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r124 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r126 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource$Type")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r126 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource$Type") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r127 = (org.apache.ambari.server.controller.spi.Resource$Type) $r126
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r127 = (org.apache.ambari.server.controller.spi.Resource$Type) $r126 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r128 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r128 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r129 = (org.apache.ambari.server.state.Service) $r128
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r129 = (org.apache.ambari.server.state.Service) $r128 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z4 = virtualinvoke r2.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r127, $r129)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $z4 = virtualinvoke r2.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r127, $r129) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r133 = interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r133 = interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r133.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r133.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r135 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r135 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r136 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r135) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r137 = interfaceinvoke $r136.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r139 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r139 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r143 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r143 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r144 = (org.apache.ambari.server.state.Service) $r143
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r144 = (org.apache.ambari.server.state.Service) $r143 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r145 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r145 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r146 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r145)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r146 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r147 = (org.apache.ambari.server.RoleCommand) $r146
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r147 = (org.apache.ambari.server.RoleCommand) $r146 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r148 = virtualinvoke r11.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>($r144, $r147)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r148 = virtualinvoke r11.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>($r144, $r147) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r149 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r148) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r150 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r150 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r151 = interfaceinvoke $r149.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r150) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r151.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153 = newarray (java.lang.Object)[12]
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153 = newarray (java.lang.Object)[12] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[0] = r3
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[0] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[1] = r4
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[1] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[2] = r5
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[2] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[3] = r11
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[3] = r11 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[4] = r2
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[4] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[5] = r6
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[5] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[6] = r7
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[6] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[7] = r8
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[7] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[8] = r9
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[8] = r9 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[9] = r10
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[9] = r10 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[10] = r12
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[10] = r12 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[11] = r13
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r153[11] = r13 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r153)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r153) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r154 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : $r154 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r154.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : interfaceinvoke $r154.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r22 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceProvider(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.controller.MaintenanceStateHelper)>(r3, r2)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testUpdateResources : r22 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceProvider(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.controller.MaintenanceStateHelper)>(r3, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r3 = new org.apache.ambari.server.controller.internal.ServiceResourceProvider
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r3 = new org.apache.ambari.server.controller.internal.ServiceResourceProvider >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r4 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
