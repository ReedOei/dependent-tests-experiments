org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createAdministrator(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization")
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r2 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r31
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r2 = (org.apache.ambari.server.controller.MaintenanceStateHelper) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r32
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r33
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r4 = (org.apache.ambari.server.controller.AmbariManagementController) $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r5 = (org.apache.ambari.server.state.Clusters) $r34
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r5 = (org.apache.ambari.server.state.Clusters) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r6 = (org.apache.ambari.server.state.Cluster) $r35
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r6 = (org.apache.ambari.server.state.Cluster) $r35 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r7 = (org.apache.ambari.server.state.Service) $r36
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r7 = (org.apache.ambari.server.state.Service) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ServiceResponse")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ServiceResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r8 = (org.apache.ambari.server.controller.ServiceResponse) $r37
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r8 = (org.apache.ambari.server.controller.ServiceResponse) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r38 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r9 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r38
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r9 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r38 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r10 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r39
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r10 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r40 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r11 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r40
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r11 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r41 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r12 = (org.apache.ambari.server.controller.RequestStatusResponse) $r41
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r12 = (org.apache.ambari.server.controller.RequestStatusResponse) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r13 = (org.apache.ambari.server.controller.RequestStatusResponse) $r42
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r13 = (org.apache.ambari.server.controller.RequestStatusResponse) $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrder")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/metadata/RoleCommandOrder") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r14 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r43
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r14 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r43 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/StackId") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r15 = (org.apache.ambari.server.state.StackId) $r44
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r15 = (org.apache.ambari.server.state.StackId) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r16 = (org.apache.ambari.server.state.ServiceInfo) $r45
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r16 = (org.apache.ambari.server.state.ServiceInfo) $r45 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r46 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r46 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : specialinvoke $r46.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : specialinvoke $r46.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r17 = $r46
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r17 = $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r49 = (java.util.Set) $r48
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r49 = (java.util.Set) $r48 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r50 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r49)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r50 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r51 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r50) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r52 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r52 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r53 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r53 = interfaceinvoke $r51.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r55 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r56 = (java.util.Set) $r55
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r56 = (java.util.Set) $r55 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r57 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r56)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r57 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getHostComponents(java.util.Set)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r58 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r59 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r59 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r60 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r59)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r60 = interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r60.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r62 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r62 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r64 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r64.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r66 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r66 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r67 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r68 = interfaceinvoke $r67.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r68.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r70 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r70 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r71 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r72 = interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r72.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r74 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r74 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r76 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r76.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r78 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r78 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r79 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r80 = interfaceinvoke $r79.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r82 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r82 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r83 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r84 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r84 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r85 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r84)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r85 = interfaceinvoke $r83.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r87 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r87 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>("Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r88 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r89 = interfaceinvoke $r88.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r89.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r91 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r91 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r92 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r91) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP-2.5")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r93 = interfaceinvoke $r92.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP-2.5") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r93.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r95 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r95 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r96 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r97 = interfaceinvoke $r96.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("HDP") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r97.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r99 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r99 = virtualinvoke r15.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r100 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r99) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.5")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r101 = interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("2.5") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r101.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r103 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r103 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r105 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r15)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r105 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r15) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r105.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r107 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r107 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r108 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r107) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r109 = interfaceinvoke $r108.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r109.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z2 = virtualinvoke r16.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z2 = virtualinvoke r16.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r111 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r111 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r112 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r114 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r113)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r114 = interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r113) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r114.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z3 = virtualinvoke r16.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z3 = virtualinvoke r16.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r116 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r116 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r117 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r116)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r117 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r116) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r118 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r118 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r119 = interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r118)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r119 = interfaceinvoke $r117.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r118) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r119.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r121 = virtualinvoke r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.5", "Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r121 = virtualinvoke r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>("HDP", "2.5", "Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r123 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r123 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r123.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r125 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r125 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.controller.ServiceResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r126 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r125)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r126 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r125) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r127 = interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r127 = interfaceinvoke $r126.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r129 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r129 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r130 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r129) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r131 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r131 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r132 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r131)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r132 = interfaceinvoke $r130.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r131) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r132.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r134 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r134 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r135 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r134)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r135 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r134) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r136 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r136 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r137 = interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r136)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r137 = interfaceinvoke $r135.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r136) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r137.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r139 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceResponse: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r139 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceResponse: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Cluster100") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r143 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceResponse: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r143 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceResponse: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r145 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r145 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Service102") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r145.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r145.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r18 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r18 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r19 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r19 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r20 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r21 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r22 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r22 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r23 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r23 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r24 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r24 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r147 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r147 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r148 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r147
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r148 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r147 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r149 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r149 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r150 = (org.apache.ambari.server.state.Cluster) $r149
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r150 = (org.apache.ambari.server.state.Cluster) $r149 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r151 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r151 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r152 = (java.util.Map) $r151
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r152 = (java.util.Map) $r151 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r153 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r154 = (java.util.Map) $r153
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r154 = (java.util.Map) $r153 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r155 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r155 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r156 = (java.util.Map) $r155
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r156 = (java.util.Map) $r155 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r157 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r157 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r158 = (java.util.Map) $r157
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r158 = (java.util.Map) $r157 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r159 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r159 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r160 = (java.util.Map) $r159
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r160 = (java.util.Map) $r159 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r161 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r161 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r162 = (java.util.Collection) $r161
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r162 = (java.util.Collection) $r161 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z0 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z0 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z1 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r163 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r148, $r150, $r152, $r154, $r156, $r158, $r160, $r162, $z0, $z1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r163 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r148, $r150, $r152, $r154, $r156, $r158, $r160, $r162, $z0, $z1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r164 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r163) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r164.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r166 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r166 = staticinvoke <org.easymock.EasyMock: java.lang.Object isNull()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r167 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r166
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r167 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r166 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r168 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r168 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r169 = (org.apache.ambari.server.state.Cluster) $r168
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r169 = (org.apache.ambari.server.state.Cluster) $r168 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r170 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r18) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r171 = (java.util.Map) $r170
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r171 = (java.util.Map) $r170 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r172 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r173 = (java.util.Map) $r172
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r173 = (java.util.Map) $r172 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r174 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r174 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r19) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r175 = (java.util.Map) $r174
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r175 = (java.util.Map) $r174 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r176 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r176 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r177 = (java.util.Map) $r176
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r177 = (java.util.Map) $r176 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r178 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r178 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r179 = (java.util.Map) $r178
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r179 = (java.util.Map) $r178 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r180 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r180 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r181 = (java.util.Collection) $r180
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r181 = (java.util.Collection) $r180 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z4 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z4 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z5 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z5 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r182 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r167, $r169, $r171, $r173, $r175, $r177, $r179, $r181, $z4, $z5)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r182 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>($r167, $r169, $r171, $r173, $r175, $r177, $r179, $r181, $z4, $z5) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r183 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r182)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r183 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r182) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r183.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r183.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : virtualinvoke r10.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : virtualinvoke r10.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r185 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r185 = virtualinvoke r10.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r186 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r185)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r186 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r185) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r186.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r186.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : virtualinvoke r11.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : virtualinvoke r11.<org.apache.ambari.server.controller.internal.RequestStageContainer: void persist()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r188 = virtualinvoke r11.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r188 = virtualinvoke r11.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r189 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r188)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r189 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r188) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r189.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r189.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource$Type")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/Resource$Type") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r192 = (org.apache.ambari.server.controller.spi.Resource$Type) $r191
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r192 = (org.apache.ambari.server.controller.spi.Resource$Type) $r191 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r193 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r193 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r194 = (org.apache.ambari.server.state.Service) $r193
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r194 = (org.apache.ambari.server.state.Service) $r193 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z6 = virtualinvoke r2.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r192, $r194)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $z6 = virtualinvoke r2.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>($r192, $r194) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r195 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r195 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r196 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r195)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r196 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r195) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r197 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r197 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r198 = interfaceinvoke $r196.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r197)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r198 = interfaceinvoke $r196.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r197) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r198.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r198.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r200 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r200 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r202 = interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r202 = interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r202.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r204 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r204 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r205 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r204)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r205 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r204) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r206 = interfaceinvoke $r205.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r206 = interfaceinvoke $r205.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r208 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r6)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r208 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r210 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r210 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r210.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r210.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r212 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r212 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r213 = (org.apache.ambari.server.state.Service) $r212
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r213 = (org.apache.ambari.server.state.Service) $r212 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r214 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r214 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r215 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r214)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r215 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>($r214) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r216 = (org.apache.ambari.server.RoleCommand) $r215
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r216 = (org.apache.ambari.server.RoleCommand) $r215 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r217 = virtualinvoke r14.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>($r213, $r216)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r217 = virtualinvoke r14.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>($r213, $r216) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r218 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r217)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r218 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r217) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r219 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r219 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r220 = interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r219)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r220 = interfaceinvoke $r218.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r219) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r220.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222 = newarray (java.lang.Object)[15]
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222 = newarray (java.lang.Object)[15] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[0] = r3
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[0] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[1] = r12
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[1] = r12 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[2] = r4
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[2] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[3] = r10
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[3] = r10 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[4] = r11
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[4] = r11 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[5] = r13
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[5] = r13 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[6] = r5
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[6] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[7] = r6
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[7] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[8] = r7
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[8] = r7 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[9] = r8
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[9] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[10] = r9
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[10] = r9 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[11] = r14
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[11] = r14 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[12] = r2
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[12] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[13] = r15
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[13] = r15 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[14] = r16
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r222[14] = r16 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r222)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r222) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r223 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : $r223 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r223.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : interfaceinvoke $r223.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r25 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceProvider(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.controller.MaintenanceStateHelper)>(r3, r2)
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.testReconfigureClientsFlag : r25 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceProvider(org.apache.ambari.server.controller.AmbariManagementController,org.apache.ambari.server.controller.MaintenanceStateHelper)>(r3, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r3 = new org.apache.ambari.server.controller.internal.ServiceResourceProvider
org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r3 = new org.apache.ambari.server.controller.internal.ServiceResourceProvider >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProviderTest.getServiceProvider : $r4 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
