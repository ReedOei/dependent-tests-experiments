org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: org.apache.ambari.server.api.services.AmbariMetaInfo access$100(org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest)>($r3)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: org.apache.ambari.server.api.services.AmbariMetaInfo access$100(org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: org.apache.ambari.server.api.services.AmbariMetaInfo m_ambariMetaInfoMock>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: org.apache.ambari.server.api.services.AmbariMetaInfo m_ambariMetaInfoMock> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest.access$100 : return $r1
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r6 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r6 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r7 = virtualinvoke $r6.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r8 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r9 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r9 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r10 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r10 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r11 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r12 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r12 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r13 = virtualinvoke $r12.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r13 = virtualinvoke $r12.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r14 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r15 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r15 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r16 = virtualinvoke $r15.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r16 = virtualinvoke $r15.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r17 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r17 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r18 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r18 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r20 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r20 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r21 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r21 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/HostRoleCommandDAO") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r20.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r20.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r24 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r24 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r25 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r25 = virtualinvoke $r24.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r26 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r26 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r27 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r27 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r28 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r28 = virtualinvoke $r27.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/spi/ClusterController") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r26.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r26.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r30 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r30 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r31 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r31 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackManagerFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r33 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r33 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r34 = virtualinvoke $r33.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r34 = virtualinvoke $r33.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/eclipse/jetty/server/SessionManager") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r35 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r35 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r36 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r36 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r37 = virtualinvoke $r36.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r37 = virtualinvoke $r36.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/scheduler/RequestExecutionFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r35.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r37)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r35.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r38 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r38 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r39 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r39 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/scheduler/ExecutionScheduler") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r38.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r40)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r38.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r41 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r42 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r42 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/RequestFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r43)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r41.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r44 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r44 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r45 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r45 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r46 = virtualinvoke $r45.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r46 = virtualinvoke $r45.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/StageFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r46)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r44.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r47 = new com.google.inject.assistedinject.FactoryModuleBuilder
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r47 = new com.google.inject.assistedinject.FactoryModuleBuilder >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : specialinvoke $r47.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : specialinvoke $r47.<com.google.inject.assistedinject.FactoryModuleBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r48 = virtualinvoke $r47.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r48 = virtualinvoke $r47.<com.google.inject.assistedinject.FactoryModuleBuilder: com.google.inject.Module build(java.lang.Class)>(class "org/apache/ambari/server/stageplanner/RoleGraphFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r48)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void install(com.google.inject.Module)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r49 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r50 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r50 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r51 = virtualinvoke $r50.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AbstractRootServiceResponseFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r49.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r52 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r52 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r53 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r53 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r52.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r55 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r55 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r56 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r56 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/configgroup/ConfigGroupFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r55.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r55.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r58 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r58 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r59 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r59 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r60 = virtualinvoke $r59.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r60 = virtualinvoke $r59.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r58.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r60)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r58.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r60) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r61 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r61 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r62 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r62 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r63 = virtualinvoke $r62.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r63 = virtualinvoke $r62.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r61.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r63)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r61.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r63) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r64 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r64 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r65 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r65 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r66 = virtualinvoke $r65.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r66 = virtualinvoke $r65.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceComponentHostFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r64.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r64.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r67 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r67 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r68 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r68 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r69 = virtualinvoke $r68.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r69 = virtualinvoke $r68.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/crypto/password/PasswordEncoder") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r67.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r67.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r70 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r70 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r71 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r71 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r72 = virtualinvoke $r71.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r72 = virtualinvoke $r71.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r70.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r72)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r70.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r73 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r73 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r74 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r74 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r75 = virtualinvoke $r74.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r75 = virtualinvoke $r74.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r73.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r75)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r73.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r76 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r76 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r77 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r77 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r78 = virtualinvoke $r77.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r78 = virtualinvoke $r77.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/ConfigHelper") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r76.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r76.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r79 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r79 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r80 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r80 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r81 = virtualinvoke $r80.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r81 = virtualinvoke $r80.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RepositoryVersionDAO") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r79.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r81)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r79.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r82 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r82 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r83 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r83 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r84 = virtualinvoke $r83.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r84 = virtualinvoke $r83.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookContextFactory") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r82.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r84)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r82.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r85 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r85 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r86 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0>
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r86 = r0.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule: org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r87 = virtualinvoke $r86.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService")
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r87 = virtualinvoke $r86.<org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/hooks/HookService") >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r85.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r87)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke $r85.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r87) >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r88 = newarray (java.lang.Class)[1]
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r88 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r88[0] = class "org/apache/ambari/server/controller/internal/UpgradeResourceProvider"
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : $r88[0] = class "org/apache/ambari/server/controller/internal/UpgradeResourceProvider" >>>>>>>> org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void requestStaticInjection(java.lang.Class[])>($r88)
org.apache.ambari.server.controller.internal.StackUpgradeConfigurationMergeTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: void requestStaticInjection(java.lang.Class[])>($r88) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75 >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/WidgetLayoutDAO")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/WidgetLayoutDAO") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r3 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetLayoutDAO access$100(org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest)>($r3)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r4 = staticinvoke <org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetLayoutDAO access$100(org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetLayoutDAO dao>
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$100 : $r1 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetLayoutDAO dao> >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$100 : return $r1
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$100 : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r5 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r6 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/ActionMetadata")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/metadata/ActionMetadata") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/WidgetDAO")
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r10 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/WidgetDAO") >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest this$0>
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r11 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule: org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest this$0> >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetDAO access$200(org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest)>($r11)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : $r12 = staticinvoke <org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetDAO access$200(org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$200 : $r1 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetDAO widgetDAO>
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$200 : $r1 = r0.<org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest: org.apache.ambari.server.orm.dao.WidgetDAO widgetDAO> >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$200 : return $r1
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.WidgetLayoutResourceProviderTest$MockModule.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1
org.apache.ambari.server.controller.StackRequest.setStackName : r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1
org.apache.ambari.server.controller.StackVersionRequest.setStackVersion : r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1
org.apache.ambari.server.controller.StackServiceRequest.setServiceName : r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r2 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r3 = $r2
org.apache.ambari.server.controller.internal.Stack.parseComponents : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r11 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r11 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r12 = new org.apache.ambari.server.controller.StackServiceComponentRequest
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r12 = new org.apache.ambari.server.controller.StackServiceComponentRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r13 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r13 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r14 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r12.<org.apache.ambari.server.controller.StackServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, r1, null)
org.apache.ambari.server.controller.internal.Stack.parseComponents : specialinvoke $r12.<org.apache.ambari.server.controller.StackServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, r1, null) >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.setComponentName : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> = r1
org.apache.ambari.server.controller.StackServiceComponentRequest.setComponentName : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> = r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.setRecoveryEnabled : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String recoveryEnabled> = r1
org.apache.ambari.server.controller.StackServiceComponentRequest.setRecoveryEnabled : r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String recoveryEnabled> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r15 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r15 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackComponents(java.util.Set)>($r15)
org.apache.ambari.server.controller.internal.Stack.parseComponents : r4 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackComponents(java.util.Set)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r6 = (org.apache.ambari.server.controller.StackServiceComponentResponse) $r16
org.apache.ambari.server.controller.internal.Stack.parseComponents : r6 = (org.apache.ambari.server.controller.StackServiceComponentResponse) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r7 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r7 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map componentService>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map componentService> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r1)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r8 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getCardinality()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r8 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r8 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r9 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : r9 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r9 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r23 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r23 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r24 = interfaceinvoke $r23.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r25 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r25 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r26 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r26 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : r10 = virtualinvoke $r24.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List getComponentDependencies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r25, $r26, r1, r7)
org.apache.ambari.server.controller.internal.Stack.parseComponents : r10 = virtualinvoke $r24.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.List getComponentDependencies(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r25, $r26, r1, r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if r10 == null
org.apache.ambari.server.controller.internal.Stack.parseComponents : if r10 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z2 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z2 = interfaceinvoke r10.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z2 != 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $z3 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: boolean isMaster()>()
org.apache.ambari.server.controller.internal.Stack.parseComponents : $z3 = virtualinvoke r6.<org.apache.ambari.server.controller.StackServiceComponentResponse: boolean isMaster()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z3 == 0
org.apache.ambari.server.controller.internal.Stack.parseComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.parseComponents : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : $r30 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceComponents>
org.apache.ambari.server.controller.internal.Stack.parseComponents : $r30 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceComponents> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.controller.internal.Stack.parseComponents : interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r3 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Set getExcludedConfigTypes()>()
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : $r4 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Set getExcludedConfigTypes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4)
org.apache.ambari.server.controller.internal.Stack.parseExcludedConfigurations : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r13 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r13 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r13.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r13.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r3 = $r13
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r3 = $r13 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r14 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r14 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r4 = $r14
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r4 = $r14 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r17 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r19 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r19 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r20 = new org.apache.ambari.server.controller.StackConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r20 = new org.apache.ambari.server.controller.StackConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r21 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r22 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r22 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r20.<org.apache.ambari.server.controller.StackConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r21, $r22, r2, null)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r20.<org.apache.ambari.server.controller.StackConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r21, $r22, r2, null) >>>>>>>> org.apache.ambari.server.controller.StackConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r23 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r5 = interfaceinvoke $r19.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackConfigurations(java.util.Set)>($r23)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r5 = interfaceinvoke $r19.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackConfigurations(java.util.Set)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r24 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r24 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r25 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r25 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r26 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r26 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r27 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r27 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r25.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, null)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r25.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r26, $r27, null) >>>>>>>> org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1
org.apache.ambari.server.controller.StackLevelConfigurationRequest.setPropertyName : r0.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: java.lang.String propertyName> = r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r25)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r28 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r6 = interfaceinvoke $r24.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r28)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r6 = interfaceinvoke $r24.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r6)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r29 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r29 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r8 = (org.apache.ambari.server.controller.StackConfigurationResponse) $r29
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r8 = (org.apache.ambari.server.controller.StackConfigurationResponse) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r30 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r30 = new org.apache.ambari.server.controller.internal.Stack$ConfigProperty >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r30.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>(r8)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r30.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: void <init>(org.apache.ambari.server.controller.StackConfigurationResponse)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml")
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r9 = $r30
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r9 = $r30 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r10 = virtualinvoke r9.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r10 = virtualinvoke r9.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String type>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String type> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getType : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r31 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r31 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r11 = (java.util.Map) $r31
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r11 = (java.util.Map) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r11 != null
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r11 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r32 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r32 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r32.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r32.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r11 = $r32
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r11 = $r32 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r11)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r11) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r34 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r34 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r36 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r36 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.Boolean isRequired()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z2 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z2 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z2 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r37 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r37 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r12 = (java.util.Map) $r37
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r12 = (java.util.Map) $r37 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r12 != null
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if r12 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r38 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r38 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r38.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : specialinvoke $r38.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r12 = $r38
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r12 = $r38 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r12) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r40 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r40 = virtualinvoke r8.<org.apache.ambari.server.controller.StackConfigurationResponse: java.lang.String getPropertyName()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, r9)
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r42 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map getConfigTypes()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $r42 = virtualinvoke r1.<org.apache.ambari.server.controller.StackServiceResponse: java.util.Map getConfigTypes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r43 = interfaceinvoke $r42.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = interfaceinvoke r43.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : r44 = interfaceinvoke r43.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z3 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : $z3 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z3 == 0
org.apache.ambari.server.controller.internal.Stack.parseConfigurations : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo>
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map dbDependencyInfo> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database")
org.apache.ambari.server.controller.internal.Stack.registerConditionalDependencies : interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MYSQL_SERVER", "global/hive_database") >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r1 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r1 = new org.apache.ambari.server.controller.StackLevelConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r9 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version>
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r10 = r0.<org.apache.ambari.server.controller.internal.Stack: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r1.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, null)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : specialinvoke $r1.<org.apache.ambari.server.controller.StackLevelConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, null) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r11 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $r11 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r11)
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.util.Set getStackLevelConfigurations(java.util.Set)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.parseStackConfigurations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r2 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r3 = $r2
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r17 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r4 = $r17
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r4 = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r6 = (java.lang.String) $r18
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r6 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getConfigurationTypes(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getConfigurationTypes(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r2 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r4 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r4 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r6 = (java.util.Map) $r5
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r6 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r7)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : r3 = $r2
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Set getExcludedConfigurationTypes(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Set getExcludedConfigurationTypes(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r2 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r3 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes>
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r3 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map excludedConfigurationTypes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r5 = (java.util.Set) $r4
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : $r5 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : goto [?= return $r5]
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : return $r5
org.apache.ambari.server.controller.internal.Stack.getExcludedConfigurationTypes : return $r5 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r8)
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : return r3
org.apache.ambari.server.controller.internal.Stack.getConfigurationTypes : return r3 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r8 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r8 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r9 = (java.lang.String) $r19
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r9 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r20 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r20 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r10 = (java.util.Map) $r20
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r10 = (java.util.Map) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if r10 != null
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if r10 != null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r21 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r10 = $r21
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r10 = $r21 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationProperties(java.lang.String,java.lang.String)>(r6, r9)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r23 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationProperties(java.lang.String,java.lang.String)>(r6, r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r3 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r4 = $r3
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r4 = $r3 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r8 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r10 = (java.util.Map) $r9
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r5 = (java.util.Map) $r11
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r5 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if r5 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r12 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r12 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r7 = (java.util.Map$Entry) $r13
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : r7 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r16 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r15
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r16 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : $r17 = virtualinvoke $r16.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String value>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.lang.String value> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getValue : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17)
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : return r4
org.apache.ambari.server.controller.internal.Stack.getConfigurationProperties : return r4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r10.<java.util.Map: void putAll(java.util.Map)>($r23)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : interfaceinvoke r10.<java.util.Map: void putAll(java.util.Map)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationAttributes(java.lang.String,java.lang.String)>(r6, r9)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map getConfigurationAttributes(java.lang.String,java.lang.String)>(r6, r9) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r3 = new java.util.HashMap
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r4 = $r3
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r4 = $r3 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r15 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map serviceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r17 = (java.util.Map) $r16
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r17 = (java.util.Map) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r5 = (java.util.Map) $r18
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r5 = (java.util.Map) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r5 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r19 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r6 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r6 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r20 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r7 = (java.util.Map$Entry) $r20
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r7 = (java.util.Map$Entry) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r21 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r8 = (java.lang.String) $r21
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r8 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r22 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r22 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r23 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r22
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r23 = (org.apache.ambari.server.controller.internal.Stack$ConfigProperty) $r22 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r9 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map getAttributes()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r9 = virtualinvoke $r23.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map getAttributes()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map attributes>
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : $r1 = r0.<org.apache.ambari.server.controller.internal.Stack$ConfigProperty: java.util.Map attributes> >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : return $r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.getAttributes : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r9 == null
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r24 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $r24 = interfaceinvoke r9.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r10 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : r10 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z1 == 0
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : return r4
org.apache.ambari.server.controller.internal.Stack.getConfigurationAttributes : return r4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z2 = interfaceinvoke r11.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $z2 = interfaceinvoke r11.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z2 != 0
org.apache.ambari.server.controller.internal.Stack.getConfiguration : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getConfiguration : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r35 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.Stack.getConfiguration : $r35 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r35.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>(r4, r3)
org.apache.ambari.server.controller.internal.Stack.getConfiguration : specialinvoke $r35.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>(r4, r3) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getConfiguration : return $r35
org.apache.ambari.server.controller.internal.Stack.getConfiguration : return $r35 >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r2 = new java.util.HashSet
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r3 = $r2
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations>
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r7 = r0.<org.apache.ambari.server.controller.internal.Stack: java.util.Map requiredServiceConfigurations> >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r4 = (java.util.Map) $r8
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r4 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if r4 == null
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r9 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r5 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r5 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r6 = (java.util.Map$Entry) $r10
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : r6 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r12 = (java.util.Map) $r11
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r12 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r13)
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : return r3
org.apache.ambari.server.controller.internal.Stack.getRequiredConfigurationProperties : return r3 >>>>>>>> org.apache.ambari.server.controller.StackRequest.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName>
org.apache.ambari.server.controller.StackRequest.getStackName : $r1 = r0.<org.apache.ambari.server.controller.StackRequest: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.controller.StackRequest.getStackName : return $r1
org.apache.ambari.server.controller.StackRequest.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion>
org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : $r1 = r0.<org.apache.ambari.server.controller.StackVersionRequest: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : return $r1
org.apache.ambari.server.controller.StackVersionRequest.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.getServiceName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName>
org.apache.ambari.server.controller.StackServiceRequest.getServiceName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceRequest: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.controller.StackServiceRequest.getServiceName : return $r1
org.apache.ambari.server.controller.StackServiceRequest.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName>
org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : $r1 = r0.<org.apache.ambari.server.controller.StackServiceComponentRequest: java.lang.String componentName> >>>>>>>> org.apache.ambari.server.controller.StackServiceComponentRequest.getComponentName : return $r1
