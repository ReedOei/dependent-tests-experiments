org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/checks/UpgradeCheck")
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/apache/ambari/server/checks/UpgradeCheck") >>>>>>>> org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r0 = <org.apache.ambari.server.checks.UpgradeCheckGroup: org.apache.ambari.server.checks.UpgradeCheckGroup[] $VALUES>
org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r0 = <org.apache.ambari.server.checks.UpgradeCheckGroup: org.apache.ambari.server.checks.UpgradeCheckGroup[] $VALUES> >>>>>>>> org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r2 = (org.apache.ambari.server.checks.UpgradeCheckGroup[]) $r1
org.apache.ambari.server.checks.UpgradeCheckGroup.values : $r2 = (org.apache.ambari.server.checks.UpgradeCheckGroup[]) $r1 >>>>>>>> org.apache.ambari.server.checks.UpgradeCheckGroup.values : return $r2
org.apache.ambari.server.checks.UpgradeCheckGroup.values : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r0 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType[] $VALUES>
org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r0 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType[] $VALUES> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r2 = (org.apache.ambari.server.state.stack.upgrade.UpgradeType[]) $r1
org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : $r2 = (org.apache.ambari.server.state.stack.upgrade.UpgradeType[]) $r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : return $r2
org.apache.ambari.server.state.stack.upgrade.UpgradeType.values : return $r2 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : $r7 = (org.apache.ambari.server.checks.UpgradeCheck) $r6
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : $r7 = (org.apache.ambari.server.checks.UpgradeCheck) $r6 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r2 = interfaceinvoke $r7.<org.apache.ambari.server.checks.UpgradeCheck: org.apache.ambari.server.state.stack.upgrade.UpgradeType[] required()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r2 = interfaceinvoke $r7.<org.apache.ambari.server.checks.UpgradeCheck: org.apache.ambari.server.state.stack.upgrade.UpgradeType[] required()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r3 = r2
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r3 = r2 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i0 = lengthof r3
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i1 = 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : if i1 >= i0
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : if i1 >= i0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r4 = r3[i1]
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : if r1 != r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : if r1 != r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : return 1
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : return 1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i1 = i1 + 1
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : goto [?= (branch)]
org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isRequired : return 0
