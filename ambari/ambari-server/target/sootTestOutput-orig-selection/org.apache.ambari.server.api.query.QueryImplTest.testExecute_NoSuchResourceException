org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> = r1
org.apache.ambari.server.api.query.QueryImpl.setRenderer : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> = r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.setRenderer : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : interfaceinvoke r1.<org.apache.ambari.server.api.query.render.Renderer: void init(org.apache.ambari.server.controller.spi.SchemaFactory)>($r2)
org.apache.ambari.server.api.query.QueryImpl.setRenderer : interfaceinvoke r1.<org.apache.ambari.server.api.query.render.Renderer: void init(org.apache.ambari.server.controller.spi.SchemaFactory)>($r2) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1
org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.execute : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void queryForResources()>()
org.apache.ambari.server.api.query.QueryImpl.execute : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void queryForResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : return $r1
org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r1 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r1 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : return $r1
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r1 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2)
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : return $r1
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r15 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r15 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r16 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r15)
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r16 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r15) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if r1 != null
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if r1 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : return null
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : return null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r2 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>($r14, $r16)
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r2 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>($r14, $r16) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createInternalPredicate(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.createPredicate : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createInternalPredicate(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r10 = new java.util.HashSet
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r4 = $r10
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r4 = $r10 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r6 = (java.util.Map$Entry) $r12
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r6 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $r13 == null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $r13 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r15 = (org.apache.ambari.server.controller.spi.Resource$Type) $r14
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r15 = (org.apache.ambari.server.controller.spi.Resource$Type) $r14 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r7 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r15)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r7 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r15) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if r7 == null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if r7 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r16 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r16 = new org.apache.ambari.server.controller.predicate.EqualsPredicate >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r17 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r17 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r18 = (java.lang.Comparable) $r17
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r18 = (java.lang.Comparable) $r17 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r16.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r7, $r18)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r16.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r7, $r18) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if r1 == null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $z0 == 0
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r5 = new java.text.ParsePosition
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r5 = new java.text.ParsePosition >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>(0)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>(0) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r2 = $r5
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r2 = $r5 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r4 = virtualinvoke r3.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r4 = virtualinvoke r3.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $i0 != $i1
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r6 = null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r6 = null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : return $r6
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : return $r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i0 = specialinvoke r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: int hashCode()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i0 = specialinvoke r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : if $r1 == null
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : goto [?= return $i0]
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : goto [?= return $i0] >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : return $i0
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value> >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : if $r1 == null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value> >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : goto [?= i3 = $i1 + $i2]
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : goto [?= i3 = $i1 + $i2] >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : return i3
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : n0 = null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : n0 = null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $i0 = interfaceinvoke r4.<java.util.Set: int size()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $i0 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $i0 != 1
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $i0 != 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r19 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r19 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r21 = (org.apache.ambari.server.controller.spi.Predicate) $r20
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r21 = (org.apache.ambari.server.controller.spi.Predicate) $r20 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()]
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r27 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r27 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r28 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r28 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r29 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Predicate getAmendedPredicate(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Predicate)>(r27, r21)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r29 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Predicate getAmendedPredicate(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Predicate)>(r27, r21) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if null == r29
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if null == r29 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : return r21
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : return r21 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r3 != null
org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r3 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r2 != null
org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r2 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r4 = r3
org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r4 = r3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : goto [?= return $r4]
org.apache.ambari.server.api.query.QueryImpl.createPredicate : goto [?= return $r4] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : return $r4
org.apache.ambari.server.api.query.QueryImpl.createPredicate : return $r4 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void finalizeProperties()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void finalizeProperties()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r5 = new org.apache.ambari.server.api.query.QueryInfo
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r5 = new org.apache.ambari.server.api.query.QueryInfo >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r6 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r6 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r5.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r1, $r6)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r5.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r1, $r6) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r2 = $r5
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r2 = $r5 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r7 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r7 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r7.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r2, $r9)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r7.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r2, $r9) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r3 = $r7
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r3 = $r7 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r4 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r0, r3)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r4 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r0, r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r8 = r1.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources>
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r8 = r1.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : return r2
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : return r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $z0 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean isCollectionResource()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $z0 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean isCollectionResource()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : if $r4 != null
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : if $r4 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $z0 = 0
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $z0 = 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : return $z0
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : return $z0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.query.render.Renderer: org.apache.ambari.server.api.util.TreeNode finalizeProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r4, $z0)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.query.render.Renderer: org.apache.ambari.server.api.util.TreeNode finalizeProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r4, $z0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void mergeFinalizedProperties(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.query.QueryImpl)>($r11, r0)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void mergeFinalizedProperties(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.query.QueryImpl)>($r11, r0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r3 = (java.util.Set) $r13
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r3 = (java.util.Set) $r13 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r14 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r14 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r14.<java.util.Set: void clear()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r14.<java.util.Set: void clear()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r15 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r15 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r15.<java.util.Set: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r15.<java.util.Set: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r1 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestInfoProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestInfoProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r9)
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r9) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r2 = $r1
org.apache.ambari.server.api.query.QueryImpl.createRequest : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $r10 == null
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $r10 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $z1 = r0.<org.apache.ambari.server.api.query.QueryImpl: boolean allProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $z1 = r0.<org.apache.ambari.server.api.query.QueryImpl: boolean allProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r29 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r29 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r29.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r29.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r3 = $r29
org.apache.ambari.server.api.query.QueryImpl.createRequest : r3 = $r29 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r30 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map temporalInfoMap>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r30 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map temporalInfoMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r4 = (org.apache.ambari.server.controller.spi.TemporalInfo) $r31
org.apache.ambari.server.api.query.QueryImpl.createRequest : r4 = (org.apache.ambari.server.controller.spi.TemporalInfo) $r31 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r32 = new java.util.HashSet
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r5 = $r32
org.apache.ambari.server.api.query.QueryImpl.createRequest : r5 = $r32 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r33 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r33 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r33)
org.apache.ambari.server.api.query.QueryImpl.createRequest : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r33) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z3 == 0
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r39 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r39 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.SortRequest sortRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.SortRequest sortRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r41 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map,java.util.Map,org.apache.ambari.server.controller.spi.PageRequest,org.apache.ambari.server.controller.spi.SortRequest)>(r5, r2, r3, $r39, $r40)
