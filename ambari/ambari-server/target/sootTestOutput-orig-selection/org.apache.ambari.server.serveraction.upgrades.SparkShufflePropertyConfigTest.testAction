org.apache.ambari.server.agent.ExecutionCommand.setCommandParams : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map commandParams> = r1 >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r2 = virtualinvoke $r10.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r2 = virtualinvoke $r10.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName>
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r11 = r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r3 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r3 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if r4 != null
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r6 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r15 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("yarn.nodemanager.aux-services")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r15 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("yarn.nodemanager.aux-services") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r7 = (java.lang.String) $r15
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r7 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z0 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>("yarn.nodemanager.aux-services")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z0 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>("yarn.nodemanager.aux-services") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r16 = new java.util.ArrayList
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r17 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r17 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>($r18)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r8 = $r16
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r8 = $r16 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : goto [?= $z1 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")]
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : goto [?= $z1 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z1 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z1 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z1 != 0
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>("spark_shuffle")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>("spark_shuffle") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r8, ",")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r8, ",") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services", r9)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services", r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services.spark_shuffle.class", "org.apache.spark.network.yarn.YarnShuffleService")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services.spark_shuffle.class", "org.apache.spark.network.yarn.YarnShuffleService") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r22 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r22 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23 = newarray (java.lang.Object)[5]
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[0] = "yarn.nodemanager.aux-services"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[0] = "yarn.nodemanager.aux-services" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[1] = r7
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[1] = r7 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[2] = r9
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[2] = r9 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[3] = "org.apache.spark.network.yarn.YarnShuffleService"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[3] = "org.apache.spark.network.yarn.YarnShuffleService" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[4] = "org.apache.spark.network.yarn.YarnShuffleService"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23[4] = "org.apache.spark.network.yarn.YarnShuffleService" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set from %s to %s. %s was set to %s", $r23)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set from %s to %s. %s was set to %s", $r23) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r22, "{}", $r24, "")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r25 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r22, "{}", $r24, "") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand>
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : return $r4
org.apache.ambari.server.utils.StageUtils.getActionId : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1
org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags>
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1
org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role>
org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1
org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1
org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName>
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1
org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId>
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0
org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1
org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : return $r25
