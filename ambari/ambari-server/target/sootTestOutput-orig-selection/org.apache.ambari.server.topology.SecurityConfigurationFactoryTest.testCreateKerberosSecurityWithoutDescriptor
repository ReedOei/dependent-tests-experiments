org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : n0 = null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r7 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating security configuration from properties: {}", r1) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("security") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r8
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r2 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r2 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = (java.lang.String) $r10
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r11)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r3 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r3 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r14 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/state/SecurityType", r3)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r14 = staticinvoke <com.google.common.base.Enums: com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/state/SecurityType", r3) >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r0 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType[] $VALUES>
org.apache.ambari.server.state.SecurityType.values : $r0 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType[] $VALUES> >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.state.SecurityType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.SecurityType.values : $r2 = (org.apache.ambari.server.state.SecurityType[]) $r1
org.apache.ambari.server.state.SecurityType.values : $r2 = (org.apache.ambari.server.state.SecurityType[]) $r1 >>>>>>>> org.apache.ambari.server.state.SecurityType.values : return $r2
org.apache.ambari.server.state.SecurityType.values : return $r2 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r15 = virtualinvoke $r14.<com.google.common.base.Optional: java.lang.Object orNull()>()
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r15 = virtualinvoke $r14.<com.google.common.base.Optional: java.lang.Object orNull()>() >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r15
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r4 = (org.apache.ambari.server.state.SecurityType) $r15 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r22 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r22
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r4 != $r22 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r23 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor_reference") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = (java.lang.String) $r23
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r24)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r5 = staticinvoke <com.google.common.base.Strings: java.lang.String emptyToNull(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("kerberos_descriptor") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r5 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : n1 = null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : n1 = null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r6 == null
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : if r6 == null >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r34 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r34 = <org.apache.ambari.server.topology.SecurityConfigurationFactory: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security descriptor found in the request")
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String)>("There is no security descriptor found in the request") >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r35 = new org.apache.ambari.server.topology.SecurityConfiguration
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r35 = new org.apache.ambari.server.topology.SecurityConfiguration >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r36 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : $r36 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r35.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r36)
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : specialinvoke $r35.<org.apache.ambari.server.topology.SecurityConfiguration: void <init>(org.apache.ambari.server.state.SecurityType)>($r36) >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r32 = $r35
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : r32 = $r35 >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r32]
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : goto [?= return r32] >>>>>>>> org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r32
org.apache.ambari.server.topology.SecurityConfigurationFactory.createSecurityConfigurationFromRequest : return r32 >>>>>>>> org.apache.ambari.server.topology.SecurityConfiguration.getType : $r1 = r0.<org.apache.ambari.server.topology.SecurityConfiguration: org.apache.ambari.server.state.SecurityType type>
org.apache.ambari.server.topology.SecurityConfiguration.getType : $r1 = r0.<org.apache.ambari.server.topology.SecurityConfiguration: org.apache.ambari.server.state.SecurityType type> >>>>>>>> org.apache.ambari.server.topology.SecurityConfiguration.getType : return $r1
