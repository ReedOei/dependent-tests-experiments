org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75 >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.setCommandParams : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map commandParams> = r1
org.apache.ambari.server.agent.ExecutionCommand.setCommandParams : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map commandParams> = r1 >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.ExecutionCommand.setClusterName : r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r2 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r2 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName>
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r23 = r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r3 = interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r3 = interfaceinvoke $r23.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("admin-properties")
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("admin-properties") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r4
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r4 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r6 = "DB_FLAVOR"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r6 = "DB_FLAVOR" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r7 = "db_host"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r7 = "db_host" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r8 = "db_name"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r8 = "db_name" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r9 = "audit_db_name"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r9 = "audit_db_name" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r27 = new java.lang.StringBuilder
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r10 = $r27
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r10 = $r27 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r11 = (java.lang.String) $r29
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r11 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r11
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r11 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r34 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r34 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r34[0] = r11
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r34[0] = r11 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r35 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database type is {0}\n", $r34)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r35 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database type is {0}\n", $r34) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r37 = virtualinvoke r11.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r37 = virtualinvoke r11.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r38 = "mysql"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r38 = "mysql" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z0 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r37)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z0 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z0 != 0
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r46 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r46 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r12 = (java.lang.String) $r47
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r12 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r48 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r49 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r49 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r13 = (java.lang.String) $r49
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r13 = (java.lang.String) $r49 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r50 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r50 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r51 = interfaceinvoke $r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r51 = interfaceinvoke $r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r14 = (java.lang.String) $r51
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r14 = (java.lang.String) $r51 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r14
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r14 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r52 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r52 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r52[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r52[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r53 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database host: {0}\n", $r52)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r53 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database host: {0}\n", $r52) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r55 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r55 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r55[0] = r13
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r55[0] = r13 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r56 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database name: {0}\n", $r55)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r56 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database name: {0}\n", $r55) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r58 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r58 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r58[0] = r14
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r58[0] = r14 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r59 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Audit database name: {0}\n", $r58)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r59 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Audit database name: {0}\n", $r58) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = null
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = null
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = null
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = null
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r19 = null
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r19 = null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r67 = "mysql"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r67 = "mysql" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z2 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r37)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z2 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z2 == 0
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r13
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if null != r13 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = "com.mysql.jdbc.Driver"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = "com.mysql.jdbc.Driver" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74[1] = r13
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r74[1] = r13 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}/{1}", $r74)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}/{1}", $r74) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75[1] = r14
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r75[1] = r14 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}/{1}", $r75)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}/{1}", $r75) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = "org.eclipse.persistence.platform.database.MySQLPlatform"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = "org.eclipse.persistence.platform.database.MySQLPlatform" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r76 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r76 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r76[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r76[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r19 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}", $r76)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r19 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:mysql://{0}", $r76) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : goto [?= $r81 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : goto [?= $r81 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r81 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r81 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r81[0] = r15
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r81[0] = r15 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r82 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database driver: {0}\n", $r81)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r82 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database driver: {0}\n", $r81) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r84 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r84 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r84[0] = r16
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r84[0] = r16 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r85 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database url: {0}\n", $r84)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r85 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database url: {0}\n", $r84) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r87 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r87 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r87[0] = r18
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r87[0] = r18 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r88 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database audit url: {0}\n", $r87)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r88 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database audit url: {0}\n", $r87) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r90 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r90 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r90[0] = r17
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r90[0] = r17 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r91 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database dialect: {0}", $r90)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r91 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database dialect: {0}", $r90) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r93 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r93 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r93[0] = r19
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r93[0] = r19 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r94 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database user jdbc url: {0}", $r93)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r94 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Database user jdbc url: {0}", $r93) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r20 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-admin-site")
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r20 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-admin-site") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r21 = interfaceinvoke r20.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r21 = interfaceinvoke r20.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.driver", r15)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.driver", r15) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.url", r16)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.url", r16) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.dialect", r17)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.jdbc.dialect", r17) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.driver", r15)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.driver", r15) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.url", r18)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.url", r18) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.dialect", r17)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger.jpa.audit.jdbc.dialect", r17) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r20.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r21)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r20.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r20.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r20.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r102 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-env")
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r102 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-env") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r103 = interfaceinvoke r102.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r103 = interfaceinvoke r102.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r103.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger_privelege_user_jdbc_url", r19)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r103.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger_privelege_user_jdbc_url", r19) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r102.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r103)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r102.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r103) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r102.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : interfaceinvoke r102.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r105 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r105 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r106 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r106 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r107 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r105, "{}", $r106, "")
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r107 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r105, "{}", $r106, "") >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r7 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r7 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r8 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r8 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r11 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if $r11 == null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r12 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r13 = virtualinvoke $r12.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand>
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand roleCommand> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRoleCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r14 = new org.apache.ambari.server.agent.CommandReport >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : specialinvoke $r14.<org.apache.ambari.server.agent.CommandReport: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : r5 = $r14 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r15 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l1 = virtualinvoke $r15.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getRequestId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r16 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l2 = virtualinvoke $r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: long getStageId()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r17 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getActionId(long,long)>($l1, $l2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder
org.apache.ambari.server.utils.StageUtils.getActionId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getActionId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.utils.StageUtils.getActionId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.ambari.server.utils.StageUtils.getActionId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
org.apache.ambari.server.utils.StageUtils.getActionId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.StageUtils.getActionId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getActionId : return $r4
org.apache.ambari.server.utils.StageUtils.getActionId : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setActionId(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1
org.apache.ambari.server.agent.CommandReport.setActionId : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String actionId> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r18 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r19 = virtualinvoke $r18.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setClusterName(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1
org.apache.ambari.server.agent.CommandReport.setClusterName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String clusterName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r20 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags>
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map configurationTags> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getConfigurationTags : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setConfigurationTags(java.util.Map)>($r21) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1
org.apache.ambari.server.agent.CommandReport.setConfigurationTags : r0.<org.apache.ambari.server.agent.CommandReport: java.util.Map configurationTags> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r22 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r23 = virtualinvoke $r22.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role>
org.apache.ambari.server.agent.ExecutionCommand.getRole : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String role> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getRole : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setRole(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1
org.apache.ambari.server.agent.CommandReport.setRole : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String role> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r24 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r13 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r25 = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)]
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : goto [?= virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)] >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r24.<org.apache.ambari.server.agent.CommandReport: void setRoleCommand(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1
org.apache.ambari.server.agent.CommandReport.setRoleCommand : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String roleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r26 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r27 = virtualinvoke $r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName>
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : $r1 = r0.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1
org.apache.ambari.server.agent.ExecutionCommand.getServiceName : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setServiceName(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1
org.apache.ambari.server.agent.CommandReport.setServiceName : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String serviceName> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r28 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $l3 = virtualinvoke $r28.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId>
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : $l0 = r0.<org.apache.ambari.server.agent.ExecutionCommand: long taskId> >>>>>>>> org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0
org.apache.ambari.server.agent.ExecutionCommand.getTaskId : return $l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setTaskId(long)>($l3) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0
org.apache.ambari.server.agent.CommandReport.setTaskId : r0.<org.apache.ambari.server.agent.CommandReport: long taskId> = l0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setStructuredOut(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1
org.apache.ambari.server.agent.CommandReport.setStructuredOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String structuredOut> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r29 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r30 = r4 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r29.<org.apache.ambari.server.agent.CommandReport: void setStdErr(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1
org.apache.ambari.server.agent.CommandReport.setStdErr : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stderr> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r31 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r32 = r3 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r31.<org.apache.ambari.server.agent.CommandReport: void setStdOut(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1
org.apache.ambari.server.agent.CommandReport.setStdOut : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String stdout> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r33 = r5 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : $r34 = virtualinvoke r1.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke $r33.<org.apache.ambari.server.agent.CommandReport: void setStatus(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1
org.apache.ambari.server.agent.CommandReport.setStatus : r0.<org.apache.ambari.server.agent.CommandReport: java.lang.String status> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0)
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : virtualinvoke r5.<org.apache.ambari.server.agent.CommandReport: void setExitCode(int)>(i0) >>>>>>>> org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0
org.apache.ambari.server.agent.CommandReport.setExitCode : r0.<org.apache.ambari.server.agent.CommandReport: int exitCode> = i0 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5
org.apache.ambari.server.serveraction.AbstractServerAction.createCommandReport : return r5 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : return $r107
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : return $r107 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r39 = "oracle"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r39 = "oracle" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z1 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r37)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z1 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z1 != 0
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r77 = "oracle"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r77 = "oracle" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z3 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>(r37)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $z3 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>(r37) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z3 == 0
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = "oracle.jdbc.OracleDriver"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r15 = "oracle.jdbc.OracleDriver" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r78 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r78 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r78[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r78[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:oracle:thin:@//{0}", $r78)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r16 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:oracle:thin:@//{0}", $r78) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r79 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r79 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r79[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r79[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:oracle:thin:@//{0}", $r79)
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r18 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:oracle:thin:@//{0}", $r79) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = "org.eclipse.persistence.platform.database.OraclePlatform"
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r17 = "org.eclipse.persistence.platform.database.OraclePlatform" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r80 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r80 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r80[0] = r12
org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : $r80[0] = r12 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.RangerConfigCalculation.execute : r19 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("jdbc:oracle:thin:@//{0}", $r80)
