org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r8 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r9 = interfaceinvoke $r8.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest this$0>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1: org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest)>($r1)
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r2
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r1
org.apache.ambari.server.checks.ServicesMaintenanceModeCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r10 = (org.apache.ambari.server.state.Clusters) $r9 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r4 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r11 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r11 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r5 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r6 = (java.util.Map$Entry) $r13
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r6 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r7 = (org.apache.ambari.server.state.Service) $r14
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : r7 = (org.apache.ambari.server.state.Service) $r14 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z1 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: boolean isClientOnlyService()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z1 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: boolean isClientOnlyService()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z1 != 0
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r15 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r16 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $r15 != $r16
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $r15 != $r16 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z3 = virtualinvoke $r19.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : $z3 = virtualinvoke $r19.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z3 != 0
org.apache.ambari.server.checks.ServicesMaintenanceModeCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
