org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("ambariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setAmbariMetaInfo : virtualinvoke r4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r2 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r2 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing requests: {}", r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing requests: {}", r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r9 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r3 = $r9
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r3 = $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r5 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r10
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r5 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r11 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getHostComponents(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r11 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Set getHostComponents(org.apache.ambari.server.controller.ServiceComponentHostRequest)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing request {}", r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing request {}", r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r21 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String clusterName>
org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : return $r1
org.apache.ambari.server.controller.ServiceComponentHostRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r21 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r21 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r22 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z4 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z4 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r25 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r25 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r26 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r26 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r27 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r27 = interfaceinvoke $r25.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : goto [?= $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : goto [?= $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getHostname : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String hostname>
org.apache.ambari.server.controller.ServiceComponentHostRequest.getHostname : $r1 = r0.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String hostname> >>>>>>>> org.apache.ambari.server.controller.ServiceComponentHostRequest.getHostname : return $r1
org.apache.ambari.server.controller.ServiceComponentHostRequest.getHostname : return $r1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r31 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r31 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r32 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r32 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r33 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r33 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r34 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r33)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r34 = interfaceinvoke $r32.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r46 = $r45
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r46 = $r45 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r47 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r47 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Host not found", r46)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Host not found", r46) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r48 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r48 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r49 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r49 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r50 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r50 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r51 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r51 = virtualinvoke r1.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r49.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>($r50, $r51)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r49.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String,java.lang.String)>($r50, $r51) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r48.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Host resource doesn\'t exist", $r49)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : specialinvoke $r48.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Parent Host resource doesn\'t exist", $r49) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw $r48
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw $r48 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r21 = $r20
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r21 = $r20 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : z0 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : z0 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $i3 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $i3 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $i3 <= 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $i3 <= 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r22 = class "org/apache/ambari/server/HostNotFoundException"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r22 = class "org/apache/ambari/server/HostNotFoundException" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r23 = virtualinvoke r21.<org.apache.ambari.server.ParentObjectNotFoundException: java.lang.Throwable getCause()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r23 = virtualinvoke r21.<org.apache.ambari.server.ParentObjectNotFoundException: java.lang.Throwable getCause()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z3 = virtualinvoke $r22.<java.lang.Class: boolean isInstance(java.lang.Object)>($r23)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z3 = virtualinvoke $r22.<java.lang.Class: boolean isInstance(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r8 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r24
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : r8 = (org.apache.ambari.server.controller.ServiceComponentHostRequest) $r24 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r25 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : $r25 = virtualinvoke r8.<org.apache.ambari.server.controller.ServiceComponentHostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r25 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if $r25 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : goto [?= $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getHostComponents : throw r21
