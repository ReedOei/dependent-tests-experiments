org.apache.ambari.server.topology.Configuration.getParentConfiguration : $r1 = r0.<org.apache.ambari.server.topology.Configuration: org.apache.ambari.server.topology.Configuration parentConfiguration> >>>>>>>> org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1
org.apache.ambari.server.topology.Configuration.getParentConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getStack : return $r1
org.apache.ambari.server.topology.BlueprintImpl.getStack : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.BlueprintValidator validator>
org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.BlueprintValidator validator> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : interfaceinvoke $r1.<org.apache.ambari.server.topology.BlueprintValidator: void validateRequiredProperties()>()
org.apache.ambari.server.topology.BlueprintImpl.validateRequiredProperties : interfaceinvoke $r1.<org.apache.ambari.server.topology.BlueprintValidator: void validateRequiredProperties()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r1 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r2 = $r1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r17 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r17 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r18 = interfaceinvoke $r17.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.Configuration configuration>
org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : $r1 = r0.<org.apache.ambari.server.topology.BlueprintImpl: org.apache.ambari.server.topology.Configuration configuration> >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : return $r1
org.apache.ambari.server.topology.BlueprintImpl.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r3 = virtualinvoke $r18.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r3 = virtualinvoke $r18.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties>
org.apache.ambari.server.topology.Configuration.getProperties : $r1 = r0.<org.apache.ambari.server.topology.Configuration: java.util.Map properties> >>>>>>>> org.apache.ambari.server.topology.Configuration.getProperties : return $r1
org.apache.ambari.server.topology.Configuration.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r3 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r3 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r4 = $r19
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r4 = $r19 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z0 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r20 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r20 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r5 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r5 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z1 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r6 = (java.util.Map$Entry) $r21
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r6 = (java.util.Map$Entry) $r21 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r22 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r22 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r7 = (java.lang.String) $r22
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r7 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $r23 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $r23 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r25 = (java.util.Map) $r24
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r25 = (java.util.Map) $r24 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r8 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r8 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z2 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r27 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r27 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r9 = (java.util.Map$Entry) $r27
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r9 = (java.util.Map$Entry) $r27 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r10 = (java.lang.String) $r28
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r10 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r29 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r11 = (java.lang.String) $r29
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : r11 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r11 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if r11 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z3 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r11)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $z3 = staticinvoke <org.apache.ambari.server.utils.SecretReference: boolean isSecret(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.ambari.server.utils.SecretReference.isSecret : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $i0 = lengthof r1
org.apache.ambari.server.utils.SecretReference.isSecret : $i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : if $i0 != 4
org.apache.ambari.server.utils.SecretReference.isSecret : if $i0 != 4 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 0
org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : return $z1
org.apache.ambari.server.utils.SecretReference.isSecret : return $z1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z3 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $r2 = r1[0]
org.apache.ambari.server.utils.SecretReference.isSecret : $r2 = r1[0] >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SECRET")
org.apache.ambari.server.utils.SecretReference.isSecret : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SECRET") >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : if $z0 == 0
org.apache.ambari.server.utils.SecretReference.isSecret : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 1
org.apache.ambari.server.utils.SecretReference.isSecret : $z1 = 1 >>>>>>>> org.apache.ambari.server.utils.SecretReference.isSecret : goto [?= return $z1]
org.apache.ambari.server.utils.SecretReference.isSecret : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Config:")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Config:") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Property:")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Property:") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z0 = 1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z0 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r38 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r38 = new org.apache.ambari.server.topology.InvalidTopologyException >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r39 = new java.lang.StringBuilder
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secret references are not allowed in blueprints, replace following properties with real passwords:\n")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Secret references are not allowed in blueprints, replace following properties with real passwords:\n") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r41 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r41 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r38.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r43)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : specialinvoke $r38.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateRequiredProperties : throw $r38
